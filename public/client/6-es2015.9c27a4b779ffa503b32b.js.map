{"version":3,"sources":["node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/copy-to-clipboard/index.js","node_modules/lodash/property.js","node_modules/lodash/_initCloneObject.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","node_modules/lodash/isSymbol.js","src/common/core/ui/confirm-modal/confirm-modal.component.ts","src/common/core/ui/confirm-modal/confirm-modal.component.html","node_modules/lodash/isArguments.js","node_modules/lodash/_stackSet.js","node_modules/lodash/stubArray.js","node_modules/lodash/isSet.js","node_modules/lodash/_SetCache.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_toSource.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/memoize.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/_cloneBuffer.js","src/common/uploads/formatted-file-size.pipe.ts","node_modules/lodash/_isPrototype.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_stackClear.js","node_modules/lodash/keys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_mapToArray.js","node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/stubFalse.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/_arrayPush.js","src/common/core/ui/no-results-message/no-results-message.component.ts","src/common/core/ui/no-results-message/no-results-message.component.html","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_getNative.js","node_modules/lodash/isBuffer.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","node_modules/lodash/_baseAssignIn.js","src/common/uploads/directives/upload-button.directive.ts","node_modules/lodash/_isMasked.js","node_modules/toggle-selection/index.js","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_stringToPath.js","src/common/uploads/uploads.module.ts","src/common/core/ui/chip-input/chip-input.component.ts","src/common/core/ui/chip-input/chip-input.component.html","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isObject.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_Promise.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_memoizeCapped.js","node_modules/lodash/_matchesStrictComparable.js","src/common/core/ui/no-results-message/no-results-message.module.ts","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseHasIn.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_root.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/_getValue.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_copyArray.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_baseTimes.js","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_stackHas.js","node_modules/lodash/_freeGlobal.js","src/common/core/ui/chip-input/chip-input.module.ts","node_modules/lodash/_baseAssign.js","node_modules/lodash/_cloneDataView.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/isEqual.js","node_modules/lodash/_nativeCreate.js","(webpack)/buildin/module.js","node_modules/lodash/isArray.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_listCacheDelete.js","src/common/core/services/local-storage.service.ts","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/isTypedArray.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_createSet.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/toString.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_arrayMap.js","node_modules/lodash/_Map.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_arrayEach.js","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","node_modules/lodash/hasIn.js","node_modules/lodash/_baseAssignValue.js","src/common/core/ui/format-pipes/formatted-date.pipe.ts","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_mapCacheDelete.js","src/common/core/ui/format-pipes/format-pipes.module.ts","node_modules/lodash/_overArg.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","node_modules/lodash/isFunction.js","node_modules/lodash/eq.js","node_modules/lodash/_baseIsMatch.js","node_modules/lodash/keysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/get.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/uniqBy.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_setToArray.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","node_modules/lodash/_baseUnary.js","node_modules/lodash/_equalObjects.js","node_modules/lodash/isLength.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_DataView.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/noop.js","src/app/drive/folders/api/folders-api-routes.enum.ts","src/app/drive/folders/api/folders-api.service.ts","src/app/drive/drive-entry-api.service.ts","src/app/drive/folders/root-folder.ts","src/app/drive/drive-urls.service.ts","src/app/drive/state/actions/commands.ts","src/app/drive/state/models/drive-page.ts","src/app/drive/state/actions/events.ts","src/app/drive/state/models/drive-state-model.ts","src/app/drive/state/models/drive-state-model-defaults.ts","src/app/drive/uploads/drive-upload-validator.ts","src/app/drive/messages/loading-toast/loading-toast-messages.ts","src/app/drive/upload-input-config.ts","src/app/drive/state/drive-state.ts","src/app/drive/entries/supported-entry-types.ts","src/app/drive/files/components/file-icon/file-icon.component.ts","src/common/core/utils/kebab-case.ts","src/app/drive/files/components/file-icon/file-icon.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.ts","src/app/drive/interactions/drive-dom-cache.service.ts","src/app/drive/search/search-file-types.ts","src/common/core/types/pagination/pagination-response.ts","src/app/drive/search/main-searchbar/main-searchbar.component.html","src/app/drive/search/main-searchbar/main-searchbar.component.ts","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.html","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.html","src/app/drive/interactions/drop-targets/base-drop-target.ts","src/app/drive/interactions/drop-targets/folder-drop-target.directive.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/folders-tree/folders-tree.service.ts","src/common/core/ui/context-menu/available-context-menus.ts","src/common/core/ui/context-menu/context-menu-ref.ts","src/common/core/ui/context-menu/context-menu-data.ts","src/common/core/ui/context-menu/context-menu.service.ts","src/common/core/ui/context-menu/context-menu.directive.ts","src/app/drive/sidebar/folders-tree/folders-tree.component.html","src/app/drive/sidebar/folders-tree/folders-tree.component.ts","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.html","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.ts","src/app/drive/sidebar/sidebar.component.ts","src/app/drive/sidebar/sidebar.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.ts","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.html","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.ts","src/app/drive/details-sidebar/details-panel/details-panel.component.html","src/app/drive/details-sidebar/details-panel/details-panel.component.ts","src/app/drive/details-sidebar/details-sidebar.component.html","src/app/drive/details-sidebar/details-sidebar.component.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.html","src/app/drive/interactions/files-drag-select.service.ts","src/app/drive/interactions/drag-entry.service.ts","src/app/drive/interactions/drive-hammer-interactions.directive.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.html","src/app/drive/entries/available-sorts.ts","src/app/drive/header/entries-sort-button/entries-sort-button.component.html","src/app/drive/header/entries-sort-button/entries-sort-button.component.ts","src/app/drive/context-actions/drive-context-actions.ts","src/app/drive/context-actions/actions/trash-actions.ts","src/app/drive/sharing/links/shareable-links-api.service.ts","src/app/drive/sharing/links/share-link.state.ts","src/app/drive/sharing/links/link-options/link-options.component.html","src/app/drive/sharing/links/link-options/link-options.component.ts","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.html","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.ts","src/common/core/utils/share-link-socially.ts","src/app/drive/permissions/drive-entry-permissions.ts","src/app/drive/sharing/shares-api.service.ts","src/app/drive/sharing/state/share-dialog.state.ts","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.html","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.ts","src/app/drive/sharing/entries-access-table/entries-access-table.component.html","src/app/drive/sharing/entries-access-table/entries-access-table.component.ts","src/app/drive/sharing/share-dialog/share-dialog.component.html","src/app/drive/sharing/share-dialog/share-dialog.component.ts","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.ts","src/app/drive/context-actions/actions/shares-actions.ts","src/app/drive/context-actions/actions/folder-actions.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.html","src/app/drive/context-actions/actions/entry-actions.ts","src/app/drive/context-actions/actions/trash-page-actions.ts","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.html","src/app/drive/header/file-list-header/file-list-header.component.ts","src/app/drive/header/file-list-header/file-list-header.component.html","src/app/drive/interactions/toggle-selected-class.directive.ts","src/common/uploads/utils/read-uploaded-folders.ts","src/common/uploads/directives/upload-dropzone.directive.ts","src/common/core/ui/infinite-scroll/infinite.scroll.ts","src/app/drive/interactions/drive-infinite-scroll.directive.ts","src/app/drive/drive.component.ts","src/app/drive/drive.component.html","src/common/core/keybinds/keycodes.enum.ts","src/common/core/keybinds/keybinds.service.ts","src/app/drive/files/components/files-grid/files-grid.component.html","src/app/drive/files/components/files-grid/files-grid.component.ts","src/app/drive/files/components/files-list/files-list.component.html","src/app/drive/files/components/files-list/files-list.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.html","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.ts","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.html","src/app/drive/messages/no-starred-entries/no-starred-entries.component.ts","src/app/drive/messages/no-starred-entries/no-starred-entries.component.html","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.ts","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.ts","src/app/drive/messages/no-search-entries/no-search-entries.component.html","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.ts","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.html","src/app/drive/messages/no-folder-entries/no-folder-entries.component.ts","src/app/drive/messages/no-folder-entries/no-folder-entries.component.html","src/app/drive/entries/entries-container/entries-container.component.html","src/app/drive/entries/entries-container/entries-container.component.ts","src/common/file-preview/current-preview-file.ts","src/common/file-preview/preview-url-transformer.ts","src/common/file-preview/base-file-preview.ts","src/common/file-preview/default-preview/default-preview.component.ts","src/common/file-preview/default-preview/default-preview.component.html","src/common/file-preview/text-preview/text-preview.component.html","src/common/file-preview/text-preview/text-preview.component.ts","src/common/file-preview/audio-preview/audio-preview.component.html","src/common/file-preview/audio-preview/audio-preview.component.ts","src/common/file-preview/video-preview/video-preview.component.html","src/common/file-preview/video-preview/video-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.html","src/common/file-preview/pdf-preview/pdf-preview.component.ts","src/common/file-preview/pdf-preview/pdf-preview.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","src/common/file-preview/available-previews.ts","src/common/file-preview/preview-files.service.ts","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.html","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","src/common/file-preview/preview-container/preview-container.component.html","src/common/file-preview/preview-container/preview-container.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.html","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.ts","src/app/drive/preview/folder-preview/folder-preview.component.html","src/app/drive/preview/folder-preview/folder-preview.component.ts","src/app/drive/preview/link-preview-container/link-preview-container.component.html","src/app/drive/preview/link-preview-container/link-preview-container.component.ts","src/app/drive/drive-routing.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","src/app/drive/context-actions/drive-context-menus.ts","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.html","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.ts","src/app/drive/uploads/uploads-panel/uploads-panel.component.html","src/app/drive/uploads/uploads-panel/uploads-panel.component.ts","src/common/file-preview/file-preview.module.ts","src/app/drive/state/handlers/overlay-handler.ts","src/app/drive/state/handlers/donwlod-handler.ts","src/common/uploads/utils/download-file-from-url.ts","src/app/drive/messages/loading-toast/loading-toast.component.ts","src/app/drive/messages/loading-toast/loading-toast.component.html","src/app/drive/state/handlers/toast-handler.ts","src/app/drive/state/handlers/upload-panel-handler.ts","src/app/drive/state/handlers/dialog-handler.ts","src/app/drive/sharing/sharing.module.ts","src/app/drive/state/handlers/reset-scroll-handler.ts","src/app/drive/state/handlers/page-change-handler.ts","src/app/drive/state/handlers/page-load-handler.ts","src/app/drive/state/handlers/remove-star-handler.ts","src/common/core/ui/context-menu/context-menu.module.ts","src/app/drive/drive.module.ts","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_isIndex.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_Set.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/isMap.js","node_modules/lodash/identity.js","node_modules/lodash/_baseToString.js"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","args","super","this","_sticky","_hasStickyChanged","v","prevValue","hasStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","t","ɵdir","type","selectors","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","contentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","hostAttrs","CdkFooterCell","CdkCell","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef","ngOnChanges","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef","CdkRowDef","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","ɵcmp","decls","vars","consts","directives","encapsulation","CdkFooterRow","CdkRow","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","CdkTable","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","Subject","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","BehaviorSubject","start","end","Number","MAX_VALUE","setAttribute","nodeName","_trackByFn","fn","console","warn","JSON","stringify","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","data","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","context","updateStickyColumnStyles","headerRowDef","footerRowDef","delete","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","shift","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","unsubscribe","dataStream","connect","isObservable","isArray","of","undefined","pipe","takeUntil","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","renderIndex","outlet","index","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","viewQuery","exportAs","ngContentSelectors","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTableModule","ɵmod","ɵinj","factory","MatTextColumn_th_1_Template","ctx_r4","MatTextColumn_td_2_Template","data_r6","ctx_r5","MatTable","arguments","ɵMatTable_BaseFactory","styles","MatCellDef","ɵMatCellDef_BaseFactory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatRowDef","ɵMatRowDef_BaseFactory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatFooterRow","ɵMatFooterRow_BaseFactory","MatRow","ɵMatRow_BaseFactory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTableModule","imports","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_updateChangeSubscription","_sort","_paginator","paginator","sortChange","merge","initialized","pageChange","page","filteredData","combineLatest","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","assocIndexOf","module","exports","__data__","Uint8Array","arrayBuffer","result","constructor","byteLength","deselectCurrent","clipboardToIE11Formatting","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","textContent","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","window","clearData","setData","onCopy","body","selectNodeContents","addRange","execCommand","err","error","copyKey","test","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","baseProperty","basePropertyDeep","isKey","toKey","path","baseCreate","getPrototype","isPrototype","object","MatAutocomplete_ng_template_0_Template","_classList","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","autoActiveFirstOption","MatAutocomplete","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","split","className","_setVisibilityClasses","_keyManager","withWrap","emit","toArray","_setVisibility","scrollTop","panel","event","optionGroups","disableRipple","panelWidth","outputs","changeDetection","MatAutocompleteOrigin","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_formField","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","onStable","asObservable","_scrollStrategy","_getWindow","runOutsideAngular","_isInsideShadowRoot","_positionStrategy","_setStrategyPositions","updatePosition","removeEventListener","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","_overlayRef","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","composedPath","target","formField","contains","overlayElement","_setTriggerValue","isDisabled","disabled","keyCode","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","_getPanelWidth","_portal","_getOverlayConfig","keydownEvents","altKey","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPosition","originX","originY","overlayX","overlayY","abovePosition","panelClass","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","setActiveItem","readOnly","_a","defaultView","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","providers","baseGetTag","isObjectLike","ConfirmModalComponent","dialogRef","i18n","settings","close","title","bodyBold","ok","cancel","confirm","baseIsArguments","objectProto","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","call","ListCache","MapCache","pairs","LARGE_ARRAY_SIZE","size","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","setCacheAdd","setCacheHas","SetCache","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_ngZone","_animationMode","_","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","toggleChange","dragChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r4","_r8","inputId","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","root","funcToString","Function","func","baseGet","memoize","resolver","TypeError","memoized","apply","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","entry","castPath","isIndex","isLength","hasFunc","stringToPath","freeExports","freeModule","Buffer","allocUnsafe","buffer","isDeep","copy","FormattedFileSizePipe","bytes","precision","isNaN","String","isFinite","Ctor","arrayLikeKeys","baseKeys","isArrayLike","isSymbol","reIsDeepProp","reIsPlainProp","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipTrailingIcon","MatChip","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","coercedValue","_dispatchSelectionChange","_value","selectable","hasAttribute","tagName","chip","_removeTriggerEvents","_markForCheck","isUserInput","removable","toggleSelected","run","MatChipRemove","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","_parentChip","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","_disabled","ariaOrientation","valueChange","valueAccessor","multiple","_selectionModel","empty","_syncChipsState","_initializeSelection","writeValue","_chipInput","stateChanges","placeholder","_placeholder","focused","_hasFocusedChip","chips","withVerticalOrientation","withHorizontalOrientation","_allowFocusEscape","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","_dropSubscriptions","inputElement","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","_clearSelection","_selectValue","_sortValues","correspondingChip","selectViaInteraction","select","fallbackValue","valueToEmit","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","_keydown","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","input","separators","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","useValue","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","baseClone","CLONE_DEEP_FLAG","offset","NoResultsMessageComponent","horizontal","isObject","fromIndex","baseIsNative","getValue","stubFalse","isBuffer","MatSortHeader_div_3_Template","_r2","_disableViewStateAnimation","_getArrowViewState","_getArrowDirectionState","MatSortBase","_MatSortMixinBase","MatSort","sortables","_stateChanges","_direction","_disableClear","sortable","getNextSortDirection","sortDirectionCycle","disableClear","sortOrder","nextDirectionIndex","_markInitialized","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","sortButtonLabel","ɵprov","token","MAT_SORT_HEADER_INTL_PROVIDER","parentIntl","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","changeDetectorRef","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","origin","_setIndicatorHintVisible","register","deregister","visible","_isDisabled","viewState","_getAriaSortAttribute","attrs","_renderArrow","animation","MatSortModule","copyObject","keysIn","UploadButtonDirective","el","config","filesSelected","files","uid","coreJsData","maskSrcKey","exec","IE_PROTO","rangeCount","ranges","getRangeAt","blur","getSymbolsIn","baseGetAllKeys","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","match","number","quote","subString","UploadsModule","ChipInputComponent","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","splice","propagateChange","propagate","matAutocomplete","isOpen","duplicate","inputEl","setValue","valueChanges","query","addFromChipInput","addFromAutocomplete","getTag","getMapData","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteOffset","convert","stacked","NoResultsMessageModule","nativeCreate","predicate","fromRight","freeGlobal","freeSelf","self","arrayIncludes","arrayIncludesWith","cacheHas","createSet","iteratee","comparator","includes","isCommon","seen","outer","computed","seenIndex","resIndex","getPrototypeOf","isFunction","baseAssignValue","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","isMasked","toSource","reIsHostCtor","reIsNative","RegExp","getRawTag","objectToString","getNative","defineProperty","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","cloneableTags","isFlat","isFull","isArr","isFunc","subValue","keysFunc","props","nativeKeysIn","isProto","isKeyable","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseFindIndex","baseIsNaN","strictIndexOf","n","getSymbols","global","ChipInputModule","cloneArrayBuffer","dataView","MatDrawerContainer_div_0_Template","_r7","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r11","ctx_r8","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","ngZone","_contentMarginChanges","MatDrawerContainer","_contentMargins","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","_takeFocus","_restoreFocus","disableClose","x","y","_updateFocusTrapState","_autoFocus","mode","toggle","o","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","_openedVia","destroy","openedVia","open","offsetWidth","enabled","_animationStartListener","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","viewportRuler","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_start","_end","_backdropOverride","_userContent","_content","_allDrawers","drawer","reset","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_closeModalDrawer","_canHaveBackdrop","autosize","hasBackdrop","MatSidenavContent","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","webpackPolyfill","deprecate","paths","enumerable","l","baseIsMatch","getMatchData","matchData","pop","LocalStorage","storage","localStorageAvailable","localStorage","defaultValue","parse","getItem","setItem","removeItem","reFlags","regexp","lastIndex","baseTimes","isTypedArray","inherited","isArg","isBuff","isType","skipIndexes","baseIsTypedArray","nodeIsTypedArray","MatSelect_span_4_Template","ctx_r20","MatSelect_span_5_span_1_Template","ctx_r23","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r21","customTrigger","MatSelect_ng_template_8_Template","_r27","_panelDoneAnimatingStream","ctx_r22","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","transformPanel","minWidth","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelect","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_scrollTop","_destroy","_optionIds","_offsetY","_positions","_disableOptionCentering","_focused","optionSelectionChanges","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","newValue","_typeaheadDebounceInterval","_id","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","added","_resetOptions","withTypeAhead","getComputedStyle","fontSize","_calculateOverlayPosition","_highlightCorrectOption","_isRtl","selectedOptions","viewValue","_handleOpenKeydown","_handleClosedKeydown","isOpenKey","manager","isTyping","previouslySelectedOption","selectedOption","announce","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","positionChange","_calculateOverlayOffsetX","isEmpty","correspondingOption","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","sortComparator","activeOptionIndex","_getItemHeight","current","itemHeight","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","max","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","group","leftOverflow","rightOverflow","round","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_getAriaLabelledby","_getAriaActiveDescendant","_onAttached","_r18","MatSelectModule","typedArrayTags","noop","objectCreate","proto","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","arrayPush","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","defaultThrottleConfig","leading","trailing","throttleTime","duration","scheduler","lift","ThrottleTimeOperator","subscriber","Subscriber","destination","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","arg","clearThrottle","baseHasIn","hasPath","FormattedDatePipe","_locale","angularPipe","timezone","locale","baseIndexOf","isNew","FormatPipesModule","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r11","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r15","updateOutlineGap","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r7","MatFormField_div_13_Template","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r17","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r9","_c5","MatError","matFormFieldAnimations","transitionMessages","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","MatHint","MatLabel","MatPlaceholder","MatPrefix","MatSuffix","nextUniqueId$2","MatFormFieldBase","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","oldValue","_processHints","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_connectionContainerRef","_validateControlChild","control","_validatePlaceholders","_syncDescribedByIds","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","requestAnimationFrame","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_label","_validateHints","startHint","endHint","hint","float","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","outlineGapPadding","rect","getRootNode","rootNode","underlineRef","_inputContainerRef","_hideControlPlaceholder","autofilled","_shouldForward","onContainerClick","MatFormFieldModule","noCustomizer","baseKeysIn","freeProcess","process","require","types","binding","arraySome","isPartial","arrLength","othLength","arrValue","othValue","compared","othIndex","baseIteratee","baseUniq","UploadProgressBarComponent","uploadQueue","cd","hidden","subscription","totalProgress","progress","count$","pending","objProps","objLength","skipCtor","objCtor","othCtor","baseMatches","baseMatchesProperty","identity","property","FOLDERS_API_ROUTES","FoldersApiService","http","currentUser","params","GET_ALL","parent_id","post","CREATE","hash","DriveEntryApiService","userId","entryId","put","emptyTrash","ROOT_FOLDER","DriveUrlsService","folder","driveRoot","LoadUserFolders","LoadUserSpaceUsage","BuildFolderTree","folders","OpenFolder","OpenSearchPage","queryParams","SelectEntries","SelectAllEntries","DeselectAllEntries","DeleteSelectedEntries","OpenUploadsPanel","CloseUploadsPanel","AddEntries","MoveEntries","OpenDialog","dialog","OpenConfirmDialog","confirmAction","SetViewMode","ToggleDetailsSidebar","ToggleSidebar","UploadFiles","RestoreTrashedEntries","DeleteTrashedEntriesForever","EmptyTrash","OpenFilePreview","DownloadEntries","link","password","AddStar","RemoveStar","RemoveEntries","LoadMoreEntries","loadMore","ReloadPageEntries","CopySelectedEntries","OpenUploadWindow","ShowLoadingToast","HideLoadingToast","ResetState","UpdateEntries","SetCurrentUser","user","UpdateEntryDescription","description","DrivePage","viewName","folderHash","hasActions","sortColumn","sortDirection","RECENT_PAGE","disableSort","recentOnly","SEARCH_PAGE","SHARES_PAGE","sharedOnly","TRASH_PAGE","deletedOnly","STARRED_PAGE","starredOnly","ROOT_FOLDER_PAGE","FOLDER_PAGE","RecentEntriesPageOpened","orderBy","FolderPageOpened","SharesFolderOpened","TrashPageOpened","SearchPageOpened","StarredPageOpened","EntriesSelectedViaDrag","EntrySelectedViaContextMenu","EntryTapped","EntryDoubleTapped","FileDeleteSuccess","deletedFiles","EntryContextMenuOpened","NewFolderCreated","EntryRenamed","newName","StartedDragging","StoppedDragging","MoveEntriesSuccess","oldLocation","MoveEntriesFailed","messages","TrashedEntriesDeleteSuccess","TrashedEntriesRestoreSuccess","NotEnoughSpaceError","UserSpaceUsageChanged","BreakpointChanged","status","DRIVE_STATE_MODEL_DEFAULTS","isMobile","activePage","folderTree","flatFolders","userFoldersLoaded","selectedEntries","dragging","loading","uploadsPanelOpen","viewMode","detailsVisible","sidebarOpen","spaceUsage","available","used","meta","currentPage","lastPage","DriveUploadValidator","DEFAULT_MAX_FILE_SIZE_MB","validations","maxSize","getMaxFileSize","allowedExtensions","getAllowedExtensions","blockedExtensions","getBlockedExtensions","extensions","convertToBytes","getJson","LoadingToastMessages","DRIVE_UPLOAD_INPUT_CONFIG","DriveState","foldersApi","entriesApi","router","driveUrls","uploads","store","localStore","validator","uploadInputConfig","every","tags","spaceUsed","spaceAvail","permission","folderUser","users","u","owns_entry","entry_permissions","activeFolder","userHasPermission","edit","userCanEditFolder","getAllForCurrentUser","tap","response","dispatch","action","hashTable","tree","len","getState","parent","patchState","oldState","newState","orderDir","transformQueryParams","getEntriesForFolder","last_page","current_page","currentFolder","navigate","oldParams","selectSnapshot","entryDoubleTapped","alreadySelected","findIndex","curr","entryIds","selectedEntryIds","actions","selectedEntryParent","newFolderId","canMoveEntriesTo","moveEntries","minimal","finalize","currentEntries","newEntries","newSize","sum","file_size","enoughSpaceLeftToUpload","parentId","httpParams","fileEntry","newEntry","f","deleteForever","restoredEntries","restore","addStar","removeStar","removeTag","copyEntries","directory","getSpaceUsage","mainEntries","updatedEntry","mainIndex","update","setState","folderId","file","movingEntries","startsWith","cancelUncompleted","selectedEntry","selectedEntryOrActiveFolder","userSpaceUsed","userSpaceAvailable","userCanEditSelectedFolder","SUPPORTED_ENTRY_TYPES","FileIconComponent","mime","EntryDragPreviewComponent","Observable","DriveDomCacheService","SEARCH_FILE_TYPES","EMPTY_PAGINATION_RESPONSE","pagination","MainSearchbarComponent","driveApi","defaultResults","results$","displayFn","lastQuery","setDefaultResults","debounceTime","distinctUntilChanged","q","switchMap","search","content","openSearchPage","resetForm","closePanelAndBlur","getCurrentUserEntries","per_page","entryType","executeAction","CrupdateFolderDialogComponent","folderName","errors","setErrors","SidebarActionButtonsComponent","openUploadsPanel","openNewFolderDialog","canUpload","BaseDropTarget","subs","onDragStart","onDragEnd","enter","fromEvent","onDragEnter","leave","onDragLeave","classes","canDrop","removeDragOverClass","sub","FolderDropTargetDirective","FlatTreeControl","expansionModel","dataNode","collapseDescendants","expandDescendants","toBeProcessed","getDescendants","getLevel","isExpandable","results","dataNodes","CDK_TREE_NODE_OUTLET_NODE","CdkTreeNodeOutlet","_node","CdkTreeNodeOutletContext","CdkTreeNodeDef","getTreeControlFunctionsMissingError","CdkTree","_levels","treeControl","_nodeOutlet","_dataSubscription","defaultNodeDefs","_nodeDefs","_defaultNodeDef","renderNodeChanges","dataDiffer","parentData","adjustedPreviousIndex","insertNode","nodeDef","nodeData","node","_getNodeDef","level","mostRecentTreeNode","CdkTreeNode","_tree","_dataChanges","_setRoleFromData","isExpanded","getChildren","childrenNodes","_setRoleFromChildren","CdkNestedTreeNode","updateChildrenNodes","nodeOutlet","_clear","ngOnDestroy","_getNodeOutlet","_children","outlets","cssUnitPattern","CdkTreeNodePadding","_treeNode","_renderer","indentUnits","_indent","_setPadding","_level","indent","units","parts","nodeLevel","forceChange","padding","_paddingIndent","_currentPadding","paddingProp","resetProp","setStyle","CdkTreeNodeToggle","_recursive","recursive","toggleDescendants","_toggle","CdkTreeModule","_MatTreeNodeMixinBase","MatTreeNode","MatTreeNodeDef","ɵMatTreeNodeDef_BaseFactory","MatNestedTreeNode","ngAfterContentInit","MatTreeNodePadding","ɵMatTreeNodePadding_BaseFactory","MatTreeNodeOutlet","MatTree","ɵMatTree_BaseFactory","MatTreeNodeToggle","ɵMatTreeNodeToggle_BaseFactory","MatTreeModule","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","take","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","_treeControl","_treeFlattener","_flattenedData","_expandedData","flattenNodes","collectionViewer","expandFlattenedNodes","FoldersTreeService","createTreeFlattener","createTreeControl","createTreeDataSource","bindToStore","flattener","transformer","userFolders$","assign","expandable","userFolders","AVAILABLE_CONTEXT_MENUS","ContextMenuRef","attachments","backdropElement","CONTEXT_MENU_DATA","ContextMenu","zone","injector","events","component","createOverlay","openContextMenu","portal","bindEventsToOverlay","removeLastOrigin","getMenuPositionStrategy","backdropClass","contextMenuElement","createOriginFromEvent","primary","lastOrigin","HTMLElement","EventTarget","clientY","offsetY","clientX","ContextMenuDirective","contextMenu","_availableMenus","disableContextMenu","availableMenus","getMenuComponent","getMenuData","FoldersTreeComponent","expanded","showRootNode","folderSelected","selectedFolder","AvailableSpaceIndicatorComponent","spaceUsedPercent","SidebarComponent","urls","openFolder","EntryDescriptionPanelComponent","editingDescription$","savingDescription$","textArea","queryList","FileThumbnailComponent","url","thumbnail","separator","DetailsPanelComponent","DetailsSidebarComponent","FilesGridItemComponent","driveEntry","FilesDragSelectService","initial","cacheClientRects","createSelectBox","bindScroll","hammerToRelative","scrollCont","selectBox","lastPanEvent","resizeBox","removeSelectBox","dispatchSelectedAction","unbindScroll","newPos","getNewSelectorPosition","scrollAndRepositionSelector","selectIntersectingElements","tmp","x1","y1","x2","y2","area","rectToRelative","filesContRect","edge","reachedAreaEdge","scrollBy","scrollDiff","scrollValue","scrollHeight","applyPosition","selectedBoxRect","getGridElements","gridItem","center","dataset","filesCont","scrollContRect","scrollListener","DragEntryService","domCache","dragPreview","DriveHammerInteractionsDirective","dragSelect","dragEntry","subscriptions","bindToHammer","hammerManager","enable","createHammerManager","onPanStart","onPan","onPanEnd","onTap","onDoubleTap","Hammer","Manager","Tap","pan","Pan","doubleTap","taps","recognizeWith","on","gridElement","getEntryEl","panService","getEntryByEl","en","entryEl","srcEvent","closest","DriveContextMenuComponent","EntryBreadcrumbsComponent","breadcrumb","combined","bindToActivePage","breadcrumbs","getFolderRootBreadcrumb","folderPath","getBreadcrumbForFolder","allFolders","pathFolder","userOwnsFolder","userOwnsActiveFolder","generateBreadCrumb","DriveToolbarComponent","AVAILABLE_SORTS","DEFAULT_VALUE","EntriesSortButtonComponent","btnDisabled","availableSorts","sort$","DriveContextActions","updateStatus","multipleEntriesSelected","allStarred","allSelectedEntriesStarred","onlyFoldersSelected","noopTrue","TrashActions","icon","showInCompact","execute","ShareableLinksApiService","linkId","LoadShareableLink","UpdateShareableLink","CreateShareableLink","DeleteShareableLink","ToggleOptionsPanel","LinkCopySuccess","ResetShareLinkState","defaultState","optionsPanelVisible","backendErrors","linkOptions","allowDownload","allowEdit","expiresAt","ShareLinkState","linksApi","entry_id","errorResponse","cachedLink","findByEntryId","autoCreate","LinkOptionsComponent","form","date","time","passwordVisible","expirationVisible","bindToLinkChange","getPayload","payload","link$","hydrateExpirationForm","expires_at","patchValue","allow_edit","allow_download","Date","toJSON","saveChanges","toggleOptionsPanel","ShareLinkDialogComponent","toast","actions$","shareableLink$","bindToOptionsPanelToggle","s","focusInput","getBaseUrl","optionsVisible","network","image","mediaItem","location","href","innerWidth","innerHeight","getElementById","overflow","DRIVE_ENTRY_FULL_PERMISSIONS","download","SharesApiService","SetInitialUsers","UpdateUserPermissions","permissions","RemoveUser","SetUsers","SaveChanges","ShareEntries","ShareEntriesFailed","ShareDialogState","sharesApi","usersWithAccess","original","uniqueUsers","p","varies","updateUsers","newUsers","updateEntriesInDriveStore","shareEntries","updatedEntries","SharingPermissionsButtonComponent","compact","selectPermission","EntriesAccessTableComponent","newPermissions","dirty","ShareDialogComponent","destroyed$","suggestUserEmails","getAll","email","resetModel","bindToShareError","bindToShareModel","emails","shareModel","setErrorMessages","RenameEntryDialogComponent","entryName","SharesActions","shares","getSelectedEntries","userCanEditSelectedEntries","detachUser","FolderActions","separatorAfter","openUploadWindow","MoveEntriesDialogComponent","loading$","failure","EntryActions","folderIsSelected","selectedFolderId","TrashPageActions","ContextActionsContainerComponent","hasMoreActions$","setActions","moreActionsButton","getActions","setActionsForEntry","ToolbarActionsComponent","toggleViewMode","ToggleDetails","anythingSelected","detailsOpen","FileListHeaderComponent","sortFormControl","activePage$","emitEvent","ToggleSelectedClassDirective","els","readDirRecursive","createReader","readEntries","childEntry","isDirectory","transformFileEntry","fullPath","UploadDropzoneDirective","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","kind","webkitGetAsEntry","hasFiles","InfiniteScroll","threshold","scrollSub","getScrollContainer","capture","passive","onScroll","canLoadMore","isLoading","offsetHeight","scrollY","documentElement","loadMoreItems","DriveInfiniteScrollDirective","canLoadMoreEntries","DriveComponent","route","breakpoints","setViewMode","cacheDemoElements","observeBreakpointChanges","getModel","model$","filesContainer","scrollContainer","observe","matches","toggleSidebar","uploadFiles","Keycodes","Keybinds","bindings","keybind","callback","parseKeybindString","keybindString","executeBindings","bindingMatches","ctrl","parsed","part","FilesGridComponent","disableInteractions","FilesListComponent","NoRecentEntriesComponent","NoTrashedEntriesComponent","NoStarredEntriesComponent","NoSharedEntriesComponent","NoSearchEntriesComponent","UploadDropzoneComponent","NoFolderEntriesComponent","EntriesContainerComponent","keybinds","tabindex","keybindSub","listenOn","addWithPreventDefault","entriesEmpty","activePageName","CURRENT_PREVIEW_FILE","PREVIEW_URL_TRANSFORMER","BaseFilePreview","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","responseType","DefaultPreviewComponent","TextPreviewComponent","content$","fileTooLarge$","loadFileContents","getContents","AudioPreviewComponent","invalidMedia","canPlayVideo","player","src","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","showDefaultPreview$","showDefaultPreview","iframe","onload","clearTimeout","timeoutRef","stopLoading","getIframeSrc","catch","reject","previewUrl","preview_token","getGoogleDocsUrl","encodeURIComponent","AVAILABLE_PREVIEWS","DefaultPreviews","video","audio","pdf","spreadsheet","powerPoint","word","PreviewFilesService","availablePreviews","previewUriTransformer","haveNext","updateMeta","updatePortal","havePrevious","newPointer","oldPointer","pointer","total","getCurrent","createInjector","activeFile","injectionTokens","LinkPreviewPasswordPanelComponent","links","passwordControl","passwordError$","passwordValid","checkPassword","handlePasswordCheck","submitPassword","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","PreviewContainerComponent","downloadSub","comp","instance","FilePreviewOverlayComponent","bindToDownload","previewContainer","optionsButton","shareableLink","closeOverlay","FolderPreviewComponent","linkApi","breadcrumb$","pagination$","ngOnInit","loadChildren","generateBreadcrumb","setPagination","folderChildren","ent","activeEntry","hideMoreOptionsBtn","getEntry","openPreviewOverlay","makeLinkHash","subFolder","replaceChildren","order","findByHash","withEntries","onClick","LinkPreviewContainerComponent","data$","passwordPanelVisible$","linkChanged","setBackgroundClass","togglePasswordPanel","showPreview","importEntry","replacements","dashboardRoutes","canActivate","DriveRoutingModule","forChild","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","ctx_r2","MatSpinner__svg_circle_2_Template","ctx_r3","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MatProgressSpinner","_diameter","_fallbackAnimation","trackedDiameters","_diameters","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","_strokeWidth","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","_viewBox","MatSpinner","MatProgressSpinnerModule","DRIVE_CONTEXT_MENUS","UploadsPanelItemComponent","upload","progress$","animationFrame","UploadsPanelComponent","activeUploads","minimized$","toggleMinimized","FilePreviewModule","useClass","OverlayHandler","DownloadHandler","click","getDownloadUrl","hashes","getEntryHashes","LoadingToastComponent","ToastHandler","entriesDeleted","entriesStarred","entriesUnstarred","entriesMoveFailed","folderCreated","entriesMoved","entriesDeletedForever","entriesRestoredFromTrash","entryRenamed","linkCopiedToClipboard","notEnoughSpace","loadingToast","onAction","oldName","toastRef","openComponent","dismiss","overlayConfig","mobilePosition","UploadPanelHandler","overlayPanel","closeUploadsPanel","uploadPanelRef","DialogHandler","openConfirmDialog","beforeClosed","confirmed","SharingModule","ResetScrollHandler","scrollTo","PageChangeHandler","PageLoadHandler","urlAfterRedirects","isLoggedIn","getPageLoadAction","getPageUriParams","pageName","firstChild","RemoveStarHandler","ContextMenuModule","STATE_HANDLERS","DriveModule","handler","ext","forFeature","baseIsEqualDeep","reIsUint","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r16","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r24","i_r17","_r12","ctx_r13","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r28","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r25","i_r26","ctx_r15","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","show","_setStyles","visibility","inkBar","MatTabContent","MatTabLabel","ɵMatTabLabel_BaseFactory","MatTabBase","_MatTabMixinBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","isActive","_templateLabel","_explicitContent","_implicitContent","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","_animationDuration","_backgroundColor","backgroundColor","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","tabHeader","focusIndex","idx","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","passiveEventListenerOptions","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","MatTabLinkMixinBase","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","focusMonitor","_tabLinkRipple","MatTabsModule","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","typedArray","baseIsMap","nodeIsMap","arrayMap","symbolToString"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r4.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r6 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r5.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.dataAccessor(data_r6, ctx_r5.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1.id)(\"ngClass\", ctx_r1._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                window.addEventListener('blur', this._windowBlurHandler);\n            }));\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        /** @type {?} */\n        const belowPosition = {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        };\n        /** @type {?} */\n        const abovePosition = {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            // The overlay edge connected to the trigger should have squared corners, while\n            // the opposite end has rounded corners. We apply a CSS class to swap the\n            // border-radius based on the overlay position.\n            panelClass: 'mat-autocomplete-panel-above'\n        };\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = [abovePosition];\n        }\n        else if (this.position === 'below') {\n            positions = [belowPosition];\n        }\n        else {\n            positions = [belowPosition, abovePosition];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data.title = this.i18n.t(this.data.title);\r\n        this.data.body = this.i18n.t(this.data.body);\r\n        if (this.data.bodyBold) this.data.bodyBold = this.i18n.t(this.data.bodyBold);\r\n        this.data.ok = this.data.ok ? this.i18n.t(this.data.ok) : this.i18n.t('Confirm');\r\n        this.data.cancel = this.data.cancel ? this.i18n.t(this.data.cancel) : this.i18n.t('Cancel');\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n}","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r4 = ɵngcc0.ɵɵreference(1);\n        const _r8 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r8.textContent || !_r8.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r4)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Component({\r\n    selector: 'no-results-message',\r\n    templateUrl: './no-results-message.component.html',\r\n    styleUrls: ['./no-results-message.component.scss'],\r\n    host: {class: 'no-results-message'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NoResultsMessageComponent {\r\n    @Input() @HostBinding('class.horizontal') horizontal = false;\r\n    constructor(public settings: Settings) {}\r\n}\r\n","<div class=\"icon\">\r\n    <img [src]=\"settings.getAssetUrl('images/no-results.svg')\">\r\n</div>\r\n<div class=\"text\">\r\n    <div class=\"main\">\r\n        <ng-content select=\"[primary-text]\"></ng-content>\r\n    </div>\r\n    <div class=\"secondary\">\r\n        <ng-content select=\"[secondary-text]\"></ng-content>\r\n    </div>\r\n</div>","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() suggestFn: (query: string) => Observable<string[]>;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl', {static: true}) inputEl: HTMLInputElement;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: Function;\r\n    public items$ = new BehaviorSubject<string[]>([]);\r\n    public suggestedValues$ = new Subject<string[]>();\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: string, propagate = true) {\r\n        if ( ! this.matAutocomplete.isOpen) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: string, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: string, propagate = true) {\r\n        value = value ? value.trim() : '';\r\n        const duplicate = this.items$.value.indexOf(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    public writeValue(value: string[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            this.suggestedValues$.next(values);\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"true\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{item}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.viewValue)\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{value}}</mat-option>\r\n</mat-autocomplete>\r\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent\r\n    ],\r\n    exports: [\r\n        ChipInputComponent\r\n    ]\r\n})\r\nexport class ChipInputModule {\r\n}\r\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r4._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r8._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorage {\r\n    private readonly storage;\r\n\r\n    constructor() {\r\n        if (this.localStorageAvailable()) {\r\n            this.storage = localStorage;\r\n        } else {\r\n            this.storage = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve specified item from local storage.\r\n     */\r\n    public get<T>(key: string, defaultValue?: T): any|T {\r\n        if ( ! this.storage) return defaultValue;\r\n\r\n        let value;\r\n        try {\r\n            value = JSON.parse(this.storage.getItem(key));\r\n        } catch (e) {\r\n            //\r\n        }\r\n\r\n        return value == null ? defaultValue : value;\r\n    }\r\n\r\n    /**\r\n     * Store specified item in local storage.\r\n     */\r\n    public set(key: string, value: any) {\r\n        if ( ! this.storage) return null;\r\n        value = JSON.stringify(value);\r\n        this.storage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Remove specified item from local storage.\r\n     */\r\n    public remove(key: string) {\r\n        if ( ! this.storage) return null;\r\n        this.storage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Check if local storage is available.\r\n     */\r\n    public localStorageAvailable(): boolean {\r\n        const test = 'test';\r\n\r\n        try {\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r23.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r21.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r22._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r22._transformOrigin)(\"font-size\", ctx_r22._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r22.panelClass)(\"@transformPanel\", ctx_r22.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r18 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r18)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    /**\r\n     * FormattedDatePipe Constructor.\r\n     */\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // iOS does not support YYYY-MM-DD\r\n        value = (value && typeof value === 'string' ) ? value.replace(/-/g, '/') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormattedDatePipe} from '@common/core/ui/format-pipes/formatted-date.pipe';\nimport {FormattedFileSizePipe} from '@common/uploads/formatted-file-size.pipe';\n\n\n@NgModule({\n    declarations: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ]\n})\nexport class FormatPipesModule {\n}\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-accent\", ctx_r5.color == \"accent\")(\"mat-warn\", ctx_r5.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r5.appearance != \"outline\")(\"id\", ctx_r5._labelId)(\"ngSwitch\", ctx_r5._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r5._control.id)(\"aria-owns\", ctx_r5._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.hideRequiredMarker && ctx_r5._control.required && !ctx_r5._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r7.color == \"accent\")(\"mat-warn\", ctx_r7.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r17._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r9._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","export enum FOLDERS_API_ROUTES {\r\n    GET_ALL = 'drive/folders',\r\n    CREATE = 'drive/folders',\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from 'common/core/http/app-http-client.service';\nimport {FOLDERS_API_ROUTES} from './folders-api-routes.enum';\nimport {DriveFolder} from '../models/driveFolder';\nimport {CurrentUser} from 'common/auth/current-user';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersApiService {\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser\n    ) {}\n\n    public getAll(params?: {userId?: number}): PaginatedBackendResponse<DriveFolder> {\n        return this.http.get(FOLDERS_API_ROUTES.GET_ALL, params);\n    }\n\n    public getAllForCurrentUser(): BackendResponse<{folders: DriveFolder[]}> {\n        return this.http.get('drive/users/' + this.currentUser.get('id') + '/folders');\n    }\n\n    public create(params: {name: string, parent_id: number|'root'}): BackendResponse<{folder: DriveFolder}> {\n        if (params.parent_id === 'root') params.parent_id = null;\n        return this.http.post(FOLDERS_API_ROUTES.CREATE, params);\n    }\n\n    public getByHash(hash: string): BackendResponse<{folder: DriveFolder}> {\n        return this.http.get('drive/folders/find', {hash});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { DriveEntry } from './files/models/drive-entry';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { Tag } from 'common/core/types/models/Tag';\nimport { SortColumn, SortDirection } from './entries/available-sorts';\nimport { UserSpaceUsage } from './state/models/user-space-usage';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\n\nexport interface DriveApiIndexParams {\n    orderBy?: SortColumn;\n    orderDir?: SortDirection;\n    folderId?: number|'root';\n    userId?: number;\n    query?: string;\n    type?: string;\n    deletedOnly?: boolean;\n    starredOnly?: boolean;\n    sharedOnly?: boolean;\n    per_page?: number;\n    page?: number;\n    recentOnly?: boolean;\n}\n\nexport interface DriveEntriesPaginationResponse extends PaginationResponse<DriveFolder> {\n    folder?: DriveFolder;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveEntryApiService {\n    constructor(private http: AppHttpClient, private currentUser: CurrentUser) {}\n\n    public getEntriesForFolder(params: DriveApiIndexParams = {}): Observable<DriveEntriesPaginationResponse> {\n        return this.http.get('drive/entries', params);\n    }\n\n    public getCurrentUserEntries(params: DriveApiIndexParams): Observable<DriveEntriesPaginationResponse> {\n        params.userId = this.currentUser.get('id');\n        return this.http.get('drive/entries', params);\n    }\n\n    public update(entryId: number, params: {name?: string, description?: string}): BackendResponse<{fileEntry: DriveEntry}> {\n        return this.http.put('uploads/' + entryId, params);\n    }\n\n    public delete(params: {entryIds?: number[], deleteForever?: boolean, emptyTrash?: boolean}): BackendResponse<void> {\n        return this.http.delete('drive/entries', params);\n    }\n\n    public copy(params: {entryIds: number[]}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/copy', params);\n    }\n\n    public restore(params: {entryIds: number[]}): BackendResponse<void> {\n        return this.http.post('drive/entries/restore', params);\n    }\n\n    public emptyTrash(): BackendResponse<void> {\n        return this.delete({emptyTrash: true});\n    }\n\n    public moveEntries(params: {entries: {id: number, type: string}[], destination: number|'root'}): BackendResponse<{entries: DriveEntry[]}> {\n        if (params.destination === 'root') params.destination = null;\n        return this.http.post('drive/entries/move', params);\n    }\n\n    public addStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/star', {ids});\n    }\n\n    public removeStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/unstar', {ids});\n    }\n\n    public getSpaceUsage(): BackendResponse<UserSpaceUsage> {\n        return this.http.get('drive/user/space-usage');\n    }\n}\n","export interface RootFolder {\r\n    id: 'root';\r\n    hash: 'root';\r\n    path: '';\r\n    type: 'folder';\r\n}\r\n\r\nexport const ROOT_FOLDER: RootFolder = {\r\n    id: 'root',\r\n    hash: 'root',\r\n    path: '',\r\n    type: 'folder',\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { ROOT_FOLDER, RootFolder } from './folders/root-folder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUrlsService {\n    public driveRoot() {\n        return '/drive';\n    }\n\n    public folder(folder: DriveFolder|RootFolder) {\n        if (folder === ROOT_FOLDER) {\n            return this.driveRoot();\n        } else {\n            return `/drive/folders/${(folder as DriveFolder).hash}`;\n        }\n    }\n}\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { ConfirmModalData } from 'common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { UploadedFile } from 'common/uploads/uploaded-file';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { LoadEntriesAction } from './events';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { RootFolder } from '../../folders/root-folder';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { User } from '../../../../common/core/types/models/User';\r\n\r\nexport class LoadUserFolders {\r\n    static readonly type = '[Drive] Load User Folders';\r\n}\r\n\r\nexport class LoadUserSpaceUsage {\r\n    static readonly type = '[Drive] Load User Space Usage';\r\n}\r\n\r\nexport class BuildFolderTree {\r\n    static readonly type = '[Drive] Build Folder Tree';\r\n    constructor(public folders?: DriveFolder[]) {}\r\n}\r\n\r\nexport class OpenFolder {\r\n    static readonly type = '[Drive] Open Folder';\r\n    constructor(public folder?: DriveFolder|RootFolder) {}\r\n}\r\n\r\nexport class OpenSearchPage {\r\n    static readonly type = '[Drive] Open Search Page';\r\n    constructor(public queryParams: {\r\n        type?: string,\r\n        query?: string,\r\n    }) {}\r\n}\r\n\r\nexport class SelectEntries {\r\n    static readonly type = '[Drive] Select Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SelectAllEntries {\r\n    static readonly type = '[Drive] Select All Entries';\r\n}\r\n\r\nexport class DeselectAllEntries {\r\n    static readonly type = '[Drive] Deselect All Entries';\r\n}\r\n\r\nexport class DeleteSelectedEntries {\r\n    static readonly type = '[Drive] Delete Selected Entries';\r\n}\r\n\r\nexport class OpenUploadsPanel {\r\n    static readonly type = '[Drive] Open UploadsApiService Panel';\r\n}\r\n\r\nexport class CloseUploadsPanel {\r\n    static readonly type = '[Drive] Close UploadsApiService Panel';\r\n}\r\n\r\nexport class AddEntries {\r\n    static readonly type = '[Drive] Add Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class MoveEntries {\r\n    static readonly type = '[Drive API] Move Entries';\r\n    constructor(public destination: DriveFolder|RootFolder, public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class OpenDialog {\r\n    static readonly type = '[Drive] Open Dialog';\r\n    constructor(public dialog: ComponentType<any>, public data?: object, public config?: string|MatDialogConfig) {}\r\n}\r\n\r\nexport class OpenConfirmDialog {\r\n    static readonly type = '[Drive] Open Confirm Dialog';\r\n    constructor(public data: ConfirmModalData, public confirmAction: any) {}\r\n}\r\n\r\nexport class SetViewMode {\r\n    static readonly type = '[Drive] Set View Mode';\r\n    constructor(public mode: 'list'|'grid') {}\r\n}\r\n\r\nexport class ToggleDetailsSidebar {\r\n    static readonly type = '[Drive] Toggle Details';\r\n}\r\n\r\nexport class ToggleSidebar {\r\n    static readonly type = '[Drive] Toggle Sidebar';\r\n}\r\n\r\nexport class UploadFiles {\r\n    static readonly type = '[Drive] Upload Files';\r\n    constructor(public files: UploadedFile[]) {}\r\n}\r\n\r\nexport class RestoreTrashedEntries {\r\n    static readonly type = '[Drive] Restore Trashed Entries';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DeleteTrashedEntriesForever {\r\n    static readonly type = '[Drive] Restore Trashed Entries Forever';\r\n}\r\n\r\nexport class EmptyTrash {\r\n    static readonly type = '[Drive] Empty Trash';\r\n}\r\n\r\nexport class OpenFilePreview {\r\n    static readonly type = '[Drive] Open File Preview Overlay';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DownloadEntries {\r\n    static readonly type = '[Drive] Download Files';\r\n    constructor(public entries?: FileEntry[], public link?: ShareableLink, public password?: string) {}\r\n}\r\n\r\nexport class AddStar {\r\n    static readonly type = '[Drive] Add a Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveStar {\r\n    static readonly type = '[Drive] Remove Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveEntries {\r\n    static readonly type = '[Drive] Remove Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class ChangeSort {\r\n    static readonly type = '[Drive] Change Sort';\r\n    constructor(public sort: SortColumn, public direction: SortDirection = 'desc') {}\r\n}\r\n\r\nexport class LoadMoreEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive Infinite Scroll] Load More Entries';\r\n    public loadMore = true;\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class ReloadPageEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Reload Page Entries';\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class CopySelectedEntries {\r\n    static readonly type = '[Drive] Copy Selected Entries';\r\n}\r\n\r\nexport class OpenUploadWindow {\r\n    static readonly type = '[Drive] Open Upload Window';\r\n    constructor(public type: 'file'|'directory') {}\r\n}\r\n\r\nexport class ShowLoadingToast {\r\n    static readonly type = '[Drive] Show Loading Toast';\r\n    constructor(public message: string) {}\r\n}\r\n\r\nexport class HideLoadingToast {\r\n    static readonly type = '[Drive] Hide Loading Toast';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[Drive] Reset State';\r\n}\r\n\r\nexport class UpdateEntries {\r\n    static readonly type = '[Drive] Update Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SetCurrentUser {\r\n    static readonly type = '[Drive] Set Current User';\r\n    constructor(public user: User) {}\r\n}\r\n\r\nexport class UpdateEntryDescription {\r\n    static readonly type = '[Drive] Update Entry Description';\r\n    constructor(public entry: FileEntry, public description: string) {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { DrivePageType } from './available-pages';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\n\r\nexport const DRIVE_PAGE_NAMES: {[key: string]: DrivePageType} = {\r\n    FOLDER: 'folder',\r\n    RECENT: 'recent',\r\n    TRASH: 'trash',\r\n    SHARES: 'shares',\r\n    STARRED: 'starred',\r\n    ROOT: 'root',\r\n    SEARCH: 'search',\r\n};\r\n\r\nexport class DrivePage implements DrivePageParams {\r\n    name = null;\r\n    viewName = null;\r\n    folder = null;\r\n    folderHash = null;\r\n    hasActions = false;\r\n    sortColumn = 'updated_at' as SortColumn;\r\n    sortDirection = 'desc' as SortDirection;\r\n    queryParams = {};\r\n\r\n    constructor(params: DrivePageParams) {\r\n        Object.keys(params).forEach(key => {\r\n            this[key] = params[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport interface DrivePageParams {\r\n    name: DrivePageType;\r\n    viewName: string;\r\n    folder?: DriveFolder|RootFolder;\r\n    folderHash?: string;\r\n    hasActions?: boolean;\r\n    disableSort?: boolean;\r\n    sortColumn?: SortColumn;\r\n    queryParams?: object;\r\n    sortDirection?: SortDirection;\r\n}\r\n\r\nexport class DriveFolderPage extends DrivePage {\r\n    constructor(\r\n        folder?: DriveFolder|RootFolder\r\n    ) {\r\n        super({\r\n            folder,\r\n            name: DRIVE_PAGE_NAMES.FOLDER,\r\n            hasActions: true,\r\n            viewName: folder === ROOT_FOLDER ? 'Drive' : (folder as DriveFolder).name,\r\n            folderHash: folder ? folder['hash'] : null,\r\n        });\r\n    }\r\n}\r\n\r\nexport const RECENT_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.RECENT,\r\n    viewName: 'Recent',\r\n    disableSort: true,\r\n    sortColumn: 'created_at',\r\n    sortDirection: 'desc',\r\n    queryParams: {\r\n        recentOnly: true,\r\n    }\r\n});\r\n\r\nexport const SEARCH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SEARCH,\r\n    viewName: 'Search results',\r\n});\r\n\r\nexport const SHARES_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SHARES,\r\n    viewName: 'Shared with me',\r\n    queryParams: {\r\n        sharedOnly: true,\r\n    }\r\n});\r\n\r\nexport const TRASH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.TRASH,\r\n    viewName: 'Trash',\r\n    hasActions: true,\r\n    queryParams: {\r\n        deletedOnly: true,\r\n    }\r\n});\r\n\r\nexport const STARRED_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.STARRED,\r\n    viewName: 'Starred',\r\n    queryParams: {\r\n        starredOnly: true,\r\n    }\r\n});\r\n\r\nexport const ROOT_FOLDER_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.ROOT,\r\n    viewName: 'Drive',\r\n    folder: ROOT_FOLDER,\r\n    hasActions: true,\r\n});\r\n\r\nexport const FOLDER_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.FOLDER,\r\n    viewName: null,\r\n    hasActions: true\r\n});\r\n","import { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { SortColumn } from '../../entries/available-sorts';\r\nimport { RootFolder } from '../../folders/root-folder';\r\nimport {\r\n    DrivePage, FOLDER_PAGE, RECENT_PAGE, ROOT_FOLDER_PAGE, SEARCH_PAGE, SHARES_PAGE, STARRED_PAGE, TRASH_PAGE\r\n} from '../models/drive-page';\r\n\r\nexport interface LoadEntriesAction {\r\n    queryParams: DriveApiIndexParams;\r\n    page?: DrivePage;\r\n    folder?: DriveFolder|RootFolder;\r\n    loadMore?: boolean;\r\n}\r\n\r\nexport class RecentEntriesPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Recent Entries Page Opened';\r\n    public page = RECENT_PAGE;\r\n    public queryParams = {orderBy: 'created_at' as SortColumn, recentOnly: true};\r\n}\r\n\r\nexport class FolderPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Folder Page Opened';\r\n    public page: DrivePage;\r\n    public queryParams = {};\r\n    constructor(folderHash: string|'root') {\r\n        const page = folderHash === 'root' ? ROOT_FOLDER_PAGE : FOLDER_PAGE;\r\n        this.page = {...page, folderHash};\r\n    }\r\n}\r\n\r\nexport class SharesFolderOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Shared with me folder opened';\r\n    public page = SHARES_PAGE;\r\n    public queryParams = {sharedOnly: true};\r\n}\r\n\r\nexport class TrashPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Trash Page Opened';\r\n    public page = TRASH_PAGE;\r\n    public queryParams = {deletedOnly: true};\r\n}\r\n\r\nexport class SearchPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Search Page Opened';\r\n    public page = SEARCH_PAGE;\r\n    constructor(public queryParams: {\r\n        type?: string;\r\n        query?: string;\r\n    } = {}) {}\r\n}\r\n\r\nexport class StarredPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Starred Entries Page Opened';\r\n    public page = STARRED_PAGE;\r\n    public queryParams = {starredOnly: true};\r\n}\r\n\r\nexport class EntriesSelectedViaDrag {\r\n    static readonly type = '[Drive] Entries Selected Via Drag';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntrySelectedViaContextMenu {\r\n    static readonly type = '[Drive] File Selected Via ContextMenu';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryTapped {\r\n    static readonly type = '[Drive] User Tapped File';\r\n    constructor(public entry: DriveEntry, public ctrlKey = false) {}\r\n}\r\n\r\nexport class EntryDoubleTapped {\r\n    static readonly type = '[Drive] User Double Tapped Entry';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class FileDeleteSuccess {\r\n    static readonly type = '[Drive] Successfully Deleted Files';\r\n    constructor(public deletedFiles: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryContextMenuOpened {\r\n    static readonly type = '[Drive] Entry Context Menu Opened';\r\n    constructor(public entry: DriveEntry|RootFolder) {}\r\n}\r\n\r\nexport class NewFolderCreated {\r\n    static readonly type = '[Drive] New Folder Created';\r\n    constructor(public folder: DriveFolder) {}\r\n}\r\n\r\nexport class EntryRenamed {\r\n    static readonly type = '[Drive] Entry Renamed';\r\n    constructor(public entry: DriveEntry, public newName: string) {}\r\n}\r\n\r\nexport class StartedDragging {\r\n    static readonly type = '[Drive] Started Dragging';\r\n}\r\n\r\nexport class StoppedDragging {\r\n    static readonly type = '[Drive] Stopped Dragging';\r\n}\r\n\r\nexport class MoveEntriesSuccess {\r\n    static readonly type = '[Drive API] Move Entries Success';\r\n    constructor(\r\n        public destination: number | 'root',\r\n        public oldLocation: number | 'root',\r\n        public entries: DriveEntry[]\r\n    ) {}\r\n}\r\n\r\nexport class MoveEntriesFailed {\r\n    static readonly type = '[Drive API] Move Entries Failed';\r\n    constructor(public messages: object) {}\r\n}\r\n\r\nexport class TrashedEntriesDeleteSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Delete Forever Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class TrashedEntriesRestoreSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Restore Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class NotEnoughSpaceError {\r\n    static readonly type = '[Drive] Not Enough Space Error';\r\n}\r\n\r\nexport class UserSpaceUsageChanged {\r\n    static readonly type = '[Drive] User Space Usage Changed';\r\n}\r\n\r\nexport class BreakpointChanged {\r\n    static readonly type = '[Drive] BreakpointChanged';\r\n    constructor(public status: {isMobile: boolean}) {}\r\n}\r\n\r\n\r\n","import { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DrivePage } from './drive-page';\r\nimport { UserSpaceUsage } from './user-space-usage';\r\nimport { User } from 'common/core/types/models/User';\r\n\r\nexport interface DriveStateModel {\r\n    isMobile: boolean;\r\n    activePage: DrivePage;\r\n    folderTree: DriveFolder[];\r\n    flatFolders: {[key: number]: DriveFolder};\r\n    userFoldersLoaded: boolean;\r\n    entries: DriveEntry[];\r\n    selectedEntries: DriveEntry[];\r\n    spaceUsage: UserSpaceUsage;\r\n    meta: {\r\n        currentPage: number;\r\n        lastPage: number;\r\n        sortColumn: SortColumn;\r\n        sortDirection: SortDirection;\r\n        type?: string|null,\r\n        query?: string|null\r\n    };\r\n    dragging: boolean;\r\n    loading: boolean;\r\n    uploadsPanelOpen: boolean;\r\n    viewMode: 'list'|'grid';\r\n    detailsVisible: boolean;\r\n    sidebarOpen: boolean;\r\n    currentUser: User|null;\r\n}\r\n\r\nexport const VIEW_MODE_KEY = 'bedrive.viewMode';\r\n","import { DriveStateModel } from './drive-state-model';\r\nimport { ROOT_FOLDER_PAGE } from './drive-page';\r\n\r\nexport const DRIVE_STATE_MODEL_DEFAULTS: DriveStateModel = {\r\n    isMobile: false,\r\n    activePage: ROOT_FOLDER_PAGE,\r\n    folderTree: [],\r\n    flatFolders: {},\r\n    userFoldersLoaded: false,\r\n    entries: [],\r\n    selectedEntries: [],\r\n    dragging: false,\r\n    loading: false,\r\n    uploadsPanelOpen: false,\r\n    viewMode: 'grid' as 'grid'|'list',\r\n    detailsVisible: true,\r\n    sidebarOpen: true,\r\n    currentUser: null,\r\n    spaceUsage: {\r\n        available: null,\r\n        used: null,\r\n    },\r\n    meta: {\r\n        sortColumn: 'updated_at',\r\n        sortDirection: 'desc',\r\n        currentPage: 0,\r\n        lastPage: 0,\r\n    },\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from 'common/uploads/validation/upload-validator';\nimport { FileSizeValidation } from 'common/uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from 'common/core/utils/convertToBytes';\nimport { AllowedExtensionsValidation } from 'common/uploads/validation/validations/allowed-extensions-validation';\nimport { BlockedExtensionsValidation } from 'common/uploads/validation/validations/blocked-extensions-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\n\n    protected initValidations() {\n        this.validations.push(\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            )\n        );\n\n        const allowedExtensions = this.getAllowedExtensions(),\n            blockedExtensions = this.getBlockedExtensions();\n\n        if (allowedExtensions && allowedExtensions.length) {\n            this.validations.push(new AllowedExtensionsValidation(\n                {extensions: allowedExtensions}, this.i18n\n            ));\n        }\n\n        if (blockedExtensions && blockedExtensions.length) {\n            this.validations.push(new BlockedExtensionsValidation(\n                {extensions: blockedExtensions}, this.i18n\n            ));\n        }\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\n        );\n    }\n\n    protected getAllowedExtensions() {\n        return this.settings.getJson('uploads.allowed_extensions');\n    }\n\n    protected getBlockedExtensions() {\n        return this.settings.getJson('uploads.blocked_extensions');\n    }\n}\n","export enum LoadingToastMessages {\r\n    copyEntries =  'Copying items...',\r\n    emptyTrash = 'Emptying trash...',\r\n    moveEntries = 'Moving items...',\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { UploadInputConfig } from '../../common/uploads/upload-input-config';\r\n\r\nexport const DRIVE_UPLOAD_INPUT_CONFIG = new InjectionToken<UploadInputConfig>('DRIVE_UPLOAD_INPUT_CONFIG');","import { DriveFolder } from '../folders/models/driveFolder';\r\nimport { DriveEntry } from '../files/models/drive-entry';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { FoldersApiService } from '../folders/api/folders-api.service';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveApiIndexParams, DriveEntryApiService } from '../drive-entry-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DriveUrlsService } from '../drive-urls.service';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\nimport isEqual from 'lodash/isEqual';\r\nimport {\r\n    AddEntries,\r\n    BuildFolderTree,\r\n    DeleteSelectedEntries,\r\n    DeleteTrashedEntriesForever,\r\n    DeselectAllEntries,\r\n    EmptyTrash,\r\n    LoadUserFolders,\r\n    MoveEntries,\r\n    OpenConfirmDialog,\r\n    OpenFolder,\r\n    OpenUploadsPanel,\r\n    RestoreTrashedEntries,\r\n    SelectEntries,\r\n    ToggleDetailsSidebar,\r\n    SetViewMode,\r\n    UploadFiles,\r\n    OpenFilePreview,\r\n    AddStar,\r\n    RemoveStar,\r\n    RemoveEntries,\r\n    OpenSearchPage,\r\n    LoadMoreEntries,\r\n    ReloadPageEntries,\r\n    ToggleSidebar,\r\n    CopySelectedEntries,\r\n    OpenUploadWindow,\r\n    LoadUserSpaceUsage,\r\n    ShowLoadingToast,\r\n    HideLoadingToast,\r\n    ResetState,\r\n    UpdateEntries,\r\n    SelectAllEntries,\r\n    SetCurrentUser, UpdateEntryDescription,\r\n} from './actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    EntryContextMenuOpened,\r\n    FileDeleteSuccess,\r\n    EntryDoubleTapped,\r\n    EntrySelectedViaContextMenu,\r\n    EntriesSelectedViaDrag,\r\n    EntryTapped,\r\n    FolderPageOpened,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    StartedDragging,\r\n    StoppedDragging,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess,\r\n    TrashPageOpened,\r\n    LoadEntriesAction,\r\n    UserSpaceUsageChanged,\r\n    NotEnoughSpaceError, BreakpointChanged\r\n} from './actions/events';\r\nimport { DriveStateModel, VIEW_MODE_KEY } from './models/drive-state-model';\r\nimport { DRIVE_STATE_MODEL_DEFAULTS } from './models/drive-state-model-defaults';\r\nimport { LocalStorage } from 'common/core/services/local-storage.service';\r\nimport { ROOT_FOLDER, RootFolder } from '../folders/root-folder';\r\nimport { UploadQueueService } from 'common/uploads/upload-queue/upload-queue.service';\r\nimport { DriveUploadValidator } from '../uploads/drive-upload-validator';\r\nimport { openUploadWindow } from 'common/uploads/utils/open-upload-window';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\r\nimport { UploadedFile } from 'common/uploads/uploaded-file';\r\nimport { UserSpaceUsage } from './models/user-space-usage';\r\nimport { LoadingToastMessages } from '../messages/loading-toast/loading-toast-messages';\r\nimport { User } from 'common/core/types/models/User';\r\nimport { DrivePage, TRASH_PAGE } from './models/drive-page';\r\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../upload-input-config';\r\nimport { Tag } from 'common/core/types/models/Tag';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { hasKey } from '@common/core/utils/has-key';\r\n\r\n@State<DriveStateModel>({\r\n    name: 'drive',\r\n    defaults: DRIVE_STATE_MODEL_DEFAULTS,\r\n})\r\n@Injectable()\r\nexport class DriveState {\r\n    constructor(\r\n        private foldersApi: FoldersApiService,\r\n        private entriesApi: DriveEntryApiService,\r\n        private router: Router,\r\n        private driveUrls: DriveUrlsService,\r\n        private uploads: UploadQueueService,\r\n        private store: Store,\r\n        private localStore: LocalStorage,\r\n        private validator: DriveUploadValidator,\r\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadInputConfig: UploadInputConfig,\r\n    ) {}\r\n\r\n    @Selector()\r\n    static flatFolders(state: DriveStateModel) {\r\n        return state.flatFolders;\r\n    }\r\n\r\n    @Selector()\r\n    static userFoldersLoaded(state: DriveStateModel) {\r\n        return state.userFoldersLoaded;\r\n    }\r\n\r\n    @Selector()\r\n    static activePage(state: DriveStateModel) {\r\n        return state.activePage;\r\n    }\r\n\r\n    @Selector()\r\n    static activePageName(state: DriveStateModel) {\r\n        return state.activePage.name;\r\n    }\r\n\r\n    @Selector()\r\n    static userFolders(state: DriveStateModel) {\r\n        return state.folderTree;\r\n    }\r\n\r\n    @Selector()\r\n    static selectedEntries(state: DriveStateModel) {\r\n        return state.selectedEntries;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntryIds(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.map(entry => entry.id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntry(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected ? selected[selected.length - 1] : null;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntry])\r\n    static selectedEntryOrActiveFolder(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected || state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntryOrActiveFolder, DriveState.flatFolders])\r\n    static selectedEntryParent(state: DriveStateModel, selected: DriveFolder, folders: {[key: number]: DriveFolder}) {\r\n        if ( ! selected || ! folders || ! selected.parent_id) return ROOT_FOLDER;\r\n        return folders[selected.parent_id];\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static anythingSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static allSelectedEntriesStarred(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => !!entry.tags.find(tag => tag.name === 'starred'));\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static onlyFoldersSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => entry.type === 'folder');\r\n    }\r\n\r\n    @Selector()\r\n    static entries(state: DriveStateModel) {\r\n        return state.entries;\r\n    }\r\n\r\n    @Selector()\r\n    static entriesEmpty(state: DriveStateModel) {\r\n        // only return true if entries have already loaded\r\n        return state.meta.currentPage && ! state.loading && state.entries.length === 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static multipleEntriesSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 1;\r\n    }\r\n\r\n    @Selector()\r\n    static activeFolder(state: DriveStateModel) {\r\n        return state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedFolderId(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        const folder = selectedEntries.filter(entry => entry.type === 'folder')[0];\r\n        return folder ? folder.id : null;\r\n    }\r\n\r\n    @Selector()\r\n    static meta(state: DriveStateModel) {\r\n        return state.meta;\r\n    }\r\n\r\n    @Selector()\r\n    static dragging(state: DriveStateModel) {\r\n        return state.dragging;\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: DriveStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static currentPage(state: DriveStateModel) {\r\n        return state.meta.currentPage;\r\n    }\r\n\r\n    @Selector()\r\n    static viewMode(state: DriveStateModel) {\r\n        return state.viewMode;\r\n    }\r\n\r\n    @Selector()\r\n    static detailsOpen(state: DriveStateModel) {\r\n        return state.detailsVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static sidebarOpen(state: DriveStateModel) {\r\n        return state.sidebarOpen;\r\n    }\r\n\r\n    @Selector()\r\n    static sortColumn(state: DriveStateModel) {\r\n        return state.meta.sortColumn;\r\n    }\r\n\r\n    @Selector()\r\n    static sortDirection(state: DriveStateModel) {\r\n        return state.meta.sortDirection;\r\n    }\r\n\r\n    @Selector()\r\n    static canLoadMoreEntries(state: DriveStateModel) {\r\n        return state.meta.currentPage < state.meta.lastPage;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceUsed(state: DriveStateModel) {\r\n        return state.spaceUsage.used;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceAvailable(state: DriveStateModel) {\r\n        return state.spaceUsage.available;\r\n    }\r\n\r\n    @Selector([DriveState.userSpaceUsed, DriveState.userSpaceAvailable])\r\n    static spaceUsedPercent(state: DriveStateModel, spaceUsed: number, spaceAvail: number) {\r\n        // null means that user has unlimited space available\r\n        return spaceAvail === null ? 0 : ((spaceUsed * 100) / spaceAvail);\r\n    }\r\n\r\n    @Selector()\r\n    static isMobile(state: DriveStateModel) {\r\n        return state.isMobile;\r\n    }\r\n\r\n    static userHasPermission(permission: 'edit'|'owner', folder: DriveEntry|RootFolder, user: User) {\r\n        // we are not in a folder view, can bail\r\n        if ( ! folder || ! user) return false;\r\n\r\n        if (folder.id === 'root') return true;\r\n\r\n        // check if user is the owner of currently open folder\r\n        const folderUser = (folder as DriveEntry).users.find(u => u.id === user.id);\r\n\r\n        if (folderUser.owns_entry) return true;\r\n\r\n        return folderUser.entry_permissions[permission];\r\n    }\r\n\r\n    @Selector()\r\n    static currentUser(state: DriveStateModel) {\r\n        return state.currentUser;\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userOwnsActiveFolder(state: DriveStateModel, activeFolder: DriveEntry|RootFolder, currentUser: User) {\r\n       return DriveState.userHasPermission('owner', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userCanEditSelectedFolder(state: DriveStateModel, activeFolder: DriveEntry|RootFolder, currentUser: User) {\r\n        return DriveState.userHasPermission('edit', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userCanEditSelectedEntries(state: DriveStateModel, entries: DriveEntry[], currentUser: User) {\r\n        return entries.every(entry => {\r\n            const user = entry.users.find(u => u.id === currentUser.id);\r\n            return user && (user.owns_entry || user.entry_permissions.edit);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.activePage, DriveState.userCanEditSelectedFolder])\r\n    static canUpload(state: DriveStateModel, page: DrivePage, userCanEditFolder: boolean) {\r\n        return page.folder && userCanEditFolder;\r\n    }\r\n\r\n    @Action(LoadUserFolders)\r\n    loadUserFolders(ctx: StateContext<DriveStateModel>) {\r\n        return this.foldersApi.getAllForCurrentUser().pipe(tap(response => {\r\n            return ctx.dispatch(new BuildFolderTree(response.folders));\r\n        }));\r\n    }\r\n\r\n    @Action(BuildFolderTree)\r\n    buildFolderTree(ctx: StateContext<DriveStateModel>, action: BuildFolderTree) {\r\n        let hashTable = {}; const tree = [];\r\n\r\n        if (action.folders) {\r\n            for (let i = 0, len = action.folders.length; i < len; i++) {\r\n                const folder = action.folders[i];\r\n                hashTable[folder.id] = folder;\r\n            }\r\n        } else {\r\n            hashTable = ctx.getState().flatFolders;\r\n        }\r\n\r\n        for (const id in hashTable) {\r\n            if ( ! hashTable.hasOwnProperty(id)) continue;\r\n            const folder = hashTable[id];\r\n\r\n            // clear children from previous builds, to prevent duplicates\r\n            folder.children = [];\r\n\r\n            if (folder.parent_id) {\r\n                const parent = hashTable[folder.parent_id];\r\n                if (parent) {\r\n                    if ( ! parent.children) parent.children = [];\r\n                    parent.children.push(folder);\r\n                }\r\n            } else {\r\n                tree.push(folder);\r\n            }\r\n        }\r\n\r\n        ctx.patchState({\r\n            folderTree: tree,\r\n            flatFolders: hashTable,\r\n            userFoldersLoaded: true,\r\n        });\r\n    }\r\n\r\n    @Action(FolderPageOpened)\r\n    @Action(RecentEntriesPageOpened)\r\n    @Action(TrashPageOpened)\r\n    @Action(StarredPageOpened)\r\n    @Action(SearchPageOpened)\r\n    @Action(SharesFolderOpened)\r\n    @Action(ReloadPageEntries)\r\n    @Action(LoadMoreEntries)\r\n    loadDriveEntries(ctx: StateContext<DriveStateModel>, action: LoadEntriesAction) {\r\n        const oldState = ctx.getState(),\r\n            newState = {loading: true, meta: {...oldState.meta}} as Partial<DriveStateModel>;\r\n\r\n        // only replace active page if it's actually specified, this way\r\n        // \"Reload\" and \"LoadMore\" actions will not remove active page\r\n        newState.activePage = action.page ? action.page : oldState.activePage;\r\n\r\n        // set sorting from specified query params or specified page or currently active page\r\n        newState.meta.sortColumn = action.queryParams.orderBy || oldState.meta.sortColumn || newState.activePage.sortColumn;\r\n        newState.meta.sortDirection = action.queryParams.orderDir || oldState.meta.sortDirection || newState.activePage.sortDirection;\r\n\r\n        // if it's not search page, clear type and query\r\n        if (newState.activePage.name !== 'search') {\r\n            newState.meta.query = null;\r\n            newState.meta.type = null;\r\n        }\r\n\r\n        newState.meta.query = action.queryParams.query || newState.meta.query;\r\n        newState.meta.type = action.queryParams.type || newState.meta.type;\r\n\r\n        ctx.patchState(newState);\r\n        const params = this.transformQueryParams({\r\n            ...action.queryParams,\r\n            ...newState.activePage.queryParams,\r\n        });\r\n\r\n        return this.entriesApi.getEntriesForFolder(params).pipe(tap(response => {\r\n            const entries = action.loadMore ? oldState.entries : [];\r\n\r\n            const state = {\r\n                entries: entries.concat(response.data),\r\n                meta: {\r\n                    ...newState.meta,\r\n                    lastPage: response.last_page,\r\n                    currentPage: response.current_page\r\n                },\r\n                loading: false\r\n            } as Partial<DriveStateModel>;\r\n\r\n            // make sure \"root\" page folder is not overridden, it's\r\n            // a static constant, so is not returned from backend\r\n            if (newState.activePage.name !== 'root') {\r\n                state.activePage = {\r\n                    ...newState.activePage,\r\n                    folder: response.folder,\r\n                };\r\n            }\r\n\r\n            return ctx.patchState(state);\r\n        }, () => {\r\n            return ctx.patchState({loading: false});\r\n        }));\r\n    }\r\n\r\n    @Action(OpenFolder, {cancelUncompleted: true})\r\n    openFolder(ctx: StateContext<DriveStateModel>, action: OpenFolder) {\r\n        const currentFolder = ctx.getState().activePage.folder;\r\n        if (currentFolder && action.folder.id === currentFolder.id) return;\r\n\r\n        if (action.folder && action.folder['deleted_at']) {\r\n            return ctx.dispatch(new OpenConfirmDialog({\r\n                title: 'Folder is in trash',\r\n                body: 'To view this folder, you need to restore it first.',\r\n                ok: 'Restore'\r\n            }, new RestoreTrashedEntries()));\r\n        } else {\r\n            ctx.patchState({loading: true});\r\n            return this.router.navigate([this.driveUrls.folder(action.folder)]);\r\n        }\r\n    }\r\n\r\n    @Action(OpenSearchPage, {cancelUncompleted: true})\r\n    openSearchPage(ctx: StateContext<DriveStateModel>, action: OpenSearchPage) {\r\n        const oldParams = this.store.selectSnapshot(RouterState.state).root.queryParams;\r\n        if (isEqual(oldParams, action.queryParams)) return;\r\n        ctx.patchState({loading: true});\r\n        return this.router.navigate(['/drive/search'], {queryParams: action.queryParams});\r\n    }\r\n\r\n    @Action(EntriesSelectedViaDrag)\r\n    @Action(EntrySelectedViaContextMenu)\r\n    @Action(SelectEntries)\r\n    selectEntries(ctx: StateContext<DriveStateModel>, action: EntriesSelectedViaDrag | EntrySelectedViaContextMenu | SelectEntries) {\r\n        ctx.patchState({selectedEntries: action.entries});\r\n    }\r\n\r\n    @Action(DeselectAllEntries)\r\n    deselectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        if ( ! ctx.getState().selectedEntries.length) return;\r\n        ctx.patchState({selectedEntries: []});\r\n    }\r\n\r\n    @Action(SelectAllEntries)\r\n    SelectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({selectedEntries: ctx.getState().entries.slice()});\r\n    }\r\n\r\n    @Action(EntryTapped)\r\n    entryTapped(ctx: StateContext<DriveStateModel>, action: EntryTapped) {\r\n        if (ctx.getState().isMobile) {\r\n            this.entryDoubleTapped(ctx, action);\r\n            return;\r\n        }\r\n\r\n        const current = ctx.getState().selectedEntries.slice();\r\n        let alreadySelected = false;\r\n\r\n        // remove entry with matching ID (if exists) to avoid duplicates\r\n        const i = current.findIndex(curr => curr.id === action.entry.id);\r\n        if (i > -1) {\r\n            current.splice(i, 1);\r\n            alreadySelected = true;\r\n        }\r\n\r\n        if (action.ctrlKey) {\r\n            if (alreadySelected) {\r\n                ctx.patchState({selectedEntries: current});\r\n            } else {\r\n                ctx.patchState({selectedEntries: [...current, action.entry]});\r\n            }\r\n        } else {\r\n            ctx.patchState({selectedEntries: [action.entry]});\r\n        }\r\n    }\r\n\r\n    @Action(EntryDoubleTapped)\r\n    entryDoubleTapped(ctx: StateContext<DriveStateModel>, action: EntryDoubleTapped) {\r\n        if (action.entry.type === 'folder') {\r\n            return ctx.dispatch(new OpenFolder(action.entry as DriveFolder));\r\n        } else {\r\n            return ctx.dispatch(new OpenFilePreview([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(DeleteSelectedEntries)\r\n    deleteSelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = this.store.selectSnapshot(DriveState.selectedEntryIds),\r\n            flatFolders = this.store.selectSnapshot(DriveState.flatFolders),\r\n            activePage = ctx.getState().activePage;\r\n\r\n        return this.entriesApi.delete({entryIds}).pipe(tap(() => {\r\n            // filter out deleted entries\r\n            const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n            const newState = {entries: newEntries} as Partial<DriveStateModel>,\r\n                actions = [new FileDeleteSuccess(entries)] as any[];\r\n\r\n            // clear selected entries\r\n            newState.selectedEntries = [];\r\n\r\n            // if selected folder was active, navigate to its parent\r\n            if (activePage.folder && entryIds.indexOf(activePage.folder.id) > -1) {\r\n                this.store.dispatch(new OpenFolder(this.store.selectSnapshot(DriveState.selectedEntryParent)));\r\n            }\r\n\r\n            // rebuild folders tree\r\n            const folders = entries.filter(entry => entry.type === 'folder');\r\n            if (folders.length) {\r\n                folders.forEach(folder => delete flatFolders[folder.id]);\r\n                newState.flatFolders = flatFolders;\r\n                actions.push(new BuildFolderTree());\r\n            }\r\n\r\n            ctx.patchState(newState);\r\n            return ctx.dispatch(actions);\r\n        }));\r\n    }\r\n\r\n    @Action(EntryContextMenuOpened)\r\n    fileContextMenuOpened(ctx: StateContext<DriveStateModel>, action: EntryContextMenuOpened) {\r\n        if ( ! action.entry || action.entry.id === 'root') return;\r\n\r\n        const fileAlreadySelected = ctx.getState().selectedEntries\r\n            .find(entry => entry.id === action.entry.id);\r\n\r\n        if ( ! fileAlreadySelected) {\r\n            return ctx.dispatch(new EntrySelectedViaContextMenu([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(NewFolderCreated)\r\n    newFolderCreated(ctx: StateContext<DriveStateModel>, action: NewFolderCreated) {\r\n        const state = ctx.getState(),\r\n            newFolderId = action.folder.parent_id || 'root';\r\n\r\n        // start new folder into user folders cache\r\n        const newState = {\r\n            flatFolders: {...state.flatFolders, [action.folder.id]: action.folder}\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // push new folder into parent folder entries, if parent is currently open\r\n        if (newFolderId === state.activePage.folder.id) {\r\n            newState.entries = [action.folder, ...state.entries];\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n\r\n        // rebuild folder tree\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(EntryRenamed)\r\n    entryRenamed(ctx: StateContext<DriveStateModel>, action: EntryRenamed) {\r\n        const state = ctx.getState(),\r\n            newState = {entries: state.entries.slice()} as Partial<DriveStateModel>,\r\n            i = newState.entries.findIndex(curr => curr.id === action.entry.id);\r\n\r\n        // rename entry inside main entries array\r\n        if (i > -1) {\r\n            newState.entries[i] = {...newState.entries[i], name: action.newName};\r\n        }\r\n\r\n        // rename entry inside selected entries array\r\n        newState.selectedEntries = [{...state.selectedEntries[0], name: action.newName}];\r\n\r\n        // rename active folder\r\n        if (state.activePage.folder && state.activePage.folder.id === action.entry.id) {\r\n            newState.activePage = {...state.activePage, folder: action.entry};\r\n        }\r\n\r\n        // rebuild folder tree\r\n        if (action.entry.type === 'folder') {\r\n            const flatFolders = {...state.flatFolders};\r\n            flatFolders[action.entry.id] = {...flatFolders[action.entry.id], name: action.newName};\r\n            newState.flatFolders = flatFolders;\r\n            ctx.dispatch(new BuildFolderTree());\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n    }\r\n\r\n    @Action(StartedDragging)\r\n    startedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: true});\r\n    }\r\n\r\n    @Action(StoppedDragging)\r\n    stoppedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: false});\r\n    }\r\n\r\n    @Action(MoveEntries)\r\n    movieEntries(ctx: StateContext<DriveStateModel>, action: MoveEntries) {\r\n        const entries = action.entries || ctx.getState().selectedEntries;\r\n\r\n        if ( ! DriveState.canMoveEntriesTo(entries, action.destination)) return;\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.moveEntries));\r\n\r\n        const minimal = entries.map(entry => {\r\n            return {id: entry.id, type: entry.type === 'folder' ? 'folder' : 'file'};\r\n        });\r\n\r\n        const oldLocation = entries[0].parent_id;\r\n\r\n        return this.entriesApi.moveEntries({entries: minimal, destination: action.destination.id}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                return ctx.dispatch(new MoveEntriesSuccess(action.destination.id, oldLocation, response.entries));\r\n            }, error => {\r\n                return ctx.dispatch(new MoveEntriesFailed(error.messages));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(MoveEntriesSuccess)\r\n    moveEntriesSuccess(ctx: StateContext<DriveStateModel>, action: MoveEntriesSuccess) {\r\n        const state = ctx.getState(),\r\n            entryIds = action.entries.map(entry => entry.id),\r\n            folders = action.entries.filter(entry => entry.type === 'folder');\r\n\r\n        // remove moved entries from old folder\r\n        const newState = {\r\n            selectedEntries: [],\r\n            entries: state.entries.filter(entry => entryIds.indexOf(entry.id) === -1)\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // rebuild folder tree\r\n        if (folders.length) {\r\n            newState.flatFolders = {...state.flatFolders};\r\n            action.entries\r\n                .filter(entry => entry.type === 'folder')\r\n                .forEach(entry => newState.flatFolders[entry.id] = entry as DriveFolder);\r\n        }\r\n\r\n        // update active folder\r\n        if (state.activePage.folder) {\r\n            const folder = action.entries.find(entry => state.activePage.folder.id === entry.id);\r\n            if (folder) newState.activePage = {...state.activePage, folder};\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(SetViewMode)\r\n    setViewMode(ctx: StateContext<DriveStateModel>, action: SetViewMode) {\r\n        this.localStore.set(VIEW_MODE_KEY, action.mode);\r\n        ctx.patchState({viewMode: action.mode});\r\n    }\r\n\r\n    @Action(ToggleDetailsSidebar)\r\n    toggleDetailsSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            detailsVisible: !ctx.getState().detailsVisible\r\n        });\r\n    }\r\n\r\n    @Action(ToggleSidebar)\r\n    toggleSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            sidebarOpen: !ctx.getState().sidebarOpen\r\n        });\r\n    }\r\n\r\n    @Action(AddEntries)\r\n    addEntries(ctx: StateContext<DriveStateModel>, action: AddEntries) {\r\n        const currentEntries = ctx.getState().entries,\r\n            spaceUsage = ctx.getState().spaceUsage;\r\n\r\n        const newEntries = action.entries\r\n            .filter(entry => !currentEntries.find(curr => curr.id === entry.id));\r\n\r\n        const newSize = newEntries.filter(entry => entry.type !== 'folder')\r\n            .reduce((sum, entry) => sum + entry.file_size, 0);\r\n\r\n        ctx.patchState({\r\n            entries: [...newEntries, ...currentEntries],\r\n            spaceUsage: {...spaceUsage, used: spaceUsage.used + newSize}\r\n        });\r\n    }\r\n\r\n    @Action(UploadFiles)\r\n    uploadFiles(ctx: StateContext<DriveStateModel>, action: UploadFiles) {\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, action.files)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        if ( ! action.files.length) return;\r\n\r\n        ctx.dispatch(new OpenUploadsPanel());\r\n\r\n        const state = ctx.getState(),\r\n            folder = state.activePage.folder,\r\n            parentId = (folder && folder !== ROOT_FOLDER) ? folder.id : null;\r\n\r\n        const config = {\r\n            httpParams: {parentId},\r\n            validator: this.validator,\r\n        };\r\n\r\n        return this.uploads.start(action.files, config).pipe(\r\n            tap(response => {\r\n                // get parent folders, if user has uploaded folders and not single files\r\n                const entries = [response.fileEntry.parent, response.fileEntry];\r\n\r\n                // remove all entries that are not direct child of currently open folder\r\n                const newEntries = entries\r\n                    .filter(newEntry => newEntry && newEntry.parent_id === parentId);\r\n\r\n                // add newly uploaded files and created folders\r\n                ctx.dispatch(new AddEntries(newEntries as DriveEntry[]));\r\n\r\n                // rebuild folder tree, if there are any folders\r\n                const folders = entries.filter(entry => entry && entry.type === 'folder');\r\n                if (folders.length) {\r\n                    const flatFolders = {...ctx.getState().flatFolders};\r\n                    folders.forEach(f => flatFolders[f.id] = f as DriveFolder);\r\n                    ctx.patchState({flatFolders});\r\n                    ctx.dispatch(new BuildFolderTree());\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(DeleteTrashedEntriesForever)\r\n    deleteTrashedEntriesForever(ctx: StateContext<DriveStateModel>) {\r\n        const selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = selectedEntries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n        return this.entriesApi.delete({entryIds, deleteForever: true}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch([\r\n                new TrashedEntriesDeleteSuccess(selectedEntries),\r\n                new UserSpaceUsageChanged(),\r\n            ]);\r\n        }));\r\n    }\r\n\r\n    @Action(RestoreTrashedEntries)\r\n    restoreTrashedEntries(ctx: StateContext<DriveStateModel>, action: RestoreTrashedEntries) {\r\n        const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n        const restoredEntries = action.entries || this.store.selectSnapshot(DriveState.selectedEntries);\r\n        const entryIds = restoredEntries.map(entry => entry.id);\r\n        let newEntries: DriveEntry[];\r\n\r\n        if (activePage.name === TRASH_PAGE.name) {\r\n            newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n        } else {\r\n            newEntries = [...ctx.getState().entries, ...action.entries];\r\n        }\r\n\r\n        return this.entriesApi.restore({entryIds}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch(new TrashedEntriesRestoreSuccess(restoredEntries));\r\n        }));\r\n    }\r\n\r\n    @Action(EmptyTrash, {cancelUncompleted: true})\r\n    emptyTrash(ctx: StateContext<DriveStateModel>) {\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.emptyTrash));\r\n\r\n        return this.entriesApi.emptyTrash().pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(() => {\r\n                ctx.patchState({\r\n                    entries: [],\r\n                    selectedEntries: [],\r\n                });\r\n\r\n                return ctx.dispatch(new UserSpaceUsageChanged());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(AddStar, {cancelUncompleted: true})\r\n    addStar(ctx: StateContext<DriveStateModel>, action: AddStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.addStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) {\r\n                    if ( ! entry.tags) entry.tags = [];\r\n                    entry.tags.push(response.tag);\r\n                }\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries.map(entry => {\r\n                entry.tags.push(response.tag);\r\n                return entry;\r\n            });\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries,\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveStar, {cancelUncompleted: true})\r\n    removeStar(ctx: StateContext<DriveStateModel>, action: RemoveStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.removeStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) this.removeTag(entry, response.tag);\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries\r\n                .map(entry => this.removeTag(entry, response.tag));\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveEntries)\r\n    removeSelectedEntries(ctx: StateContext<DriveStateModel>, action: RemoveEntries) {\r\n        const ids = action.entries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n            .filter(entry => ids.indexOf(entry.id) === -1);\r\n\r\n        ctx.patchState({\r\n            entries: newEntries\r\n        });\r\n    }\r\n\r\n    @Action(CopySelectedEntries)\r\n    copySelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = entries.map(entry => entry.id),\r\n            folders = entries.filter(entry => entry.type === 'folder'),\r\n            oldState = ctx.getState();\r\n\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, entries)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.copyEntries));\r\n\r\n        return this.entriesApi.copy({entryIds}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                const newState = {} as Partial<DriveStateModel>;\r\n\r\n                // show copied entries, if we are in a folder view\r\n                if (ctx.getState().activePage.folder) {\r\n                    newState.entries =  oldState.entries.concat(response.entries);\r\n                }\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) {\r\n                    newState.flatFolders = {...oldState.flatFolders};\r\n                    response.entries\r\n                        .filter(folder => folder.type === 'folder')\r\n                        .forEach(folder => newState.flatFolders[folder.id] = folder as DriveFolder);\r\n                }\r\n\r\n                ctx.patchState(newState);\r\n\r\n                // update user space usage\r\n                ctx.dispatch(new UserSpaceUsageChanged());\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) ctx.dispatch(new BuildFolderTree());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(OpenUploadWindow)\r\n    openUploadWindow(ctx: StateContext<DriveStateModel>, action: OpenUploadWindow) {\r\n        const config = {\r\n            ...this.uploadInputConfig,\r\n            directory: action.type === 'directory'\r\n        };\r\n\r\n        openUploadWindow(config).then(files => {\r\n            if ( ! files || ! files.length) return;\r\n            ctx.dispatch(new UploadFiles(files));\r\n        });\r\n    }\r\n\r\n    @Action(LoadUserSpaceUsage)\r\n    @Action(UserSpaceUsageChanged)\r\n    loadUserSpaceUsage(ctx: StateContext<DriveStateModel>) {\r\n        return this.entriesApi.getSpaceUsage().pipe(tap(spaceUsage => {\r\n            ctx.patchState({spaceUsage: {used: spaceUsage.used, available: spaceUsage.available}});\r\n        }));\r\n    }\r\n\r\n    @Action(UpdateEntries)\r\n    updateEntries(ctx: StateContext<DriveStateModel>, action: UpdateEntries) {\r\n        const mainEntries = ctx.getState().entries.slice(),\r\n            selectedEntries = ctx.getState().selectedEntries.slice();\r\n\r\n        action.entries.forEach(updatedEntry => {\r\n            // update main entries\r\n            const mainIndex = mainEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            mainEntries[mainIndex] = {...mainEntries[mainIndex], ...updatedEntry};\r\n\r\n            // update selected entries\r\n            const selectedIndex = selectedEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            if (selectedIndex > -1) {\r\n                selectedEntries[selectedIndex] = {...selectedEntries[selectedIndex], ...updatedEntry};\r\n            }\r\n        });\r\n\r\n        ctx.patchState({entries: mainEntries, selectedEntries});\r\n    }\r\n\r\n    @Action(UpdateEntryDescription)\r\n    updateEntryDescription(ctx: StateContext<DriveStateModel>, {entry, description}: UpdateEntryDescription) {\r\n        return this.entriesApi.update(entry.id, {description})\r\n            .pipe(tap(response => {\r\n                ctx.dispatch(new UpdateEntries([response.fileEntry]));\r\n            }));\r\n    }\r\n\r\n    @Action(BreakpointChanged)\r\n    breakpointChanged(ctx: StateContext<DriveStateModel>, action: BreakpointChanged) {\r\n        ctx.patchState({\r\n            isMobile: action.status.isMobile,\r\n            sidebarOpen: !action.status.isMobile,\r\n            detailsVisible: !action.status.isMobile,\r\n        });\r\n    }\r\n\r\n    @Action(SetCurrentUser)\r\n    setCurrentUser(ctx: StateContext<DriveStateModel>, action: SetCurrentUser) {\r\n        ctx.patchState({currentUser: action.user});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<DriveStateModel>) {\r\n        ctx.setState({...DRIVE_STATE_MODEL_DEFAULTS, viewMode: ctx.getState().viewMode});\r\n    }\r\n\r\n    private transformQueryParams(params: DriveApiIndexParams): DriveApiIndexParams {\r\n        const page = this.store.selectSnapshot(DriveState.activePage),\r\n            meta = this.store.selectSnapshot(DriveState.meta);\r\n\r\n        const queryParams = {\r\n            orderBy: meta.sortColumn,\r\n            orderDir: meta.sortDirection,\r\n            ...params\r\n        };\r\n\r\n        if (page.folderHash) queryParams.folderId = page.folderHash;\r\n        if (meta.query) queryParams.query = meta.query;\r\n        if (meta.type) queryParams.type = meta.type;\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Check if user has enough space left to upload all specified files.\r\n     */\r\n    private enoughSpaceLeftToUpload(spaceUsage: UserSpaceUsage, files: (UploadedFile|FileEntry)[]) {\r\n        const newSize = files.reduce((sum, file) => {\r\n            const size = hasKey('size', file) ? file.size : file.file_size;\r\n            return sum + size;\r\n        }, 0);\r\n        const currentlyUsing = spaceUsage.used;\r\n        const availableSpace = spaceUsage.available;\r\n        return (newSize + currentlyUsing) < availableSpace;\r\n    }\r\n\r\n    private removeTag(entry: DriveEntry, tag: Tag) {\r\n        entry.tags = entry.tags.filter(t => t.id !== tag.id);\r\n        return entry;\r\n    }\r\n\r\n    static canMoveEntriesTo(movingEntries: DriveEntry[], folder: DriveFolder|RootFolder) {\r\n        if ( ! folder || folder['type'] !== 'folder') return false;\r\n\r\n        // should not be able to move folder into it's\r\n        // own child or same folder it's already in\r\n        return movingEntries.every(entry => {\r\n            // trying to move file to root, but file is already in root\r\n            if (folder.id === 'root' && entry.parent_id === null) return false;\r\n\r\n            // entry is already in this folder\r\n            if (folder.id === entry.parent_id) return false;\r\n\r\n            // trying to move folder into it's own child\r\n            if (folder.path.startsWith(entry.path)) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n","export const SUPPORTED_ENTRY_TYPES = [\r\n    'audio',\r\n    'video',\r\n    'text',\r\n    'pdf',\r\n    'archive',\r\n    'folder',\r\n    'shared-folder',\r\n    'image',\r\n    'powerPoint',\r\n    'word',\r\n    'spreadsheet',\r\n];\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { SUPPORTED_ENTRY_TYPES } from '../../../entries/supported-entry-types';\nimport { kebabCase } from '@common/core/utils/kebab-case';\n\n@Component({\n    selector: 'file-icon',\n    templateUrl: './file-icon.component.html',\n    styleUrls: ['./file-icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileIconComponent implements OnChanges {\n    @Input() type: string;\n    @Input() mime: string;\n\n    ngOnChanges() {\n        if ( ! this.type && this.mime) {\n            this.type = this.mime.split('/')[0];\n        }\n        if ( ! SUPPORTED_ENTRY_TYPES.includes(this.type)) {\n            this.type = 'default';\n        }\n    }\n\n    public getType() {\n        return kebabCase(this.type);\n    }\n}\n","import { snakeCase } from './snake-case';\r\n\r\nexport function kebabCase(text: string) {\r\n    return snakeCase(text).replace('_', '-');\r\n}\r\n","<mat-icon\n        [svgIcon]=\"getType() + '-file-custom'\"\n        class=\"file-color\"\n        [ngClass]=\"getType() + '-file'\"\n></mat-icon>","<ng-container *ngIf=\"entries | async as selectedEntries\">\n    <ng-container *ngIf=\"selectedEntries[0]\">\n        <file-icon [type]=\"selectedEntries[0].type\"></file-icon>\n        <div class=\"text\">{{selectedEntries[0].name}}</div>\n        <div class=\"selected-entry-count\" *ngIf=\"selectedEntries.length > 1\">{{selectedEntries.length}}</div>\n    </ng-container>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\n\n@Component({\n    selector: 'entry-drag-preview',\n    templateUrl: './entry-drag-preview.component.html',\n    styleUrls: ['./entry-drag-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDragPreviewComponent {\n    @Select(DriveState.selectedEntries) entries: Observable<DriveEntry[]>;\n    @HostBinding('class') className = 'files-grid-item-footer';\n    @HostBinding('class.hidden') get dragging() {\n        return !this.store.selectSnapshot(DriveState.dragging);\n    }\n\n    constructor(private store: Store) {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveDomCacheService {\n    public scrollCont: HTMLElement;\n    public filesCont: HTMLElement;\n    public filesContRect: ClientRect;\n    public scrollContRect: ClientRect;\n    public dragPreview: HTMLElement;\n}\n","export const SEARCH_FILE_TYPES = [\r\n    {name: 'Folders', type: 'folder'},\r\n    {name: 'Images', type: 'image'},\r\n    {name: 'Text documents', type: 'text'},\r\n    {name: 'Video', type: 'video'},\r\n    {name: 'Audio', type: 'audio'},\r\n    {name: 'PDFs', type: 'pdf'},\r\n];\r\n","export interface PaginationResponse<T> {\r\n    data: T[];\r\n    from: number;\r\n    to: number;\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    path: string;\r\n    next_page_url: string|null;\r\n    prev_page_url: string|null;\r\n}\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n    pagination: {data: []}\r\n};\r\n","<form class=\"input-container\" (ngSubmit)=\"openSearchPage({query: formControl.value})\">\n    <input type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"formControl\" placeholder=\"Search files and folders...\" #trigger trans-placeholder>\n    <button type=\"button\" mat-icon-button class=\"search-icon\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n    </button>\n    <button type=\"button\" mat-icon-button class=\"cancel-icon\" *ngIf=\"formControl.value\" (click)=\"resetForm()\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</form>\n\n<mat-autocomplete #auto=\"matAutocomplete\" class=\"file-types-autocomplete mat-elevation-z1\" (optionSelected)=\"executeAction($event)\" [displayWith]=\"displayFn\">\n    <ng-container *ngFor=\"let result of results$ | async\">\n        <mat-option [value]=\"result\">\n            <file-icon [type]=\"result.content.type\"></file-icon>\n            <div class=\"meta\">\n                <div class=\"name\">{{ result.type === 'entryType' ? (result.content.name | trans) : result.content.name}}</div>\n                <div class=\"owner\" *ngIf=\"result.content.users\">{{result.content.users[0]?.display_name}}</div>\n            </div>\n            <div class=\"date\" *ngIf=\"result.content.updated_at\">{{result.content.updated_at | formattedDate}}</div>\n        </mat-option>\n    </ng-container>\n</mat-autocomplete>\n","import {\n    ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SEARCH_FILE_TYPES } from '../search-file-types';\nimport {\n    MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport { Store } from '@ngxs/store';\nimport { OpenSearchPage } from '../../state/actions/commands';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport {\n    DriveEntriesPaginationResponse, DriveEntryApiService\n} from '../../drive-entry-api.service';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { EMPTY_PAGINATION_RESPONSE } from '@common/core/types/pagination/pagination-response';\n\ninterface SearchResult {\n    type: 'entry'|'entryType';\n    content: DriveEntry|{name: string, type: string};\n}\n\n@Component({\n    selector: 'main-searchbar',\n    templateUrl: './main-searchbar.component.html',\n    styleUrls: ['./main-searchbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainSearchbarComponent implements OnInit {\n    @ViewChild('trigger', { read: MatAutocompleteTrigger }) trigger: MatAutocompleteTrigger;\n    @ViewChild('trigger', { read: ElementRef }) input: ElementRef<HTMLInputElement>;\n    @ViewChild('auto') autocomplete: MatAutocomplete;\n    private defaultResults: SearchResult[] = [];\n    public formControl = new FormControl();\n    public results$: BehaviorSubject<SearchResult[]> = new BehaviorSubject([]);\n    private lastQuery: string;\n\n    constructor(\n        private store: Store,\n        private driveApi: DriveEntryApiService,\n    ) {\n        this.setDefaultResults();\n    }\n\n    ngOnInit() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            filter(q => typeof q === 'string'),\n            switchMap(query => this.search(query))\n        ).subscribe(response => {\n            this.results$.next((response.data || []).map(entry => {\n                return {type: 'entry', content: entry} as SearchResult;\n            }));\n        });\n    }\n\n    public executeAction(e: MatAutocompleteSelectedEvent) {\n        const value = e.option.value as SearchResult;\n\n        if (value.type === 'entryType') {\n            this.openSearchPage({type: value.content.type});\n            this.resetForm();\n        } else {\n            this.store.dispatch(new EntryDoubleTapped(value.content as DriveEntry));\n        }\n\n        this.closePanelAndBlur();\n    }\n\n    public openSearchPage(params: {type?: string, query?: string}) {\n        this.store.dispatch(new OpenSearchPage(params)).subscribe(() => {\n            this.closePanelAndBlur();\n        });\n    }\n\n    private search(query: string): Observable<DriveEntriesPaginationResponse> {\n        this.lastQuery = query;\n        if ( ! query || query.length < 3) {\n            return observableOf(EMPTY_PAGINATION_RESPONSE) as any;\n        }\n        return this.driveApi.getCurrentUserEntries({query, per_page: 8});\n    }\n\n    private setDefaultResults() {\n        this.defaultResults = SEARCH_FILE_TYPES.map(entryType => {\n            return {type: 'entryType', content: entryType} as SearchResult;\n        });\n\n        this.results$.next(this.defaultResults);\n    }\n\n    public resetForm() {\n        this.formControl.reset();\n        this.setDefaultResults();\n        this.lastQuery = null;\n    }\n\n    private closePanelAndBlur() {\n        this.trigger.closePanel();\n        this.input.nativeElement.blur();\n    }\n\n    displayFn = () => {\n        // always show original user query when\n        // clicking on any autocomplete option\n        return this.lastQuery || '';\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>New Folder</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"folderName\" placeholder=\"Folder name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Create</button>\n    </mat-dialog-actions>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DriveFolder } from '../../models/driveFolder';\nimport { FoldersApiService } from '../../api/folders-api.service';\nimport { Store } from '@ngxs/store';\nimport { BackendErrorResponse } from 'common/core/types/backend-error-response';\nimport { DriveState } from '../../../state/drive-state';\nimport { finalize } from 'rxjs/operators';\nimport { NewFolderCreated } from '../../../state/actions/events';\n\nexport interface CrupdateFolderDialogData {\n    folder?: DriveFolder;\n}\n\nexport interface CrupdateFolderErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'crupdate-folder-dialog',\n    templateUrl: './crupdate-folder-dialog.component.html',\n    styleUrls: ['./crupdate-folder-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateFolderDialogComponent {\n    public folderName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: CrupdateFolderErrors = {};\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateFolderDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateFolderDialogData,\n        private store: Store,\n        private foldersApi: FoldersApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    public confirm() {\n        this.loading.next(true);\n\n        const activeFolder = this.store.selectSnapshot(DriveState.activeFolder);\n        const params = {\n            name: this.folderName.value,\n            parent_id: (activeFolder ? activeFolder.id : null),\n        };\n\n        return this.foldersApi.create(params)\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(response => {\n                this.setErrors();\n                this.store.dispatch(new NewFolderCreated(response.folder));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<CrupdateFolderErrors>) {\n        this.errors = response ? response.messages : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { Modal } from 'common/core/ui/dialogs/modal.service';\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { Select, Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { UploadedFile } from 'common/uploads/uploaded-file';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\n\n@Component({\n    selector: 'sidebar-action-buttons',\n    templateUrl: './sidebar-action-buttons.component.html',\n    styleUrls: ['./sidebar-action-buttons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarActionButtonsComponent {\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    constructor(\n        private dialog: Modal,\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) public uploadInputConfig: UploadInputConfig,\n    ) {}\n\n    public openNewFolderDialog() {\n        this.dialog.open(CrupdateFolderDialogComponent);\n    }\n\n    public openUploadsPanel(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n}\n","<button mat-raised-button color=\"accent\" class=\"upload-button\" [disabled]=\"!(canUpload$ | async)\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"openUploadsPanel($event)\">\n    <mat-icon svgIcon=\"cloud-upload\"></mat-icon>\n    <span trans>Upload</span>\n</button>\n\n<button mat-raised-button color=\"accent\" class=\"new-folder-button\" [disabled]=\"!(canUpload$ | async)\" (click)=\"openNewFolderDialog()\">\n    <mat-icon svgIcon=\"create-new-folder\"></mat-icon>\n</button>\n","import { ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\nexport abstract class BaseDropTarget implements OnInit, OnDestroy {\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    protected subs: Subscription[] = [];\n    protected active: boolean;\n    protected abstract el: ElementRef<HTMLElement>;\n\n    ngOnInit() {\n        this.dragging.subscribe(dragging => {\n            if (dragging) {\n                this.onDragStart();\n            } else {\n                this.onDragEnd();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    protected abstract canDrop();\n    protected abstract executeAction();\n\n    protected onDragStart() {\n        const enter = fromEvent(this.el.nativeElement, 'mouseenter')\n            .subscribe(() => this.onDragEnter());\n\n        const leave = fromEvent(this.el.nativeElement, 'mouseleave')\n            .subscribe(() => this.onDragLeave());\n\n        this.subs.push(enter, leave);\n    }\n\n    protected onDragEnter() {\n        const canDrop = this.canDrop(),\n            classes = ['drag-over'];\n        if (canDrop) {\n            this.active = true;\n            classes.push('can-drop');\n        }\n        this.el.nativeElement.classList.add(...classes);\n    }\n\n    protected onDragLeave() {\n        this.active = false;\n        this.removeDragOverClass();\n    }\n\n    protected onDragEnd() {\n        this.unsubscribe();\n        this.removeDragOverClass();\n\n        // pointer never left element before drag stop,\n        // we can assume that user dropped on this el\n        if (this.active && this.canDrop()) {\n            this.executeAction();\n            this.active = false;\n        }\n    }\n\n    protected unsubscribe() {\n        this.subs.forEach(sub => sub && sub.unsubscribe());\n    }\n\n    protected removeDragOverClass() {\n        this.el.nativeElement.classList.remove(...['drag-over', 'can-drop']);\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { BaseDropTarget } from './base-drop-target';\nimport { DriveState} from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { RootFolder } from '../../folders/root-folder';\n\n@Directive({\n    selector: '[folderDropTarget]'\n})\nexport class FolderDropTargetDirective extends BaseDropTarget {\n    @Input('folderDropTarget') folder: DriveFolder|RootFolder;\n\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n    ) {\n      super();\n    }\n\n    protected canDrop(): boolean {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\n            folder = this.folder as DriveFolder|RootFolder;\n\n        return DriveState.canMoveEntriesTo(entries, folder);\n    }\n\n    protected executeAction() {\n        return this.store.dispatch(new MoveEntries(this.folder));\n    }\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/base-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /**\n         * A selection model with multi-selection to track expansion status.\n         */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /**\n     * Toggles one single data node's expanded/collapsed state.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggle(dataNode) {\n        this.expansionModel.toggle(dataNode);\n    }\n    /**\n     * Expands one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expand(dataNode) {\n        this.expansionModel.select(dataNode);\n    }\n    /**\n     * Collapses one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapse(dataNode) {\n        this.expansionModel.deselect(dataNode);\n    }\n    /**\n     * Whether a given data node is expanded or not. Returns true if the data node is expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(dataNode);\n    }\n    /**\n     * Toggles a subtree rooted at `node` recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /**\n     * Collapse all dataNodes in the tree.\n     * @return {?}\n     */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /**\n     * Expands a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expandDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n    /**\n     * Collapses a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapseDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\nif (false) {\n    /**\n     * Saved data node for `expandAll` action.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.dataNodes;\n    /**\n     * A selection model with multi-selection to track expansion status.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getChildren;\n    /**\n     * Gets a list of descendent data nodes of a subtree rooted at given data node recursively.\n     * @abstract\n     * @param {?} dataNode\n     * @return {?}\n     */\n    BaseTreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expands all data nodes in the tree.\n     * @abstract\n     * @return {?}\n     */\n    BaseTreeControl.prototype.expandAll = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/flat-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n * @template T\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /**\n     * Construct with flat tree data node functions getLevel and isExpandable.\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     */\n    constructor(getLevel, isExpandable) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        /** @type {?} */\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FlatTreeControl.prototype.getLevel;\n    /** @type {?} */\n    FlatTreeControl.prototype.isExpandable;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/nested-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n * @template T\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /**\n     * Construct with nested tree function getChildren.\n     * @param {?} getChildren\n     */\n    constructor(getChildren) {\n        super();\n        this.getChildren = getChildren;\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        /** @type {?} */\n        const allNodes = this.dataNodes.reduce((/**\n         * @param {?} accumulator\n         * @param {?} dataNode\n         * @return {?}\n         */\n        (accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode]), []);\n        this.expansionModel.select(...allNodes);\n    }\n    /**\n     * Gets a list of descendant dataNodes of a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /**\n     * A helper function to get descendants recursively.\n     * @protected\n     * @param {?} descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        /** @type {?} */\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((/**\n             * @param {?} child\n             * @return {?}\n             */\n            (child) => this._getDescendants(descendants, child)));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter((/** @type {?} */ (Boolean))))\n                .subscribe((/**\n             * @param {?} children\n             * @return {?}\n             */\n            children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NestedTreeControl.prototype.getChildren;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree control interface. User can implement TreeControl to expand/collapse dataNodes in the tree.\n * The CDKTree will use this TreeControl to expand/collapse a node.\n * User can also use it outside the `<cdk-tree>` to control the expansion status of the tree.\n * @record\n * @template T\n */\nfunction TreeControl() { }\nif (false) {\n    /**\n     * The saved tree nodes data for `expandAll` action.\n     * @type {?}\n     */\n    TreeControl.prototype.dataNodes;\n    /**\n     * The expansion model\n     * @type {?}\n     */\n    TreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    TreeControl.prototype.getChildren;\n    /**\n     * Whether the data node is expanded or collapsed. Return true if it's expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.isExpanded = function (dataNode) { };\n    /**\n     * Get all descendants of a data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expand or collapse data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggle = function (dataNode) { };\n    /**\n     * Expand one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expand = function (dataNode) { };\n    /**\n     * Collapse one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapse = function (dataNode) { };\n    /**\n     * Expand all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.expandAll = function () { };\n    /**\n     * Collapse all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.collapseAll = function () { };\n    /**\n     * Toggle a data node by expand/collapse it and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggleDescendants = function (dataNode) { };\n    /**\n     * Expand a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expandDescendants = function (dataNode) { };\n    /**\n     * Collapse a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapseDescendants = function (dataNode) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\n/** @nocollapse */\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Context provided to the tree node component.\n * @template T\n */\nclass CdkTreeNodeOutletContext {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\nif (false) {\n    /**\n     * Data for the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.$implicit;\n    /**\n     * Depth of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.level;\n    /**\n     * Index location of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.index;\n    /**\n     * Length of the number of total dataNodes.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.count;\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n * @template T\n */\nclass CdkTreeNodeDef {\n    /**\n     * \\@docs-private\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\n/** @nocollapse */\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     * @type {?}\n     */\n    CdkTreeNodeDef.prototype.when;\n    /** @type {?} */\n    CdkTreeNodeDef.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n * @template T\n */\nclass CdkTree {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Level of nodes\n         */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     * @return {?}\n     */\n    get dataSource() { return this._dataSource; }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        const defaultNodeDefs = this._nodeDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this.renderNodeChanges(data)));\n        }\n        else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /**\n     * Check for changes made in the data and render each change (node added/removed/moved).\n     * @param {?} data\n     * @param {?=} dataDiffer\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        /** @type {?} */\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((/**\n         * @param {?} item\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[(/** @type {?} */ (currentIndex))], (/** @type {?} */ (currentIndex)), viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (adjustedPreviousIndex)));\n                this._levels.delete(item.item);\n            }\n            else {\n                /** @type {?} */\n                const view = viewContainer.get((/** @type {?} */ (adjustedPreviousIndex)));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     * @param {?} data\n     * @param {?} i\n     * @return {?}\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        /** @type {?} */\n        const nodeDef = this._nodeDefs.find((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.when && def.when(i, data))) || this._defaultNodeDef;\n        if (!nodeDef) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     * @param {?} nodeData\n     * @param {?} index\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        /** @type {?} */\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        /** @type {?} */\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = (/** @type {?} */ (this._levels.get(parentData))) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        /** @type {?} */\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._onDestroy;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataDiffer;\n    /**\n     * Stores the node definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._defaultNodeDef;\n    /**\n     * Data subscription\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSubscription;\n    /**\n     * Level of nodes\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._levels;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSource;\n    /**\n     * The tree controller\n     * @type {?}\n     */\n    CdkTree.prototype.treeControl;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @type {?}\n     */\n    CdkTree.prototype.trackBy;\n    /** @type {?} */\n    CdkTree.prototype._nodeOutlet;\n    /**\n     * The tree node template for the tree\n     * @type {?}\n     */\n    CdkTree.prototype._nodeDefs;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     * @type {?}\n     */\n    CdkTree.prototype.viewChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._changeDetectorRef;\n}\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n * @template T\n */\nclass CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     */\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits when the node's data has changed.\n         */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should be 'group' if it's an internal node,\n         * and 'treeitem' if it's a leaf node.\n         */\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = (/** @type {?} */ (this));\n    }\n    /**\n     * The tree node's data.\n     * @return {?}\n     */\n    get data() { return this._data; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Focuses the menu item. Implements for FocusableOption.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setRoleFromData() {\n        if (this._tree.treeControl.isExpandable) {\n            this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n        }\n        else {\n            if (!this._tree.treeControl.getChildren) {\n                throw getTreeControlFunctionsMissingError();\n            }\n            /** @type {?} */\n            const childrenNodes = this._tree.treeControl.getChildren(this._data);\n            if (Array.isArray(childrenNodes)) {\n                this._setRoleFromChildren((/** @type {?} */ (childrenNodes)));\n            }\n            else if (isObservable(childrenNodes)) {\n                childrenNodes.pipe(takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => this._setRoleFromChildren(children)));\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} children\n     * @return {?}\n     */\n    _setRoleFromChildren(children) {\n        this.role = children && children.length ? 'group' : 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\n/** @nocollapse */\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     * @type {?}\n     */\n    CdkTreeNode.mostRecentTreeNode;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._destroyed;\n    /**\n     * Emits when the node's data has changed.\n     * @type {?}\n     */\n    CdkTreeNode.prototype._dataChanges;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._data;\n    /**\n     * The role of the node should be 'group' if it's an internal node,\n     * and 'treeitem' if it's a leaf node.\n     * @type {?}\n     */\n    CdkTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._tree;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/nested-node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n * @template T\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     */\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        /** @type {?} */\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes((/** @type {?} */ (childrenNodes)));\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            result => this.updateChildrenNodes(result)));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateChildrenNodes()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /**\n     * Add children dataNodes to the NodeOutlet\n     * @protected\n     * @param {?=} children\n     * @return {?}\n     */\n    updateChildrenNodes(children) {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            /** @type {?} */\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Clear the children dataNodes.\n     * @protected\n     * @return {?}\n     */\n    _clear() {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Gets the outlet for the current node.\n     * @private\n     * @return {?}\n     */\n    _getNodeOutlet() {\n        /** @type {?} */\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find((/**\n         * @param {?} outlet\n         * @return {?}\n         */\n        outlet => !outlet._node || outlet._node === this));\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkNestedTreeNode.prototype._dataDiffer;\n    /**\n     * The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`.\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._children;\n    /**\n     * The children node placeholder.\n     * @type {?}\n     */\n    CdkNestedTreeNode.prototype.nodeOutlet;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass CdkTreeNodePadding {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding(true)));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe((/**\n         * @return {?}\n         */\n        () => this._setPadding()));\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = (/** @type {?} */ (coerceNumberProperty(value, null)));\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    /**\n     * @param {?=} forceChange\n     * @return {?}\n     */\n    _setPadding(forceChange = false) {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            /** @type {?} */\n            const element = this._element.nativeElement;\n            /** @type {?} */\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            /** @type {?} */\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            this._renderer.setStyle(element, paddingProp, padding);\n            this._renderer.setStyle(element, resetProp, null);\n            this._currentPadding = padding;\n        }\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\n/** @nocollapse */\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodePadding.ngAcceptInputType_level;\n    /**\n     * Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._currentPadding;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._destroyed;\n    /**\n     * CSS units used for the indentation value.\n     * @type {?}\n     */\n    CdkTreeNodePadding.prototype.indentUnits;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._level;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._indent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._treeNode;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._tree;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Node toggle to expand/collapse the node.\n * @template T\n */\nclass CdkTreeNodeToggle {\n    /**\n     * @param {?} _tree\n     * @param {?} _treeNode\n     */\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /**\n     * Whether expand/collapse the node recursively.\n     * @return {?}\n     */\n    get recursive() { return this._recursive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\n/** @nocollapse */\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeToggle.ngAcceptInputType_recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._treeNode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); }, providers: [FocusMonitor, CdkTreeNodeDef] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                providers: [FocusMonitor, CdkTreeNodeDef]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n * @template T\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._tree;\n}\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * @template T\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeDef.prototype.data;\n}\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n * @template T\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /**\n     * Whether the node is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Tabindex for the node.\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatNestedTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatNestedTreeNode.prototype.node;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._tabIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n * @template T\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.level;\n    /**\n     * The indent for each level. Default number 40px from material design menu sub-menu spec.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.indent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\n/** @nocollapse */\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTree.prototype._nodeOutlet;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n * @template T\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeToggle.prototype.recursive;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: MAT_TREE_DIRECTIVES,\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/flat-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n * @template T, F\n */\nclass MatTreeFlattener {\n    /**\n     * @param {?} transformFunction\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     * @param {?} getChildren\n     */\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenNode(node, level, resultNodes, parentMap) {\n        /** @type {?} */\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            /** @type {?} */\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe((/**\n                     * @param {?} children\n                     * @return {?}\n                     */\n                    children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    }));\n                }\n            }\n        }\n        return resultNodes;\n    }\n    /**\n     * @param {?} children\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((/**\n         * @param {?} child\n         * @param {?} index\n         * @return {?}\n         */\n        (child, index) => {\n            /** @type {?} */\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        }));\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    flattenNodes(structuredData) {\n        /** @type {?} */\n        let resultNodes = [];\n        structuredData.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => this._flattenNode(node, 0, resultNodes, [])));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     * @param {?} nodes\n     * @param {?} treeControl\n     * @return {?}\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            /** @type {?} */\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        }));\n        return results;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlattener.prototype.transformFunction;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getLevel;\n    /** @type {?} */\n    MatTreeFlattener.prototype.isExpandable;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getChildren;\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n * @template T, F\n */\nclass MatTreeFlatDataSource extends DataSource {\n    /**\n     * @param {?} _treeControl\n     * @param {?} _treeFlattener\n     * @param {?=} initialData\n     */\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        /** @type {?} */\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._flattenedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._expandedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._data;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeFlattener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/nested-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n * @template T\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) { this._data.next(value); }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            return this.data;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeNestedDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","import {Injectable} from '@angular/core';\nimport {DriveFolder} from '../../folders/models/driveFolder';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Observable, of as observableOf} from 'rxjs';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { filter } from 'rxjs/operators';\n\n/** Flat node with expandable and level information */\nexport interface FolderFlatNode extends DriveFolder {\n    level: number;\n    expandable: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersTreeService {\n    @Select(DriveState.userFolders) userFolders$: Observable<DriveFolder[]>;\n\n    public control: FlatTreeControl<FolderFlatNode>;\n\n    public flattener: MatTreeFlattener<DriveFolder, FolderFlatNode>;\n\n    public dataSource: MatTreeFlatDataSource<DriveFolder, FolderFlatNode>;\n\n    constructor() {\n        this.createTreeFlattener();\n        this.createTreeControl();\n        this.createTreeDataSource();\n        this.bindToStore();\n    }\n\n    private createTreeFlattener() {\n        this.flattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable, this.getChildren\n        );\n    }\n\n    private createTreeControl() {\n        this.control = new FlatTreeControl<FolderFlatNode>(\n            this.getLevel,\n            this.isExpandable\n        );\n    }\n\n    private createTreeDataSource() {\n        this.dataSource = new MatTreeFlatDataSource(\n            this.control,\n            this.flattener\n        );\n    }\n\n    private bindToStore() {\n        this.userFolders$\n            .pipe(filter(x => !!x))\n            .subscribe(folders => {\n                this.dataSource.data = folders;\n            });\n    }\n\n    public transformer(node: DriveFolder, level: number) {\n        const flatNode = Object.assign({}, node) as FolderFlatNode;\n        flatNode.level = level;\n        flatNode.expandable = !!node.children;\n        return flatNode;\n    }\n\n    private getLevel(node: FolderFlatNode): number {\n        return node.level;\n    }\n\n    private isExpandable(node: FolderFlatNode): boolean {\n        return node.expandable;\n    }\n\n    private getChildren(node: DriveFolder): Observable<DriveFolder[]> {\n        return observableOf(node.children);\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const AVAILABLE_CONTEXT_MENUS = new InjectionToken<any>('AVAILABLE_CONTEXT_MENUS');\r\n","import {OverlayRef} from '@angular/cdk/overlay';\r\n\r\nexport class ContextMenuRef<T> {\r\n    constructor(private overlayRef: OverlayRef) {}\r\n\r\n    public close() {\r\n        if (this.overlayRef) {\r\n            this.overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    public backdropClick() {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    public attachments() {\r\n        return this.overlayRef.attachments();\r\n    }\r\n\r\n    public detachments() {\r\n        return this.overlayRef.detachments();\r\n    }\r\n\r\n    public backdropElement() {\r\n        return this.overlayRef.backdropElement;\r\n    }\r\n\r\n    public contextMenuElement() {\r\n        return this.overlayRef.overlayElement;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CONTEXT_MENU_DATA = new InjectionToken<{ [key: string]: any }>('CONTEXT_MENU_DATA');\r\n","import {ComponentFactoryResolver, ElementRef, Injectable, Injector, NgZone} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {Overlay, PositionStrategy} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ContextMenuRef} from './context-menu-ref';\r\nimport {CONTEXT_MENU_DATA} from './context-menu-data';\r\n\r\nexport interface ContextMenuParams {\r\n    data?: { [key: string]: any };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    originX?: 'start' | 'center' | 'end';\r\n    originY?: 'top' | 'center' | 'bottom';\r\n    overlayX?: 'start' | 'center' | 'end';\r\n    overlayY?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\ntype MenuOrigin = MouseEvent | EventTarget | HTMLElement;\r\n\r\nconst ORIGIN_ID = 'dynamic-context-menu-origin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContextMenu {\r\n    private lastOrigin: HTMLElement;\r\n    private openContextMenu: ContextMenuRef<any>|null;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private zone: NgZone,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlay: Overlay,\r\n    ) {\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationStart))\r\n            .subscribe(() => this.close());\r\n    }\r\n\r\n    public open<T>(component: ComponentType<T>, e: MenuOrigin, params: ContextMenuParams = {}): ContextMenuRef<T> {\r\n        this.close();\r\n\r\n        if ( ! component) {\r\n            return;\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(e, params);\r\n        this.openContextMenu = new ContextMenuRef(overlayRef);\r\n\r\n        const injector = new PortalInjector(this.injector, new WeakMap<any, any>([\r\n            [CONTEXT_MENU_DATA, params.data],\r\n            [ContextMenuRef, this.openContextMenu],\r\n        ]));\r\n\r\n        const portal = new ComponentPortal(component, null, injector);\r\n\r\n        overlayRef.attach(portal);\r\n        this.bindEventsToOverlay();\r\n\r\n        return this.openContextMenu;\r\n    }\r\n\r\n    /**\r\n     * Close currently open context menu.\r\n     */\r\n    public close() {\r\n        this.removeLastOrigin();\r\n\r\n        if (this.openContextMenu) {\r\n            this.openContextMenu.close();\r\n            this.openContextMenu = null;\r\n        }\r\n    }\r\n\r\n    private createOverlay(e: MenuOrigin, params: ContextMenuParams) {\r\n        return this.overlay.create({\r\n            positionStrategy: this.getMenuPositionStrategy(e, params),\r\n            scrollStrategy: this.overlay.scrollStrategies.close(),\r\n            hasBackdrop: true,\r\n            backdropClass: 'context-menu-backdrop',\r\n            panelClass: 'context-menu-overlay'\r\n        });\r\n    }\r\n\r\n    private bindEventsToOverlay() {\r\n        this.openContextMenu.contextMenuElement().addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropElement().addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.detachments().subscribe(() => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private getMenuPositionStrategy(e: MenuOrigin, params: ContextMenuParams): PositionStrategy {\r\n        this.createOriginFromEvent(e, params);\r\n\r\n        const primary = {\r\n            originX: params.originX || 'center',\r\n            originY: params.originY || 'bottom',\r\n            overlayX: params.overlayX || 'center',\r\n            overlayY: params.overlayY || 'top',\r\n        };\r\n\r\n        return this.overlay.position().flexibleConnectedTo(new ElementRef(this.lastOrigin))\r\n            .withPositions([\r\n                primary,\r\n                {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'}\r\n            ]);\r\n    }\r\n\r\n    private createOriginFromEvent(e: MenuOrigin, params: ContextMenuParams) {\r\n        this.removeLastOrigin();\r\n\r\n        if (e instanceof HTMLElement || e instanceof EventTarget) {\r\n            this.lastOrigin = e as HTMLElement;\r\n        } else {\r\n            this.lastOrigin = document.createElement('div');\r\n            this.lastOrigin.style.position = 'fixed';\r\n            this.lastOrigin.style.top = e.clientY + (params.offsetY || 0) + 'px';\r\n            this.lastOrigin.style.left = e.clientX + (params.offsetX || 0) + 'px';\r\n            this.lastOrigin.id = ORIGIN_ID;\r\n            document.body.appendChild(this.lastOrigin);\r\n        }\r\n    }\r\n\r\n    private removeLastOrigin() {\r\n        if (this.lastOrigin && this.lastOrigin.id === ORIGIN_ID) {\r\n            this.lastOrigin.remove();\r\n        }\r\n    }\r\n}\r\n","import {Directive, ElementRef, Inject, Input, OnInit} from '@angular/core';\r\nimport {ContextMenu} from './context-menu.service';\r\nimport { AVAILABLE_CONTEXT_MENUS } from './available-context-menus';\r\n\r\n@Directive({\r\n    selector: '[contextMenu]'\r\n})\r\nexport class ContextMenuDirective implements OnInit {\r\n    @Input('contextMenu') params: string|{type: string, [key: string]: any};\r\n    @Input('disableContextMenu') disableContextMenu = false;\r\n\r\n    public availableMenus: object = {};\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private contextMenu: ContextMenu,\r\n        @Inject(AVAILABLE_CONTEXT_MENUS) _availableMenus: object[]\r\n    ) {\r\n        _availableMenus.forEach(config => {\r\n            Object.assign(this.availableMenus, config);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (this.disableContextMenu) return;\r\n\r\n            this.contextMenu.open(\r\n                this.getMenuComponent(),\r\n                e,\r\n                {\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    data: this.getMenuData()\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private getMenuComponent() {\r\n        if (typeof this.params === 'string') {\r\n            return this.availableMenus[this.params];\r\n        } else {\r\n            return this.availableMenus[this.params.type];\r\n        }\r\n    }\r\n\r\n    private getMenuData() {\r\n        return (typeof this.params === 'string') ? {type: this.params} : this.params;\r\n    }\r\n}\r\n","<div class=\"mat-tree-node root-tree-node\" *ngIf=\"showRootNode\" (click)=\"selectFolder()\" [class.active]=\"selectedFolder === 'root'\">\n    <mat-icon svgIcon=\"network-drive-custom\" class=\"folder-icon\"></mat-icon>\n    <span class=\"text\" trans>My Drive</span>\n</div>\n<mat-tree [dataSource]=\"tree.dataSource\" [treeControl]=\"tree.control\">\n    <mat-tree-node\n            *matTreeNodeDef=\"let node\"\n            matTreeNodePadding\n            [matTreeNodePaddingIndent]=\"showRootNode ? 40 : 24\"\n            [contextMenu]=\"{type: 'entry', entry: node}\"\n            [disableContextMenu]=\"disableContextMenu\"\n            [folderDropTarget]=\"node\"\n            [class.active]=\"selectedFolder === node.hash\"\n            class=\"tree-node\"\n    >\n        <mat-icon class=\"toggle-expansion-icon\"\n                  matTreeNodeToggle\n                  [class.expanded]=\"tree.control.isExpanded(node)\"\n                  svgIcon=\"arrow-drop-down\"\n        ></mat-icon>\n        <button type=\"button\" class=\"no-style folder-button\" (click)=\"selectFolder(node)\">\n            <mat-icon svgIcon=\"folder\" class=\"folder-icon\"></mat-icon>\n            <span class=\"folder-name text\">{{node.name}}</span>\n        </button>\n    </mat-tree-node>\n</mat-tree>\n","import {\n    ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation\n} from '@angular/core';\nimport { FoldersTreeService } from './folders-tree.service';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\n\n@Component({\n    selector: 'folders-tree',\n    templateUrl: './folders-tree.component.html',\n    styleUrls: ['./folders-tree.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FoldersTreeComponent {\n    @HostBinding('class.expanded') @Input() public expanded = false;\n    @Input() selectedFolder: string;\n    @Input() movingEntries: DriveEntry[] = [];\n    @Input() disableContextMenu = false;\n    @HostBinding('class.has-root-node') @Input() showRootNode = false;\n    @Output() folderSelected: EventEmitter<DriveFolder|RootFolder> = new EventEmitter();\n\n    // TODO: start trackBy function when it's fixed on angular material side\n    constructor(public tree: FoldersTreeService) {}\n\n    public selectFolder(folder?: DriveFolder|RootFolder) {\n        folder = folder || ROOT_FOLDER;\n        this.selectedFolder = folder.hash;\n        this.folderSelected.emit(folder);\n    }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n    }\n}\n","<ng-container *ngIf=\"(spaceUsedPercent$ | async) >= 0\">\r\n    <mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"spaceUsedPercent$ | async\"></mat-progress-bar>\r\n\r\n    <div class=\"usage-info\">\r\n        {{spaceUsed$ | async | formattedFileSize}} {{'of' | trans}} {{spaceAvailable$ | async | formattedFileSize }} {{'used' | trans}}\r\n    </div>\r\n\r\n    <div class=\"upgrade-link-container\" *ngIf=\"billingEnabled()\">\r\n        <a routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Storage</a>\r\n    </div>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'available-space-indicator',\n    templateUrl: './available-space-indicator.component.html',\n    styleUrls: ['./available-space-indicator.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AvailableSpaceIndicatorComponent {\n    @Select(DriveState.userSpaceUsed) spaceUsed$: Observable<number>;\n    @Select(DriveState.userSpaceAvailable) spaceAvailable$: Observable<number>;\n    @Select(DriveState.spaceUsedPercent) spaceUsedPercent$: Observable<number>;\n\n    constructor(public settings: Settings) {}\n\n    public billingEnabled() {\n        return this.settings.get('billing.enable');\n    }\n}\n","import {Component, ViewEncapsulation, ChangeDetectionStrategy} from '@angular/core';\nimport { DriveUrlsService } from '../drive-urls.service';\nimport { DriveFolder } from '../folders/models/driveFolder';\nimport { DriveState} from '../state/drive-state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OpenFolder } from '../state/actions/commands';\nimport { ROOT_FOLDER, RootFolder } from '../folders/root-folder';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(\n        public urls: DriveUrlsService,\n        private store: Store\n    ) {}\n\n    public openFolder(folder: DriveFolder|RootFolder) {\n        this.store.dispatch(new OpenFolder(folder));\n    }\n\n    public getRootFolder(): RootFolder {\n        return ROOT_FOLDER;\n    }\n}\n","<sidebar-action-buttons></sidebar-action-buttons>\r\n\r\n<div class=\"drive-folders\">\r\n    <div class=\"sidebar-menu-item\" [routerLink]=\"urls.driveRoot()\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [folderDropTarget]=\"getRootFolder()\">\r\n        <mat-icon svgIcon=\"arrow-drop-down\" class=\"toggle-expansion-icon\" [class.expanded]=\"tree.expanded\" (click)=\"tree.toggle(); $event.stopPropagation()\"></mat-icon>\r\n        <mat-icon svgIcon=\"network-drive-custom\"></mat-icon>\r\n        <span class=\"text\" trans>My Drive</span>\r\n    </div>\r\n\r\n    <folders-tree (folderSelected)=\"openFolder($event)\" [selectedFolder]=\"(activePage$ | async).folderHash\" #tree></folders-tree>\r\n</div>\r\n\r\n<custom-menu class=\"sidebar-menu\" position=\"drive-sidebar\" itemClass=\"sidebar-menu-item\"></custom-menu>\r\n\r\n<available-space-indicator></available-space-indicator>","<ng-container *ngIf=\"entry$ | async as entry\">\n    <ng-container *ngIf=\"savingDescription$ | async; else descriptionSaved\">\n        <span trans>Saving...</span>\n    </ng-container>\n    <ng-template #descriptionSaved>\n        <div class=\"input-container\" *ngIf=\"editingDescription$ | async; else descriptionEl\">\n            <label for=\"description\" class=\"hidden\" trans>Description</label>\n            <textarea\n                    rows=\"4\"\n                    id=\"description\"\n                    #textArea\n                    [value]=\"entry.description\"\n                    (enterKeybind)=\"textArea.blur()\"\n                    (blur)=\"updateDescription(entry, textArea.value)\"\n            ></textarea>\n        </div>\n        <ng-template #descriptionEl>\n            <div class=\"description-text\" (click)=\"editDescription()\">{{entry.description || ('Add a description' | trans)}}</div>\n            <button mat-icon-button (click)=\"editDescription()\" [matTooltip]=\"'Edit description' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </ng-template>\n    </ng-template>\n</ng-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { UpdateEntryDescription } from '../../../state/actions/commands';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../../state/drive-state';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'entry-description-panel',\n    templateUrl: './entry-description-panel.component.html',\n    styleUrls: ['./entry-description-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDescriptionPanelComponent implements AfterViewInit {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @ViewChildren('textArea') textArea: QueryList<ElementRef<HTMLTextAreaElement>>;\n    public editingDescription$ = new BehaviorSubject(false);\n    public savingDescription$ = new BehaviorSubject(false);\n\n    constructor(private store: Store) {}\n\n    public ngAfterViewInit() {\n        this.textArea.changes.subscribe(queryList => {\n            queryList.length && queryList.first.nativeElement.focus();\n        });\n    }\n\n    public editDescription() {\n        this.editingDescription$.next(true);\n    }\n\n    public updateDescription(entry: FileEntry, value: string) {\n        this.editingDescription$.next(false);\n        if (entry.description === value) return;\n        this.savingDescription$.next(true);\n        this.store.dispatch(new UpdateEntryDescription(entry, value))\n            .pipe(finalize(() => this.savingDescription$.next(false)))\n            .subscribe();\n    }\n}\n","<img [src]=\"getPreviewUrl()\"\r\n     *ngIf=\"file.type === 'image'\"\r\n     [ngClass]=\"file.type+'-file'\"\r\n     class=\"file-color\"\r\n     draggable=\"false\">\r\n\r\n<file-icon *ngIf=\"file.type !== 'image'\" [type]=\"file.type === 'folder' ? getFolderIcon() : file.type\"></file-icon>","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'file-thumbnail',\n    templateUrl: './file-thumbnail.component.html',\n    styleUrls: ['./file-thumbnail.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileThumbnailComponent {\n    @Input() file: DriveEntry;\n\n    public getPreviewUrl(): string {\n        let url = this.file.url;\n        if (this.file.thumbnail) {\n            const separator = url.includes('?') ? '&' : '?';\n            url += separator + 'thumbnail=true';\n        }\n        return url;\n    }\n\n    public getFolderIcon() {\n        if (this.file.users && this.file.users.length > 1) {\n            return 'shared-folder';\n        } else {\n            return 'folder';\n        }\n    }\n}\n","<ng-container *ngIf=\"entry$ | async as entry; else nothingSelected\">\n    <ng-container *ngIf=\"entry.updated_at; else nothingSelected\">\n        <file-thumbnail *ngIf=\"entry.type === 'image'\" class=\"preview\" [file]=\"entry\"></file-thumbnail>\n        <div class=\"users-list\">\n            <img *ngFor=\"let user of entry.users\" [src]=\"user.avatar\" [matTooltip]=\"user.display_name\">\n        </div>\n        <div class=\"details-list\">\n            <div class=\"item\">\n                <div class=\"name\" trans>Type</div>\n                <div class=\"value type-value\" trans>{{entry.type}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Size</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Storage Used</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item location-item\">\n                <div class=\"name\" trans>Location</div>\n                <div class=\"value\" (click)=\"openLocation()\">\n                    <mat-icon svgIcon=\"folder\"></mat-icon>\n                    <span class=\"text\">{{(parent$ | async)?.name || 'My Drive'}}</span>\n                </div>\n            </div>\n            <div class=\"item\" *ngIf=\"entry.users && entry.users.length\">\n                <div class=\"name\" trans>Owner</div>\n                <div class=\"value\">{{entry.users[0].display_name}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Last Updated</div>\n                <div class=\"value\">{{entry.updated_at | formattedDate}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Created</div>\n                <div class=\"value\">{{entry.created_at | formattedDate}}</div>\n            </div>\n            <entry-description-panel></entry-description-panel>\n        </div>\n    </ng-container>\n</ng-container>\n\n<ng-template #nothingSelected>\n    <div class=\"nothing-selected\">\n        <mat-icon svgIcon=\"selection-tool-custom\" class=\"icon\"></mat-icon>\n        <div class=\"text\" trans>Select file or folder to view its details.</div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { DriveFolder } from '../../folders/models/driveFolder';\n\n@Component({\n    selector: 'details-panel',\n    templateUrl: './details-panel.component.html',\n    styleUrls: ['./details-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsPanelComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.selectedEntryParent) parent$: Observable<DriveFolder>;\n\n    constructor(private store: Store) {}\n\n    public openLocation() {\n        const parent = this.store.selectSnapshot(DriveState.selectedEntryParent);\n        this.store.dispatch(new OpenFolder(parent));\n    }\n}\n","<div class=\"header\">\n    <div class=\"title\">\n        <ng-container *ngIf=\"entry$ | async as entry; else defaultTitle\">\n            <ng-container *ngIf=\"entry.type; else defaultTitle\">\n                <file-icon [type]=\"entry.type\"></file-icon>\n                <div class=\"name\">{{entry.name}}</div>\n            </ng-container>\n        </ng-container>\n        <ng-template #defaultTitle>\n            <file-icon type=\"folder\"></file-icon>\n            <div class=\"name\">{{ ((activePage$ | async)?.viewName) | trans }}</div>\n        </ng-template>\n        <button mat-icon-button class=\"close-button\" (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n<details-panel></details-panel>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState} from '../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { ToggleDetailsSidebar } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'details-sidebar',\n    templateUrl: './details-sidebar.component.html',\n    styleUrls: ['./details-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsSidebarComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(private store: Store) {}\n\n    public close() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { DriveEntry } from '../../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid-item',\n    templateUrl: './files-grid-item.component.html',\n    styleUrls: ['./files-grid-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridItemComponent {\n    @HostBinding('class.drive-entry') driveEntry = true;\n    @Input() entry: DriveEntry;\n\n    @HostBinding('attr.data-id') get fileId() {\n        return this.entry.id;\n    }\n}\n","<div class=\"preview-container\">\n    <file-thumbnail class=\"preview\" [file]=\"entry\"></file-thumbnail>\n</div>\n<figcaption class=\"files-grid-item-footer\">\n    <file-icon [type]=\"entry.type\"></file-icon>\n    <div class=\"text\">{{entry.name}}</div>\n</figcaption>\n","import { Injectable } from '@angular/core';\r\nimport { EntriesSelectedViaDrag } from '../state/actions/events';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveDomCacheService } from './drive-dom-cache.service';\r\nimport { DriveState } from '../state/drive-state';\r\n\r\nconst GRID_ITEM_SELECTOR = 'files-grid-item';\r\n\r\ntype AreaEdge = 'top'|'left'|'right'|'bottom'|false;\r\n\r\ninterface SelectorRect extends ClientRect {\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilesDragSelectService {\r\n    private selectBox: HTMLDivElement;\r\n    private initial = {x: 0, y: 0, scrollTop: 0};\r\n    private lastPanEvent: HammerInput|null;\r\n    private scrollListener: EventListener;\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private cache: DriveDomCacheService,\r\n    ) {}\r\n\r\n    public start(e: HammerInput) {\r\n        this.cacheClientRects();\r\n        this.createSelectBox();\r\n        this.bindScroll();\r\n\r\n        this.initial = {\r\n            ...this.hammerToRelative(e),\r\n            scrollTop: this.cache.scrollCont.scrollTop,\r\n        };\r\n\r\n        this.selectBox.style.top = this.initial.y + 'px';\r\n        this.selectBox.style.left = this.initial.x + 'px';\r\n\r\n\r\n    }\r\n\r\n    public move(e: HammerInput) {\r\n        this.lastPanEvent = e;\r\n        this.resizeBox(e);\r\n    }\r\n\r\n    public end() {\r\n        this.removeSelectBox();\r\n        this.dispatchSelectedAction();\r\n        this.unbindScroll();\r\n    }\r\n\r\n    public resizeBox(e?: HammerInput|null) {\r\n        if ( ! e) e = this.lastPanEvent;\r\n        if ( ! e || ! this.selectBox) return;\r\n        const newPos = this.getNewSelectorPosition(e);\r\n        this.scrollAndRepositionSelector(newPos);\r\n        this.selectIntersectingElements();\r\n    }\r\n\r\n    /**\r\n     * Calculate new position of selector box.\r\n     */\r\n    private getNewSelectorPosition(e: HammerInput): SelectorRect {\r\n        const current = this.hammerToRelative(e);\r\n\r\n        let tmp,\r\n            x1 = this.initial.x,\r\n            y1 = this.initial.y,\r\n            x2 = current.x,\r\n            y2 = current.y;\r\n\r\n        if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n        if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\r\n        return {\r\n            width: x2 - x1,\r\n            height: y2 - y1,\r\n            top: y1,\r\n            right: x1 + (x2 - x1), // left + width\r\n            bottom: y1 + (y2 - y1), // top + height\r\n            left: x1,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if specified position intersects any container edge.\r\n     */\r\n    private reachedAreaEdge(newPos: ClientRect): AreaEdge {\r\n        const area = this.rectToRelative(this.cache.filesContRect);\r\n\r\n        if (newPos.left <= area.left) {\r\n            return 'left';\r\n        } else if (newPos.top <= area.top) {\r\n            return 'top';\r\n        } else if (newPos.right >= area.right) {\r\n            return 'right';\r\n        } else if (newPos.bottom >= area.bottom) {\r\n            return 'bottom';\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto scroll container (if needed) and reposition selector box.\r\n     */\r\n    private scrollAndRepositionSelector(newPos: SelectorRect) {\r\n        const area = this.cache.scrollCont,\r\n            edge = this.reachedAreaEdge(newPos);\r\n\r\n        // make sure top always starts at the same coordinates\r\n        // regardless of any scrolling done during dragging\r\n        newPos.top += this.initial.scrollTop;\r\n\r\n        // auto scroll when cursor reaches container edge\r\n        if (edge === 'bottom') {\r\n            area.scrollBy({top: 4});\r\n        } else if (edge === 'top') {\r\n            area.scrollBy({top: -4});\r\n        }\r\n\r\n        // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n        const scrollDiff = this.cache.scrollCont.scrollTop - this.initial.scrollTop,\r\n            scrollValue = Math.abs(scrollDiff);\r\n\r\n        // top needs to be changed only if scroll direction is top\r\n        if (scrollDiff < 0) {\r\n            newPos.top -= scrollValue;\r\n        }\r\n\r\n        // height needs to be changed regardless of direction and method\r\n        newPos.height += scrollValue;\r\n\r\n        // check if we have reached bottom edge again, after scroll values are applied\r\n        const reachedBottom = (newPos.top + newPos.height) >= this.cache.scrollCont.scrollHeight;\r\n\r\n        // if any select area edge is reached, bail\r\n        if (edge === 'left' || edge === 'right' || reachedBottom) return;\r\n\r\n        // finally, reposition select box with scroll values applied\r\n        this.applyPosition(newPos);\r\n    }\r\n\r\n    /**\r\n     * Apply specified position to selector box.\r\n     */\r\n    private applyPosition(newPos: ClientRect) {\r\n        this.selectBox.style.width = newPos.width + 'px';\r\n        this.selectBox.style.height = newPos.height + 'px';\r\n        this.selectBox.style.left = newPos.left + 'px';\r\n        this.selectBox.style.top = newPos.top + 'px';\r\n    }\r\n\r\n    private selectIntersectingElements() {\r\n        const selectedBoxRect = this.selectBox.getBoundingClientRect();\r\n\r\n        this.getGridElements().forEach((gridItem: HTMLElement) => {\r\n            const rect = gridItem.getBoundingClientRect();\r\n\r\n            // item intersects the select box\r\n            if (rect.top + rect.height > selectedBoxRect.top\r\n                && rect.left + rect.width > selectedBoxRect.left\r\n                && rect.bottom - rect.height < selectedBoxRect.bottom\r\n                && rect.right - rect.width < selectedBoxRect.right) {\r\n                gridItem.classList.add('selected');\r\n            } else {\r\n                gridItem.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform absolute container client rect into relative.\r\n     */\r\n    private rectToRelative(rect: ClientRect): ClientRect {\r\n        return {\r\n            width: rect.width,\r\n            height: rect.height,\r\n            left: rect.left - this.cache.filesContRect.left,\r\n            top: rect.top - this.cache.filesContRect.top,\r\n            right: rect.right - this.cache.filesContRect.left,\r\n            bottom: rect.bottom - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Transform hammer absolute event to relative coordinates.\r\n     */\r\n    private hammerToRelative(e: HammerInput) {\r\n        return {\r\n            x: e.center.x - this.cache.filesContRect.left,\r\n            y: e.center.y - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    private dispatchSelectedAction() {\r\n        const ids = this.getGridElements()\r\n            .filter(el => el.classList.contains('selected'))\r\n            .map(el => +el.dataset.id);\r\n\r\n        const entries = this.store.selectSnapshot(DriveState.entries)\r\n            .filter(entry => ids.indexOf(entry.id) > -1);\r\n\r\n        this.store.dispatch(new EntriesSelectedViaDrag(entries));\r\n    }\r\n\r\n    private createSelectBox() {\r\n        this.selectBox = document.createElement('div');\r\n        this.selectBox.classList.add('files-select-box');\r\n        this.cache.filesCont.appendChild(this.selectBox);\r\n    }\r\n\r\n    public removeSelectBox() {\r\n        if ( ! this.selectBox) return;\r\n        this.selectBox.remove();\r\n        this.selectBox = null;\r\n    }\r\n\r\n    private cacheClientRects() {\r\n        this.cache.filesContRect = this.cache.filesCont.getBoundingClientRect();\r\n        this.cache.scrollContRect = this.cache.scrollCont.getBoundingClientRect();\r\n    }\r\n\r\n    private getGridElements(): HTMLElement[] {\r\n        return Array.from(this.cache.filesCont.querySelectorAll(GRID_ITEM_SELECTOR));\r\n    }\r\n\r\n    private bindScroll() {\r\n        this.scrollListener = () => this.resizeBox();\r\n        this.cache.scrollCont.addEventListener('scroll', this.scrollListener);\r\n    }\r\n\r\n    private unbindScroll() {\r\n        this.cache.scrollCont.removeEventListener('scroll', this.scrollListener);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Store } from '@ngxs/store';\nimport { StoppedDragging } from '../state/actions/events';\nimport { StartedDragging } from '../state/actions/events';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DragEntryService {\n    constructor(\n        private domCache: DriveDomCacheService,\n        private store: Store\n    ) {}\n\n    public start(e: HammerInput) {\n        this.store.dispatch(new StartedDragging());\n    }\n\n    public move(e: HammerInput) {\n        this.domCache.dragPreview.style.top = e.center.y + 'px';\n        this.domCache.dragPreview.style.left = e.center.x + 'px';\n    }\n\n    public end() {\n        this.store.dispatch(new StoppedDragging());\n    }\n}\n","import {\n    ContentChildren, Directive, ElementRef, NgZone, OnDestroy, OnInit, QueryList\n} from '@angular/core';\nimport { FilesGridItemComponent } from '../files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { Store } from '@ngxs/store';\nimport { EntryDoubleTapped, EntryTapped } from '../state/actions/events';\nimport { DragEntryService } from './drag-entry.service';\nimport { DeselectAllEntries, SelectEntries } from '../state/actions/commands';\nimport { DriveState } from '../state/drive-state';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { FilesDragSelectService } from './files-drag-select.service';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[driveHammerInteractions]'\n})\nexport class DriveHammerInteractionsDirective implements OnInit, OnDestroy {\n    @ContentChildren(FilesGridItemComponent, {descendants: true}) gridItems: QueryList<FilesGridItemComponent>;\n\n    private hammerManager: HammerManager;\n    private panService: FilesDragSelectService|DragEntryService|null;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private zone: NgZone,\n        private el: ElementRef,\n        private store: Store,\n        private dragSelect: FilesDragSelectService,\n        private dragEntry: DragEntryService,\n        private domCache: DriveDomCacheService,\n    ) {}\n\n    ngOnInit() {\n        this.bindToHammer();\n\n        // disable \"pan\" on mobile as it will prevent scrolling\n        const sub = this.store.select(DriveState.isMobile).subscribe(isMobile => {\n            this.hammerManager.get('pan').set({\n                enable: !isMobile\n            });\n            this.hammerManager.get('doubletap').set({\n                enable: !isMobile\n            });\n        });\n\n        this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.dragSelect.removeSelectBox();\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    private bindToHammer() {\n        this.createHammerManager();\n        this.onPanStart();\n        this.onPan();\n        this.onPanEnd();\n        this.onTap();\n        this.onDoubleTap();\n    }\n\n    private createHammerManager() {\n        this.zone.runOutsideAngular(() => {\n            this.hammerManager = new Hammer.Manager(this.domCache.filesCont);\n\n            const tap = new Hammer.Tap(),\n                pan = new Hammer.Pan(),\n                doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n            this.hammerManager.add([tap, doubleTap, pan]);\n            this.hammerManager.get('doubletap').recognizeWith('tap');\n        });\n    }\n\n    private onPanStart() {\n        this.hammerManager.on('panstart', e => {\n            const gridElement = this.getEntryEl(e);\n\n            if (gridElement) {\n                this.panService = this.dragEntry;\n                const entry = this.getEntryByEl(gridElement),\n                    selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n\n                // select entry, if not already selected\n                if ( ! selectedEntries.find(en => en.id === entry.id)) {\n                    this.store.dispatch(new SelectEntries([this.getEntryByEl(gridElement)]));\n                }\n            } else {\n                this.panService = this.dragSelect;\n            }\n\n            this.panService.start(e);\n        });\n    }\n\n    private onPan() {\n        this.hammerManager.on('pan', e => {\n            if (this.panService) this.panService.move(e);\n        });\n    }\n\n    private onPanEnd() {\n        this.hammerManager.on('panend', () => {\n            if (this.panService) this.panService.end();\n        });\n    }\n\n    private onTap() {\n        this.hammerManager.on('tap', e => {\n            const entryEl = this.getEntryEl(e);\n            this.dragSelect.removeSelectBox();\n\n            if (entryEl) {\n                this.store.dispatch(new EntryTapped(this.getEntryByEl(entryEl), e.srcEvent.ctrlKey));\n            } else if (e.target.closest('.files-container')) {\n                this.store.dispatch(new DeselectAllEntries());\n            }\n        });\n    }\n\n    private onDoubleTap() {\n        this.hammerManager.on('doubletap', e => {\n            const gridElement = this.getEntryEl(e);\n            if ( ! gridElement) return;\n\n            this.store.dispatch(new EntryDoubleTapped(\n                this.getEntryByEl(gridElement)\n            ));\n        });\n    }\n\n    private getEntryEl(e: HammerInput) {\n        return e.target.closest('.drive-entry') as HTMLElement;\n    }\n\n    private getEntryByEl(el: HTMLElement): DriveEntry {\n        const id = +el.dataset.id;\n        return this.store.selectSnapshot(DriveState.entries)\n            .find(curr => curr.id === +id);\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveEntry } from '../../../files/models/drive-entry';\r\nimport { CONTEXT_MENU_DATA } from 'common/core/ui/context-menu/context-menu-data';\r\nimport { EntryContextMenuOpened } from '../../../state/actions/events';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { DeselectAllEntries } from '../../../state/actions/commands';\r\n\r\nexport interface FileContextMenuData {\r\n    entry: DriveEntry;\r\n}\r\n\r\n@Component({\r\n    selector: 'drive-context-menu',\r\n    templateUrl: './drive-context-menu.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DriveContextMenuComponent {\r\n    @HostBinding('class.context-menu') contextMenu = true;\r\n\r\n    constructor(\r\n        @Optional() @Inject(CONTEXT_MENU_DATA) public data: FileContextMenuData,\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser\r\n    ) {\r\n        if (this.data && this.data.entry) {\r\n            this.store.dispatch(new EntryContextMenuOpened(this.data.entry));\r\n        } else {\r\n            this.store.dispatch(new DeselectAllEntries());\r\n        }\r\n    }\r\n}\r\n","<context-actions-container></context-actions-container>","<ng-container *ngFor=\"let item of breadcrumb | async; last as last; first as first;\">\r\n    <div class=\"breadcrumb-item\" (click)=\"last ? openContextMenu(item, button) : openPage(item)\" [class.no-action]=\"!item.hasActions\" #button>\r\n        <span class=\"name\">{{first ? (item.viewName | trans) : item.viewName}}</span>\r\n        <mat-icon svgIcon=\"arrow-drop-down\" *ngIf=\"last && item.hasActions\"></mat-icon>\r\n    </div>\r\n    <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n</ng-container>","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { Store } from '@ngxs/store';\nimport { DriveState} from '../../state/drive-state';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { Translations } from 'common/core/translations/translations.service';\nimport { ContextMenu, ContextMenuParams } from 'common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { ROOT_FOLDER } from '../../folders/root-folder';\nimport { DriveFolderPage, DrivePage, ROOT_FOLDER_PAGE, SHARES_PAGE } from '../../state/models/drive-page';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Navigate } from '@ngxs/router-plugin';\n\n@Component({\n    selector: 'entry-breadcrumbs',\n    templateUrl: './entry-breadcrumbs.component.html',\n    styleUrls: ['./entry-breadcrumbs.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryBreadcrumbsComponent implements OnInit {\n    public breadcrumb: BehaviorSubject<DrivePage[]> = new BehaviorSubject([]);\n\n    constructor(\n        private entriesApi: DriveEntryApiService,\n        private i18n: Translations,\n        private contextMenu: ContextMenu,\n        private store: Store\n    ) {}\n\n    ngOnInit() {\n        // wait until entries and user folders are loaded\n        const sub = combineLatest(\n            this.store.select(DriveState.meta),\n            this.store.select(DriveState.userFoldersLoaded),\n        ).subscribe(combined => {\n            if (combined[0].currentPage && combined[1]) {\n                this.bindToActivePage();\n                sub && sub.unsubscribe();\n            }\n        });\n    }\n\n    public openPage(page: DrivePage) {\n        if (page.folder) {\n            this.store.dispatch(new OpenFolder(page.folder));\n        } else {\n            this.store.dispatch(new Navigate(['/drive/shares']));\n        }\n    }\n\n    public openContextMenu(item: DrivePage, origin: HTMLElement) {\n        let params = {originX: 'start', overlayX: 'start'} as ContextMenuParams;\n\n        switch (item.name) {\n            case 'trash':\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case 'root':\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case 'folder':\n                params = {data: {entry: this.store.selectSnapshot(DriveState.activeFolder)}, ...params};\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n        }\n    }\n\n    private generateBreadCrumb(page: DrivePage, folders?: {[key: number]: DriveFolder}) {\n        const breadcrumbs = [page.name === 'folder' ? this.getFolderRootBreadcrumb(page) : page];\n\n        if (page.folder && page.folder !== ROOT_FOLDER) {\n            const folderPath = this.getBreadcrumbForFolder(page.folder, folders);\n            breadcrumbs.push(...folderPath);\n        }\n\n        this.breadcrumb.next(breadcrumbs);\n    }\n\n    private getBreadcrumbForFolder(folder: DriveEntry, allFolders: {[key: number]: DriveEntry}) {\n        return folder.path.split('/').map(id => {\n            const pathFolder = folder.id === +id ? folder : allFolders[id];\n            return pathFolder && new DriveFolderPage(pathFolder);\n        }).filter(f => !!f);\n    }\n\n    private getFolderRootBreadcrumb(page: DriveFolderPage) {\n        const userOwnsFolder = this.store.selectSnapshot(DriveState.userOwnsActiveFolder);\n\n        if ( ! page.folder || userOwnsFolder) {\n            return ROOT_FOLDER_PAGE;\n        } else {\n            return SHARES_PAGE;\n        }\n    }\n\n    private bindToActivePage() {\n        combineLatest(\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.flatFolders)\n        ).pipe(\n            distinctUntilChanged(),\n            filter(combined => {\n                // wait until folder data is fully loaded\n                return ! combined[0].folderHash || combined[0].folder;\n            })\n        ).subscribe(combined => {\n            this.generateBreadCrumb(combined[0], combined[1]);\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'drive-toolbar',\n    templateUrl: './drive-toolbar.component.html',\n    styleUrls: ['./drive-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveToolbarComponent {\n}\n","<entry-breadcrumbs></entry-breadcrumbs>\r\n","export const AVAILABLE_SORTS: DriveSortOption[] = [\r\n    {name: 'file_size', viewName: 'Size'},\r\n    {name: 'name', viewName: 'Name'},\r\n    {name: 'updated_at', viewName: 'Last Modified'},\r\n    {name: 'created_at', viewName: 'Upload Date'},\r\n    {name: 'type', viewName: 'Type'},\r\n    {name: 'extension', viewName: 'Extension'},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n    name: SortColumn;\r\n    viewName: string;\r\n}\r\n\r\nexport type SortColumn = 'file_size' | 'name' | 'updated_at' | 'created_at' | 'type' | 'extension';\r\nexport type SortDirection = 'desc'|'asc';\r\n\r\nexport interface SortValue {\r\n    column: SortColumn;\r\n    direction: SortDirection;\r\n}\r\n","<ng-container *ngIf=\"sort$ | async as sortValue\">\n    <span class=\"label\" trans>Sort by</span>\n    <button class=\"no-style\" [matMenuTriggerFor]=\"menu\" [disabled]=\"btnDisabled\">\n        <span class=\"sort-button-content\">\n            <span>{{getSortViewName(sortValue.column) | trans}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"arrow-icon\"></mat-icon>\n        </span>\n        <mat-icon svgIcon=\"sort\" class=\"mobile-sort-button-content\"></mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"drive-sort-menu\">\n        <div class=\"title\" trans>Direction</div>\n        <button mat-menu-item (click)=\"changeDirection('asc')\" [class.active]=\"sortValue.direction === 'asc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Ascending</span>\n        </button>\n        <button mat-menu-item (click)=\"changeDirection('desc')\" [class.active]=\"sortValue.direction === 'desc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Descending</span>\n        </button>\n        <div class=\"separator\"></div>\n        <div class=\"title\" trans>Sort By</div>\n        <button mat-menu-item *ngFor=\"let sort of availableSorts\" (click)=\"changeSort(sort)\" [class.active]=\"sortValue.column === sort.name\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>{{sort.viewName}}</span>\n        </button>\n    </mat-menu>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AVAILABLE_SORTS, DriveSortOption, SortColumn, SortDirection, SortValue } from '../../entries/available-sorts';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nconst DEFAULT_VALUE: SortValue = {column: 'updated_at', direction: 'desc'};\n\n@Component({\n    selector: 'entries-sort-button',\n    templateUrl: './entries-sort-button.component.html',\n    styleUrls: ['./entries-sort-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: EntriesSortButtonComponent,\n        multi: true,\n    }]\n})\nexport class EntriesSortButtonComponent implements ControlValueAccessor {\n    @Input() btnDisabled = false;\n    public availableSorts = AVAILABLE_SORTS;\n    public propagateChange: Function;\n\n    public sort$: BehaviorSubject<SortValue> = new BehaviorSubject(DEFAULT_VALUE);\n\n    public changeSort(column: DriveSortOption) {\n        this.sort$.next({...this.sort$.value, column: column.name});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public changeDirection(direction: SortDirection) {\n        this.sort$.next({...this.sort$.value, direction});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public getSortViewName(column: SortColumn): string {\n        return this.availableSorts.find(sort => sort.name === column).viewName;\n    }\n\n    public writeValue(value: SortValue) {\n        this.sort$.next(value || DEFAULT_VALUE);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","import { Store } from '@ngxs/store';\r\nimport { DriveState } from '../state/drive-state';\r\nimport { DriveContextAction } from './types/drive-context-action';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DriveContextActions {\r\n    protected multipleEntriesSelected: boolean;\r\n    protected allStarred: boolean;\r\n    protected onlyFoldersSelected: boolean;\r\n\r\n    protected abstract actions: DriveContextAction[];\r\n\r\n    constructor(protected store: Store) {}\r\n\r\n    public getActions() {\r\n        this.updateStatus();\r\n        return this.actions;\r\n    }\r\n\r\n    protected getSelectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n\r\n    protected updateStatus() {\r\n        this.multipleEntriesSelected = this.store.selectSnapshot(DriveState.multipleEntriesSelected);\r\n        this.allStarred = this.store.selectSnapshot(DriveState.allSelectedEntriesStarred);\r\n        this.onlyFoldersSelected = this.store.selectSnapshot(DriveState.onlyFoldersSelected);\r\n    }\r\n}\r\n","import { DeleteTrashedEntriesForever, OpenConfirmDialog, RestoreTrashedEntries, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Restore',\r\n            icon: 'restore',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new RestoreTrashedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Delete Forever',\r\n            icon: 'delete-forever',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.deleteForever();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public deleteForever() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Delete Forever',\r\n            body: 'This will permanently delete selected items.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Delete Forever',\r\n        }, new DeleteTrashedEntriesForever()));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { ShareableLink } from './models/shareable-link';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { ShareableLinkOptions } from './models/shareable-link-options';\nimport { User } from '@common/core/types/models/User';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface GetLinkData {\n    link: ShareableLink;\n    folderChildren: PaginationResponse<FileEntry>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ShareableLinksApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public findByEntryId(entryId: number, params: {autoCreate?: boolean}): BackendResponse<{ link: ShareableLink }> {\n        return this.http.get(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public findByHash(hash: string, params?: {withEntries?: boolean, page?: number, order?: string}): BackendResponse<GetLinkData> {\n        return this.http.get(`drive/shareable-links/${hash}`, params);\n    }\n\n    public create(entryId: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.post(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public update(id: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.put(`drive/shareable-links/${id}`, params);\n    }\n\n    public delete(id: number): BackendResponse<void> {\n        return this.http.delete(`drive/shareable-links/${id})`);\n    }\n\n    public checkPassword(linkId: number, password: string): BackendResponse<{matches: boolean}> {\n        return this.http.post(`drive/shareable-links/${linkId}/check-password`, {password});\n    }\n\n    /**\n     * Import shareable link entry into current user's drive.\n     */\n    public importEntry(linkId: number, password?: string): BackendResponse<{users: User[]}> {\n        return this.http.post(`drive/shareable-links/${linkId}/import`, {password});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ShareableLinkOptions } from './models/shareable-link-options';\r\nimport { ShareableLinksApiService } from './shareable-links-api.service';\r\nimport { ShareableLink } from './models/shareable-link';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { Settings } from 'common/core/config/settings.service';\r\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ShareLinkStateModel {\r\n    cache: {[key: number]: ShareableLink};\r\n    backendErrors: BackendErrorMessages;\r\n    link: ShareableLink;\r\n    loading: boolean;\r\n    linkOptions: ShareableLinkOptions;\r\n    optionsPanelVisible: boolean;\r\n}\r\n\r\nexport class LoadShareableLink {\r\n    static readonly type = '[Shareable Link] Load From Backend';\r\n    constructor(public options: {autoCreate?: boolean} = {}) {}\r\n}\r\n\r\nexport class UpdateShareableLink {\r\n    static readonly type = '[Shareable Link] Update';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class CreateShareableLink {\r\n    static readonly type = '[Shareable Link] Create';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class DeleteShareableLink {\r\n    static readonly type = '[Shareable Link] Delete';\r\n}\r\n\r\nexport class ToggleOptionsPanel {\r\n    static readonly type = '[Shareable Link] Toggle Options Panel Visibility';\r\n}\r\n\r\nexport class LinkCopySuccess {\r\n    static readonly type = '[Shareable Link] Copy To Clipboard Success';\r\n}\r\n\r\nexport class ResetShareLinkState {\r\n    static readonly type = '[Shareable Link] Reset State';\r\n}\r\n\r\nconst defaultState = {\r\n    link: null,\r\n    loading: false,\r\n    optionsPanelVisible: true,\r\n    backendErrors: {},\r\n    cache: {},\r\n    linkOptions: {\r\n        allowDownload: false,\r\n        allowEdit: false,\r\n        expiresAt: null,\r\n        password: null,\r\n    }\r\n};\r\n\r\n@State<ShareLinkStateModel>({\r\n    name: 'shareLink',\r\n    defaults: defaultState\r\n})\r\n@Injectable()\r\nexport class ShareLinkState {\r\n    constructor(\r\n        private store: Store,\r\n        private settings: Settings,\r\n        private linksApi: ShareableLinksApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static loading(state: ShareLinkStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static link(state: ShareLinkStateModel) {\r\n        return state.link;\r\n    }\r\n\r\n    @Selector()\r\n    static optionsVisible(state: ShareLinkStateModel) {\r\n        return ! state.loading && state.optionsPanelVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static backendErrors(state: ShareLinkStateModel) {\r\n        return state.backendErrors;\r\n    }\r\n\r\n    @Action(CreateShareableLink)\r\n    createShareableLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0];\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.create(entryId, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => {\r\n                    const link = response.link;\r\n                    ctx.patchState({\r\n                        cache: {...ctx.getState().cache, [link.entry_id]: link},\r\n                        link: response.link,\r\n                        optionsPanelVisible: false\r\n                    });\r\n                }, errorResponse => {\r\n                    ctx.patchState({backendErrors: errorResponse.messages});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(UpdateShareableLink)\r\n    updateLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.update(link.id, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    cache: {...ctx.getState().cache, [link.entry_id]: response.link},\r\n                    optionsPanelVisible: false\r\n                }), errorResponse => {\r\n                    ctx.patchState({backendErrors: errorResponse.messages});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(LoadShareableLink)\r\n    loadShareableLink(ctx: StateContext<ShareLinkStateModel>, action: LoadShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0],\r\n            cachedLink = ctx.getState().cache[entryId];\r\n\r\n        if (cachedLink) {\r\n            return ctx.patchState({link: cachedLink, optionsPanelVisible: false});\r\n        }\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.findByEntryId(entryId, {autoCreate: action.options.autoCreate})\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    optionsPanelVisible: false,\r\n                    cache: {...ctx.getState().cache, [response.link.entry_id]: response.link},\r\n                }), () => {})\r\n            );\r\n    }\r\n\r\n    @Action(DeleteShareableLink)\r\n    deleteShareableLink(ctx: StateContext<ShareLinkStateModel>) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.delete(link.id)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(() => {\r\n                    const cache = ctx.getState().cache;\r\n                    delete cache[link.entry_id];\r\n\r\n                    ctx.patchState({\r\n                        link: null,\r\n                        cache: cache,\r\n                    });\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(ToggleOptionsPanel)\r\n    toggleOptionsPanel(ctx: StateContext<ShareLinkStateModel>) {\r\n        ctx.patchState({\r\n           optionsPanelVisible: !ctx.getState().optionsPanelVisible\r\n        });\r\n    }\r\n\r\n    @Action(ResetShareLinkState, {cancelUncompleted: true})\r\n    resetShareLinkState(ctx: StateContext<ShareLinkStateModel>) {\r\n        return ctx.patchState({...ctx.getState(), ...defaultState});\r\n    }\r\n}\r\n","<form class=\"update-link-panel\" [formGroup]=\"form\" (ngSubmit)=\"saveChanges()\">\n    <div class=\"link-options\">\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Link expiration</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"expirationVisible\" trans>Link is valid until:</mat-checkbox>\n                <div class=\"input-container expiration-input-container\" formGroupName=\"expiresAt\"  [class.hidden]=\"!expirationVisible.value\">\n                    <div class=\"date-input-container\">\n                        <input type=\"date\" formControlName=\"date\" class=\"date-input\" placeholder=\"Expiration date...\" trans-placeholder [min]=\"getMinDate()\">\n                    </div>\n                    <input type=\"time\" class=\"time-input\" formControlName=\"time\" placeholder=\"Expiration time...\" trans-placeholder>\n                </div>\n                <div class=\"error\" *ngIf=\"(backendErrors$ | async)?.expiresAt as error\">{{error}}</div>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Password Protect</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"passwordVisible\" trans>Require password:</mat-checkbox>\n                <ng-container *ngIf=\"passwordVisible.value\">\n                    <div class=\"input-container password-input-container\">\n                        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter new password...\" trans-placeholder>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow editing</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowEdit\" trans>Users with link can modify this item.</mat-checkbox>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow download</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowDownload\" trans>Users with link can download this item.</mat-checkbox>\n        </div>\n    </div>\n\n    <button type=\"button\" (click)=\"toggleOptionsPanel()\" mat-button trans>Cancel</button>\n\n    <button type=\"submit\" class=\"update-button\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n        {{ ((link$ | async) ? 'Update Link' : 'Create Link') | trans }}\n    </button>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { CreateShareableLink, ShareLinkState, ToggleOptionsPanel, UpdateShareableLink } from '../share-link.state';\nimport { Observable } from 'rxjs';\nimport { ShareableLink } from '../models/shareable-link';\nimport { filter } from 'rxjs/operators';\nimport { ShareableLinkOptions } from '../models/shareable-link-options';\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\n\n@Component({\n    selector: 'link-options',\n    templateUrl: './link-options.component.html',\n    styleUrls: ['./link-options.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsComponent implements OnInit {\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.backendErrors) backendErrors$: Observable<BackendErrorMessages>;\n\n    public form = new FormGroup({\n        password: new FormControl(),\n        expiresAt: new FormGroup({\n            date: new FormControl(),\n            time: new FormControl(),\n        }),\n        allowEdit: new FormControl(false),\n        allowDownload: new FormControl(true)\n    });\n\n    public passwordVisible = new FormControl(false);\n    public expirationVisible = new FormControl(false);\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.bindToLinkChange();\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public saveChanges() {\n        if (this.store.selectSnapshot(ShareLinkState.link)) {\n            this.store.dispatch(new UpdateShareableLink(this.getPayload()));\n        } else {\n            this.store.dispatch(new CreateShareableLink(this.getPayload()));\n        }\n    }\n\n    private getPayload() {\n        const payload = {\n            allowEdit: this.form.get('allowEdit').value,\n            allowDownload: this.form.get('allowDownload').value,\n        } as ShareableLinkOptions;\n\n        if (this.expirationVisible.value) {\n            payload.expiresAt = this.form.get('expiresAt.date').value;\n            if (this.form.get('expiresAt.time').value) {\n                payload.expiresAt += ' ' + this.form.get('expiresAt.time').value;\n            }\n        }\n\n        // not sending \"password\" with request will remove it from link\n        if (this.passwordVisible.value) {\n            payload.password = this.form.get('password').value;\n        }\n\n        return payload;\n    }\n\n    private bindToLinkChange() {\n        this.link$.pipe(filter(link => !!link))\n            .subscribe(link => {\n                this.hydrateExpirationForm(link);\n\n                // show or hide password form field\n                this.passwordVisible.setValue(!!link.password);\n                this.expirationVisible.setValue(!!link.expires_at);\n\n                this.form.patchValue({\n                    allowEdit: link.allow_edit,\n                    allowDownload: link.allow_download\n                });\n            });\n    }\n\n    private hydrateExpirationForm(link: ShareableLink) {\n        if ( ! link || ! link.expires_at) return;\n\n        const parts = link.expires_at.split(' ');\n\n        this.form.get('expiresAt').setValue({\n            date: parts[0],\n            time: parts[1]\n        });\n    }\n\n    public getMinDate(): string {\n        return new Date().toJSON().split('T')[0];\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Shareable link</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"link$ | async\">\n        <div class=\"title\">\n            <div class=\"left\">\n                {{ 'Link sharing is' | trans}} <span class=\"state on\"><button class=\"on-text text no-style\" (click)=\"deleteLink()\" trans>on</button></span>\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" mat-icon-button (click)=\"deleteLink()\">\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button (click)=\"toggleOptionsPanel()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"link-container\">\n            <div class=\"link-input-container input-container\">\n                <input type=\"text\" id=\"link-input\" readonly (click)=\"focusInput()\" (change)=\"focusInput()\" [value]=\"shareableLink$ | async\" tabindex=\"1\">\n                <button mat-flat-button color=\"accent\" (click)=\"copyLinkToClipboard()\" trans>Copy</button>\n            </div>\n            <div class=\"social-icons\">\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style facebook\" (click)=\"shareLink('facebook')\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style twitter\" (click)=\"shareLink('twitter')\">\n                    <mat-icon svgIcon=\"twitter\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style mail\" (click)=\"shareLink('mail')\">\n                    <mat-icon svgIcon=\"mail\"></mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n\n    <link-options [@visibility]=\"optionsVisible$ | async\"></link-options>\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay-transparent\"></loading-indicator>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button class=\"submit-button\" (click)=\"close()\" [disabled]=\"loading$ | async\" trans>Close</button>\n</mat-dialog-actions>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n    DeleteShareableLink,\n    LinkCopySuccess,\n    LoadShareableLink, ResetShareLinkState,\n    ShareLinkState,\n    ToggleOptionsPanel\n} from '../links/share-link.state';\nimport { Settings } from 'common/core/config/settings.service';\nimport { ShareableLink } from '../links/models/shareable-link';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport copy from 'copy-to-clipboard';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { ShareableNetworks, shareLinkSocially } from '@common/core/utils/share-link-socially';\n\n@Component({\n    selector: 'share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('visibility', [\n            state('true', style({\n                height: '*',\n                padding: '*',\n                opacity: '1',\n                overflow: '*',\n            })),\n            state('false', style({\n                height: '0',\n                padding: '0',\n                opacity: '0',\n                overflow: 'hidden',\n            })),\n            transition('true <=> false', animate('225ms cubic-bezier(.4,0,.2,1)'))\n        ]),\n    ],\n})\nexport class ShareLinkDialogComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.optionsVisible) optionsVisible$: Observable<boolean>;\n    public shareableLink$ = new BehaviorSubject(null);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store,\n        protected toast: Toast,\n        protected actions$: Actions,\n        protected settings: Settings,\n        protected dialogRef: MatDialogRef<ShareLinkDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.store.dispatch(new LoadShareableLink());\n        this.bindToOptionsPanelToggle();\n    }\n\n    ngAfterViewInit() {\n        this.bindToLinkChange();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetShareLinkState());\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public deleteLink() {\n        this.store.dispatch(new DeleteShareableLink()).subscribe(() => {\n            this.toast.open('Link deleted.');\n            this.dialogRef.close();\n        });\n    }\n\n    public copyLinkToClipboard() {\n        this.focusInput();\n        const success = copy(this.shareableLink$.value);\n\n        if (success) {\n            this.store.dispatch(new LinkCopySuccess());\n        }\n    }\n\n    private bindToLinkChange() {\n        this.link$.subscribe(link => {\n            if ( ! link) return;\n            this.shareableLink$.next(this.settings.getBaseUrl() + 'drive/s/' + link.hash);\n            setTimeout(() => this.focusInput());\n        });\n    }\n\n    private bindToOptionsPanelToggle() {\n        const sub = this.actions$.pipe(ofActionDispatched(ToggleOptionsPanel))\n            .subscribe(() => {\n                // close dialog if user canceled link creation\n                if ( ! this.store.selectSnapshot(ShareLinkState.optionsVisible) && ! this.shareableLink$.value) {\n                    this.close();\n                }\n            });\n        this.subscriptions.push(sub);\n    }\n\n    public shareLink(network: ShareableNetworks) {\n        shareLinkSocially(network, this.shareableLink$.value);\n    }\n\n    public focusInput() {\n        const input = document.getElementById('link-input') as HTMLInputElement;\n        input.focus();\n        input.select();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","export type ShareableNetworks = 'facebook'|'twitter'|'pinterest'|'tumblr'|'blogger'|'mail';\r\n\r\nexport function shareLinkSocially(network: ShareableNetworks, link: string, name?: string, image?: string) {\r\n    const url = generateShareUrl(network, link, name, image);\r\n\r\n    if (network === 'mail') {\r\n        window.location.href = url;\r\n    } else {\r\n        openNewWindow(url);\r\n    }\r\n}\r\n\r\nfunction openNewWindow(url: string) {\r\n    const width  = 575,\r\n        height = 400,\r\n        left   = (window.innerWidth  - width)  / 2,\r\n        top    = (window.innerHeight - height) / 2,\r\n        opts   = 'status=1, scrollbars=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;\r\n\r\n    window.open(url, 'share', opts);\r\n}\r\n\r\nfunction generateShareUrl(type: string, link: string, name?: string, image?: string) {\r\n    switch (type) {\r\n        case 'facebook':\r\n            return 'https://www.facebook.com/sharer/sharer.php?u=' + link ;\r\n        case 'twitter':\r\n            return `https://twitter.com/intent/tweet?text=${name} - ${link}`;\r\n        case 'google-plus':\r\n            return 'https://plus.google.com/share?url=' + link ;\r\n        case 'pinterest':\r\n            return 'https://pinterest.com/pin/create/button/?url=' + link + '&media=' + image;\r\n        case 'tumblr':\r\n            const base = 'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\r\n            return base + this.mediaItem.name + '&content=' + image + '&url=' + link ;\r\n        case 'blogger':\r\n            return 'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name;\r\n        case 'mail':\r\n            return `mailto:?subject=Check out this link.&body=${link}`;\r\n    }\r\n}\r\n","export interface DriveEntryPermissions {\r\n    edit?: boolean;\r\n    view?: boolean;\r\n    download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n    edit: true,\r\n    view: true,\r\n    download: true,\r\n};\r\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { DriveEntryUser } from '../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../permissions/drive-entry-permissions';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\ninterface UserChangeParams {\n    users: {id: number, permissions: DriveEntryPermissions}[];\n    entries: number[];\n}\n\nexport interface DriveEntryApiParams {\n    entries: FileEntry[];\n    emails: string[];\n    permissions: DriveEntryPermissions;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharesApiService {\n    constructor(private http: AppHttpClient) {}\n\n    /**\n     * Update users and permissions on specified entries.\n     */\n    public updateUsers(params: UserChangeParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.put('drive/shares/update-users', params);\n    }\n\n    /**\n     * Attach specified users to entries.\n     */\n    public shareEntries(params: DriveEntryApiParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/add-users', {\n            ...params,\n            entries: params.entries.map(entry => entry.id)\n        });\n    }\n\n    /**\n     * Detach specified user from entries.\n     */\n    public detachUser(userId: number, entryIds: number[]): BackendResponse<void> {\n        return this.http.delete('drive/shares/remove-user/' + userId, {entries: entryIds});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { DriveEntryUser } from '../../files/models/drive-entry';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { SharesApiService } from '../shares-api.service';\r\nimport isEqual from 'lodash/isEqual';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\r\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\r\nimport { UpdateEntries } from '../../state/actions/commands';\r\nimport { Inject, Injectable } from '@angular/core';\r\n\r\nexport class SetInitialUsers {\r\n    static readonly type = '[ShareDialog] Set Initial Users';\r\n}\r\n\r\nexport class UpdateUserPermissions {\r\n    static readonly type = '[ShareDialog] Update User Permissions';\r\n    constructor(public user: DriveEntryUser, public permissions: DriveEntryPermissions) {}\r\n}\r\n\r\nexport class RemoveUser {\r\n    static readonly type = '[ShareDialog] Remove User';\r\n    constructor(public user: DriveEntryUser) {}\r\n}\r\n\r\nexport class SetUsers {\r\n    static readonly type = '[ShareDialog] Set Users';\r\n    constructor(public users: DriveEntryUser[]) {}\r\n}\r\n\r\nexport class SaveChanges {\r\n    static readonly type = '[ShareDialog] Save Changes';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[ShareDialog] Reset';\r\n}\r\n\r\nexport class ShareEntries {\r\n    static readonly type = '[ShareDialog] Share Entries';\r\n    constructor(public payload: {emails: string[], permissions: DriveEntryPermissions}) {}\r\n}\r\n\r\nexport class ShareEntriesFailed {\r\n    static readonly type = '[ShareDialog] Share Entries Failed';\r\n    constructor(public messages: BackendErrorMessages) {}\r\n}\r\n\r\nexport interface ShareDialogEntryUser extends DriveEntryUser {\r\n    removed?: boolean;\r\n    entry_permissions: ShareDialogEntryPermissions;\r\n}\r\n\r\nexport interface ShareDialogStateModel {\r\n    loading: boolean;\r\n    original: ShareDialogEntryUser[];\r\n    usersWithAccess: ShareDialogEntryUser[];\r\n}\r\n\r\n@State<ShareDialogStateModel>({\r\n    name: 'shareDialog',\r\n    defaults: {\r\n        usersWithAccess: [],\r\n        original: [],\r\n        loading: false,\r\n    }\r\n})\r\n@Injectable()\r\nexport class ShareDialogState {\r\n    constructor(\r\n        private store: Store,\r\n        private sharesApi: SharesApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static usersWithAccess(state: ShareDialogStateModel) {\r\n        return state.usersWithAccess;\r\n    }\r\n\r\n    @Selector()\r\n    static dirty(state: ShareDialogStateModel) {\r\n        return !isEqual(state.original, state.usersWithAccess);\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: ShareDialogStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Action(SetInitialUsers)\r\n    setInitialUsers(ctx: StateContext<ShareDialogStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        let users = entries\r\n            .map(entry => entry.users)\r\n            .reduce((all, curr) => all.concat(curr), []);\r\n\r\n        // make sure we don't override anything in main drive store\r\n        users = cloneDeep(users);\r\n        users = users.filter(user => !!user);\r\n\r\n        // multiple entries might contain same users\r\n        const uniqueUsers = uniqBy(users, user => user.id) as ShareDialogEntryUser[];\r\n\r\n        // if permissions for same user are not same on\r\n        // all selected entries, show \"varies\" permission\r\n        if (entries.length > 1) {\r\n            uniqueUsers.forEach(user => {\r\n                const permissions = entries\r\n                    .map(entry => entry.users.find(u => u.id === user.id))\r\n                    .filter(u => !!u)\r\n                    .map(u => Object.assign({}, u.entry_permissions));\r\n\r\n                if (entries.length !== permissions.length || permissions.some(p => !isEqual(p, permissions[0]))) {\r\n                    user.entry_permissions = {varies: true};\r\n                }\r\n            });\r\n        }\r\n\r\n        ctx.patchState({\r\n            usersWithAccess: cloneDeep(uniqueUsers),\r\n            original: uniqueUsers,\r\n        });\r\n    }\r\n\r\n    @Action(SetUsers)\r\n    setUsers(ctx: StateContext<ShareDialogStateModel>, action: SetUsers) {\r\n        ctx.patchState({\r\n            usersWithAccess: action.users,\r\n            original: cloneDeep(action.users)\r\n        });\r\n    }\r\n\r\n    @Action(UpdateUserPermissions)\r\n    updateUserPermissions(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // update user permissions\r\n        users.find(curr => curr.id === action.user.id).entry_permissions = action.permissions;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(RemoveUser)\r\n    removeUser(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // mark user as \"removed\"\r\n        users.find(curr => curr.id === action.user.id).removed = true;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<ShareDialogStateModel>) {\r\n       ctx.setState({\r\n           loading: false,\r\n           usersWithAccess: [],\r\n           original: [],\r\n       });\r\n    }\r\n\r\n    @Action(SaveChanges, {cancelUncompleted: true})\r\n    saveChanges(ctx: StateContext<ShareDialogStateModel>) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const state = ctx.getState();\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        const users = state.usersWithAccess\r\n            // filter out entry owner\r\n            .filter(user => !user.owns_entry)\r\n            // filter out users if they do not have same permissions for\r\n            // all selected entries (except for users that are being removed)\r\n            .filter(user => !user.entry_permissions.varies || user.removed)\r\n            .map(user => {\r\n                return {id: user.id, removed: user.removed, permissions: user.entry_permissions};\r\n            });\r\n\r\n        return this.sharesApi.updateUsers({entries: entries.map(e => e.id), users}).pipe(\r\n            finalize(() => ctx.patchState({loading: false})),\r\n            tap(response => {\r\n                const newUsers = response.users;\r\n\r\n                // update permissions in share dialog store\r\n                ctx.patchState({\r\n                    usersWithAccess: newUsers,\r\n                    original: cloneDeep(newUsers),\r\n                });\r\n\r\n                this.updateEntriesInDriveStore(newUsers);\r\n            }\r\n        ));\r\n    }\r\n\r\n    @Action(ShareEntries, {cancelUncompleted: true})\r\n    shareEntries(ctx: StateContext<ShareDialogStateModel>, action: ShareEntries) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const payload = {\r\n            ...action.payload,\r\n            entries: this.store.selectSnapshot(DriveState.selectedEntries)\r\n        };\r\n\r\n        return this.sharesApi.shareEntries(payload)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => {\r\n                    ctx.dispatch(new SetUsers(response.users));\r\n                    this.updateEntriesInDriveStore(response.users);\r\n                }, errorResponse => {\r\n                    ctx.dispatch(new ShareEntriesFailed(errorResponse.messages));\r\n                })\r\n            );\r\n    }\r\n\r\n    private updateEntriesInDriveStore(newUsers: DriveEntryUser[]) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        // update permissions in main drive store, otherwise we'll get old\r\n        // permissions if user re-opens share dialog without page reload\r\n        const updatedEntries = entries.map(entry => {\r\n            entry.users = newUsers;\r\n            return entry;\r\n        });\r\n\r\n        this.store.dispatch(new UpdateEntries(updatedEntries));\r\n    }\r\n}\r\n","<button mat-flat-button color=\"gray\" [matMenuTriggerFor]=\"shareMenu\">\n    <ng-container *ngIf=\"overallPermission() === 'varies'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"priority-high\"></mat-icon>\n        <span class=\"button-text\" trans>Varies</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'edit'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"edit\"></mat-icon>\n        <span class=\"button-text\" trans>Can edit</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'view'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"remove-red-eye\"></mat-icon>\n        <span class=\"button-text\" trans>Can View</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'download'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"file-download\"></mat-icon>\n        <span class=\"button-text\" trans>Can Download</span>\n    </ng-container>\n\n    <mat-icon class=\"dropdown-icon\" svgIcon=\"arrow-drop-down\"></mat-icon>\n</button>\n\n<mat-menu #shareMenu=\"matMenu\" classList=\"mat-menu-with-description\">\n    <div mat-menu-item (click)=\"selectPermission('edit')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'edit'\"></mat-icon>\n        <div>\n            <div trans>Can edit</div>\n            <div class=\"description\" trans>People can edit, delete and copy the item to their own drive.</div>\n        </div>\n    </div>\n    <div mat-menu-item (click)=\"selectPermission('download')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'download'\"></mat-icon>\n        <div>\n            <div trans>Can download</div>\n            <div class=\"description\" trans>People can view and download the item.</div>\n        </div>\n    </div>\n\n    <div mat-menu-item (click)=\"selectPermission('view')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'view'\"></mat-icon>\n        <div>\n            <div trans>Can view</div>\n            <div class=\"description\" trans>People can view the item.</div>\n        </div>\n    </div>\n</mat-menu>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\n\n@Component({\n    selector: 'sharing-permissions-button',\n    templateUrl: './sharing-permissions-button.component.html',\n    styleUrls: ['./sharing-permissions-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharingPermissionsButtonComponent {\n    @Input() permissions: ShareDialogEntryPermissions = DRIVE_ENTRY_FULL_PERMISSIONS;\n    @Output() change: EventEmitter<DriveEntryPermissions> = new EventEmitter();\n    @Input() @HostBinding('class.compact') compact = false;\n\n    public overallPermission(): keyof ShareDialogEntryPermissions {\n        if (this.permissions.varies) {\n            return 'varies';\n        } else if (this.permissions.edit) {\n            return 'edit';\n        } else if (this.permissions.download) {\n            return 'download';\n        } {\n            return 'view';\n        }\n    }\n\n    public selectPermission(permission: keyof ShareDialogEntryPermissions) {\n        if (permission === 'edit') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS};\n        } else if (permission === 'download') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false};\n        } else {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false, download: false};\n        }\n\n        this.change.emit(this.permissions);\n    }\n}\n","<div class=\"header\" trans>Who has access</div>\n<div class=\"users-list\">\n    <div class=\"list-item\" *ngFor=\"let user of users | async; trackBy: trackByUser\" [class.removed]=\"user.removed\" [@flyInOut]=\"'in'\">\n        <img [src]=\"user.avatar\">\n        <div class=\"text\">\n            <div class=\"display_name\">{{user.display_name}}</div>\n            <div class=\"email\">{{user.email}}</div>\n        </div>\n        <div class=\"actions\">\n            <span class=\"owner-label\" *ngIf=\"user.owns_entry || (currentUser.getModel().id === user.id); else permissionSelector\" trans>\n                {{ user.owns_entry ? 'Owner' : 'You' }}\n            </span>\n\n            <ng-template #permissionSelector>\n                <sharing-permissions-button [permissions]=\"user.entry_permissions\" (change)=\"updateUserPermissions(user, $event)\"></sharing-permissions-button>\n                <button mat-icon-button [disabled]=\"loading$ | async\" (click)=\"removeUser(user)\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n<div class=\"actions\">\n    <button mat-flat-button color=\"accent\" (click)=\"saveChanges()\" [disabled]=\"loading$ | async\" [class.visually-hidden]=\"!(dirty | async)\" trans>Save Changes</button>\n</div>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { DriveEntryUser } from '../../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryUser, RemoveUser, SaveChanges, ShareDialogState, UpdateUserPermissions } from '../state/share-dialog.state';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CurrentUser } from '../../../../common/auth/current-user';\n\n@Component({\n    selector: 'entries-access-table',\n    templateUrl: './entries-access-table.component.html',\n    styleUrls: ['./entries-access-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class EntriesAccessTableComponent {\n    @Select(ShareDialogState.usersWithAccess) users: Observable<ShareDialogEntryUser[]>;\n    @Select(ShareDialogState.dirty) dirty: Observable<boolean>;\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    constructor(\n        private store: Store,\n        public currentUser: CurrentUser,\n    ) {}\n\n    public updateUserPermissions(user: DriveEntryUser, newPermissions: DriveEntryPermissions) {\n        this.store.dispatch(new UpdateUserPermissions(user, newPermissions));\n    }\n\n    public removeUser(user: DriveEntryUser) {\n        this.store.dispatch(new RemoveUser(user));\n    }\n\n    public saveChanges() {\n        this.store.dispatch(new SaveChanges());\n    }\n\n    trackByUser(index: number, user: DriveEntryUser): number { return user.id; }\n}\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add people</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"dialogRef.close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"emails-container\">\r\n        <chip-input [formControl]=\"shareModel.emails\" [suggestFn]=\"settings.get('share.suggest_emails') ? suggestUserEmails : null\" placeholder=\"Enter email addresses...\" email required></chip-input>\r\n        <sharing-permissions-button [compact]=\"true\" (change)=\"shareModel.permissions = $event\"></sharing-permissions-button>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngFor=\"let error of errors | async | keyvalue\">{{error.value}}</div>\r\n    </div>\r\n\r\n    <entries-access-table></entries-access-table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"button\" mat-button (click)=\"dialogRef.close()\" [disabled]=\"loading$ | async\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"share()\" [disabled]=\"(loading$ | async)\" *ngIf=\"shareModel.emails.value?.length\" trans>Share</button>\r\n</mat-dialog-actions>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ResetState, SetInitialUsers, ShareDialogState, ShareEntries, ShareEntriesFailed } from '../state/share-dialog.state';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Users } from '@common/auth/users.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'share-dialog',\n    templateUrl: './share-dialog.component.html',\n    styleUrls: ['./share-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareDialogComponent implements OnDestroy {\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    private destroyed$ = new Subject();\n    public errors: BehaviorSubject<BackendErrorMessages> = new BehaviorSubject({});\n    public shareModel: { emails: FormControl, permissions: DriveEntryPermissions};\n\n    constructor(\n        public dialogRef: MatDialogRef<ShareDialogComponent>,\n        public settings: Settings,\n        private store: Store,\n        private actions$: Actions,\n        private users: Users,\n    ) {\n        this.resetModel();\n        this.store.dispatch(new SetInitialUsers());\n\n        this.bindToShareError();\n        this.bindToShareModel();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetState());\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    public share() {\n        const payload = {\n            emails: this.shareModel.emails.value,\n            permissions: this.shareModel.permissions,\n        };\n\n        this.store.dispatch(new ShareEntries(payload)).subscribe(() => {\n            this.setErrorMessages();\n            this.resetModel();\n        });\n    }\n\n    private resetModel() {\n        this.shareModel = {\n            emails: new FormControl([]),\n            permissions: DRIVE_ENTRY_FULL_PERMISSIONS\n        };\n    }\n\n    private setErrorMessages(messages?: BackendErrorMessages) {\n        this.errors.next(messages || {});\n    }\n\n    private bindToShareModel() {\n        this.shareModel.emails.valueChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.setErrorMessages());\n    }\n\n    private bindToShareError() {\n        this.actions$.pipe(\n            takeUntil(this.destroyed$),\n            ofActionDispatched(ShareEntriesFailed)\n        ).subscribe((action: ShareEntriesFailed) => {\n            this.setErrorMessages(action.messages);\n        });\n    }\n\n    suggestUserEmails = (query: string): Observable<string[]> => {\n        return this.users.getAll({query, per_page: 7})\n            .pipe(map(users => users.map(u => u.email)));\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Rename</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"entryName\" placeholder=\"Enter a name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Rename</button>\n    </mat-dialog-actions>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorResponse } from 'common/core/types/backend-error-response';\nimport { DriveState } from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { finalize } from 'rxjs/operators';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { EntryRenamed } from '../../state/actions/events';\n\nexport interface RenameEntryDialogErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'rename-entry-dialog',\n    templateUrl: './rename-entry-dialog.component.html',\n    styleUrls: ['./rename-entry-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenameEntryDialogComponent implements OnInit {\n    public entryName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: RenameEntryDialogErrors = {};\n    public entry: DriveEntry;\n\n    constructor(\n        private dialogRef: MatDialogRef<RenameEntryDialogComponent>,\n        private store: Store,\n        private toast: Toast,\n        private entriesApi: DriveEntryApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.entry = this.store.selectSnapshot(DriveState.selectedEntries)[0];\n        this.entryName.setValue(this.entry.name);\n    }\n\n    public confirm() {\n        const newName = this.entryName.value;\n\n        // entry name was not changed\n        if (newName === this.entry.name) {\n            return this.close();\n        }\n\n        this.loading.next(true);\n\n        return this.entriesApi.update(this.entry.id, {name: newName})\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(() => {\n                this.setErrors();\n                this.store.dispatch(new EntryRenamed(this.entry, newName));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<RenameEntryDialogErrors>) {\n        this.loading.next(false);\n        this.errors = response ? response.messages : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import {\r\n    CopySelectedEntries, DeleteSelectedEntries, DownloadEntries, OpenDialog, OpenFilePreview, RemoveEntries,\r\n} from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { Store } from '@ngxs/store';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { SharesApiService } from '../../sharing/shares-api.service';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharesActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent, null, 'share-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('edit');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.userHasPermission('edit');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent, null, 'rename-entry-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.userHasPermission('edit');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Add to my drive',\r\n            icon: 'add-box',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Remove',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.delete();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser,\r\n        protected shares: SharesApiService,\r\n    ) {\r\n        super(store);\r\n    }\r\n\r\n    protected userHasPermission(permission: keyof DriveEntryPermissions) {\r\n        return this.getSelectedEntries().every(entry => {\r\n            if ( ! entry.users) entry.users = [];\r\n            const user = entry.users.find(u => u.id === this.currentUser.get('id'));\r\n            return user && (user.owns_entry || user.entry_permissions[permission]);\r\n        });\r\n    }\r\n\r\n    public delete() {\r\n        const entries = this.getSelectedEntries();\r\n\r\n        // if user owns or can edit selected entries, delete them\r\n        if (this.store.selectSnapshot(DriveState.userCanEditSelectedEntries)) {\r\n            this.store.dispatch(new DeleteSelectedEntries());\r\n\r\n        // otherwise, just remove entries from user's \"shared with me\" page\r\n        } else {\r\n            this.shares.detachUser(\r\n                this.currentUser.get('id'),\r\n                entries.map(e => e.id),\r\n            ).subscribe(() => {\r\n                this.store.dispatch(new RemoveEntries(entries));\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, OpenDialog, OpenUploadWindow, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FolderActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(\r\n                    CrupdateFolderDialogComponent,\r\n                    null,\r\n                    'crupdate-folder-dialog-container')\r\n                );\r\n            },\r\n            visible: noopTrue,\r\n            separatorAfter: true,\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public openUploadWindow(type: 'file'|'directory') {\r\n        this.store.dispatch(new OpenUploadWindow(type));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofAction, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { take } from 'rxjs/operators';\nimport { FoldersTreeService } from '../../sidebar/folders-tree/folders-tree.service';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { MoveEntriesFailed, MoveEntriesSuccess } from '../../state/actions/events';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\n\n@Component({\n    selector: 'move-entries-dialog',\n    templateUrl: './move-entries-dialog.component.html',\n    styleUrls: ['./move-entries-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [FoldersTreeService],\n})\nexport class MoveEntriesDialogComponent implements OnInit, OnDestroy {\n    public selectedFolder: DriveFolder|RootFolder = ROOT_FOLDER;\n    @Select(DriveState.selectedEntries) selectedEntries$: Observable<DriveEntry[]>;\n    public loading$ = new BehaviorSubject<boolean>(false);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected dialogRef: MatDialogRef<MoveEntriesDialogComponent>,\n        protected store: Store,\n        protected actions: Actions,\n    ) {}\n\n    ngOnInit() {\n        const failure = this.actions.pipe(ofAction(MoveEntriesFailed)).subscribe(() => {\n            this.loading$.next(false);\n        });\n\n        const success = this.actions.pipe(ofAction(MoveEntriesSuccess), take(1))\n            .subscribe(() => {\n                this.selectedFolder = null;\n                this.close();\n            });\n\n        this.subscriptions.push(...[success, failure]);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        this.store.dispatch(new MoveEntries(this.selectedFolder))\n            .subscribe(() => {\n                this.loading$.next(false);\n            });\n    }\n\n    public getRootFolder() {\n        return ROOT_FOLDER;\n    }\n\n    public canMove(): boolean {\n        const folder = this.selectedFolder,\n            movingEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n        return DriveState.canMoveEntriesTo(movingEntries, folder);\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Move items</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content>\n        <folders-tree\n            [expanded]=\"true\"\n            [movingEntries]=\"selectedEntries$ | async\"\n            [disableContextMenu]=\"true\"\n            [selectedFolder]=\"getRootFolder().hash\"\n            [showRootNode]=\"true\"\n            (folderSelected)=\"selectedFolder = $event\"\n        ></folders-tree>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"!canMove() || (loading$ | async)\" trans>Move</button>\n    </mat-dialog-actions>\n</form>\n","import {\r\n    AddStar,\r\n    CopySelectedEntries, DeleteSelectedEntries,\r\n    DownloadEntries,\r\n    OpenDialog,\r\n    OpenFilePreview,\r\n    RemoveStar\r\n} from '../../state/actions/commands';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { MoveEntriesDialogComponent } from '../../entries/move-entries-dialog/move-entries-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntryActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent, null, 'share-dialog-container'));\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected\r\n        },\r\n        {\r\n            viewName: 'Add a star',\r\n            icon: 'star',\r\n            execute: () => {\r\n                this.store.dispatch(new AddStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => !this.allStarred\r\n        },\r\n        {\r\n            viewName: 'Remove star',\r\n            icon: 'star-border',\r\n            execute: () => {\r\n                this.store.dispatch(new RemoveStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => this.allStarred\r\n        },\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent, null, 'crupdate-folder-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                const folderIsSelected = this.store.selectSnapshot(DriveState.selectedFolderId);\r\n                return !this.multipleEntriesSelected && !!folderIsSelected;\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Move to',\r\n            icon: 'subdirectory-arrow-right',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(MoveEntriesDialogComponent, null, 'move-entries-dialog-container'));\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent, null, 'rename-entry-dialog-container'));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            separatorAfter: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Delete',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DeleteSelectedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashPageActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Empty Trash',\r\n            icon: 'delete-forever',\r\n            execute: () => {\r\n                this.emptyTrash();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public emptyTrash() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Empty Trash',\r\n            body: 'All files and folders in your trash will be permanently deleted.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Empty Trash'\r\n        }, new EmptyTrash()));\r\n    }\r\n}\r\n","<ng-container *ngFor=\"let action of actions$ | async\">\n    <ng-container *ngIf=\"action.visible()\">\n        <button class=\"context-menu-item\" *ngIf=\"!compact\" (click)=\"action.execute()\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n            <span trans>{{action.viewName}}</span>\n        </button>\n\n        <button mat-icon-button (click)=\"action.execute()\" [matTooltip]=\"action.viewName | trans\" *ngIf=\"compact && action.showInCompact\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n        </button>\n\n        <div class=\"separator\" *ngIf=\"!compact && action.separatorAfter\"></div>\n    </ng-container>\n</ng-container>\n\n<button mat-icon-button (click)=\"openMoreActionsMenu()\" [matTooltip]=\"'More actions' | trans\" #moreActionsButton *ngIf=\"compact && hasMoreActions$ | async\">\n    <mat-icon svgIcon=\"more-vert\"></mat-icon>\n</button>","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    Input,\n    HostBinding,\n    Injector,\n    ViewChild,\n    ElementRef, OnDestroy\n} from '@angular/core';\nimport { DriveState } from '../../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveContextAction } from '../../types/drive-context-action';\nimport { TrashActions } from '../../actions/trash-actions';\nimport { SharesActions } from '../../actions/shares-actions';\nimport { FolderActions } from '../../actions/folder-actions';\nimport { EntryActions } from '../../actions/entry-actions';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { DrivePage } from '../../../state/models/drive-page';\nimport { DriveContextMenuComponent } from '../drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { TrashPageActions } from '../../actions/trash-page-actions';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { RootFolder } from '../../../folders/root-folder';\n\n@Component({\n    selector: 'context-actions-container',\n    templateUrl: './context-actions-container.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextActionsContainerComponent implements OnDestroy {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Input() @HostBinding('class.compact') compact = false;\n\n    // whether there are more actions to display in \"compact\" mode\n    public hasMoreActions$ = new BehaviorSubject(false);\n    public actions$: BehaviorSubject<DriveContextAction[]> = new BehaviorSubject([]);\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private injector: Injector,\n        private contextMenu: ContextMenu,\n    ) {\n        this.subscription = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.selectedEntry),\n        ]).subscribe(combined => {\n            this.setActions(combined[0], combined[1]);\n            this.hasMoreActions$.next(this.actions$.value.some(action => !action.showInCompact));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntryOrActiveFolder);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n\n    private setActions(activePage: DrivePage, selectedEntry: DriveEntry|RootFolder) {\n        // user clicked on \"trash\" page name in breadcrumb\n        if (activePage.name === 'trash' && ! selectedEntry) {\n            this.actions$.next(this.injector.get(TrashPageActions).getActions());\n\n        // context menu opened for selected entries while in \"trash\" or \"shares\" page\n        } else if (activePage.name === 'trash' && selectedEntry) {\n            this.actions$.next(this.injector.get(TrashActions).getActions());\n        } else if (activePage.name === 'shares' && selectedEntry) {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n\n        // context menu opened by clicking on empty space in folder view\n        } else if (activePage.folder && ! selectedEntry) {\n            this.actions$.next(this.injector.get(FolderActions).getActions());\n\n        // show entries context menu for \"starred\" page\n        } else if (activePage.name === 'starred' || activePage.name === 'recent') {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n\n        // default to entry actions if can't match to anything else\n        } else if (selectedEntry && selectedEntry.id !== 'root') {\n            this.setActionsForEntry();\n        } else {\n            this.actions$.next([]);\n        }\n    }\n\n    private setActionsForEntry() {\n        if (this.store.selectSnapshot(DriveState.userOwnsActiveFolder)) {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n        } else {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n        }\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ToggleDetailsSidebar, SetViewMode } from '../../state/actions/commands';\n\n@Component({\n    selector: 'toolbar-actions',\n    templateUrl: './toolbar-actions.component.html',\n    styleUrls: ['./toolbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarActionsComponent {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Select(DriveState.anythingSelected) anythingSelected: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode: Observable<'list'|'grid'>;\n    @Select(DriveState.detailsOpen) activityOpen: Observable<boolean>;\n    @Select(DriveState.multipleEntriesSelected) multipleEntriesSelected$: Observable<boolean>;\n\n    constructor(\n        protected store: Store,\n        protected contextMenu: ContextMenu,\n    ) {}\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    public ToggleDetails() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntry);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n}\n","<context-actions-container [compact]=\"true\"></context-actions-container>\n\n<div class=\"always-visible-actions\">\n    <button mat-icon-button (click)=\"toggleViewMode()\">\n        <mat-icon [svgIcon]=\"(viewMode | async) === 'list' ? 'view-list' : 'view-module'\"></mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"ToggleDetails()\" [class.active]=\"activityOpen | async\">\n        <mat-icon svgIcon=\"info\"></mat-icon>\n    </button>\n</div>\n\n","import {\n    ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../state/actions/commands';\nimport { SortColumn, SortValue } from '../../entries/available-sorts';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DrivePage } from '../../state/models/drive-page';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'file-list-header',\n    templateUrl: './file-list-header.component.html',\n    styleUrls: ['./file-list-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListHeaderComponent implements OnInit {\n    @Select(DriveState.sortColumn) sortColumn$: Observable<SortColumn>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    public sortFormControl = new FormControl({\n        column: this.store.selectSnapshot(DriveState.sortColumn),\n        direction: this.store.selectSnapshot(DriveState.sortDirection),\n    });\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.activePage$.subscribe(activePage => {\n            this.sortFormControl.setValue({\n                column: activePage.sortColumn,\n                direction: activePage.sortDirection\n            }, {emitEvent: false});\n        });\n\n        this.sortFormControl.valueChanges.subscribe((sort: SortValue) => {\n            this.store.dispatch(new ReloadPageEntries(\n                {orderBy: sort.column, orderDir: sort.direction}\n            ));\n        });\n    }\n}\n","<div class=\"sort-header\">\r\n   <entries-sort-button [btnDisabled]=\"(activePage$ | async)?.disableSort\" [formControl]=\"sortFormControl\"></entries-sort-button>\r\n</div>\r\n<toolbar-actions></toolbar-actions>","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: '[toggleSelectedClass]'\n})\nexport class ToggleSelectedClassDirective implements AfterViewInit {\n    @Select(DriveState.selectedEntryIds) selectedEntryIds: Observable<number[]>;\n\n    constructor(private el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.selectedEntryIds.subscribe(ids => {\n            const els = this.el.nativeElement.querySelectorAll('.drive-entry');\n            if ( ! els.length) return;\n\n            Array.from(els).forEach((el: HTMLElement) => {\n                const selected = ids.indexOf(parseInt(el.dataset.id, 10)) > -1;\n\n                if (selected) {\n                    el.classList.add('selected');\n                } else {\n                    el.classList.remove('selected');\n                }\n            });\n        });\n    }\n}\n","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n        const reader = dir.createReader();\r\n        reader.readEntries(entries => resolve(entries as any));\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import { Input, ElementRef, OnInit, OnDestroy, NgZone, Directive } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement>;\r\n    protected abstract zone: NgZone;\r\n\r\n    @Input() threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if ( ! target || (this.el && target !== this.el.nativeElement) || ! this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string);\r\n\r\n        const currentScroll = this.el ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n\r\n        const heightWithoutOffset = this.el ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n    protected abstract canLoadMore(): boolean;\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import { Directive, ElementRef, NgZone } from '@angular/core';\nimport { LoadMoreEntries } from '../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { InfiniteScroll } from 'common/core/ui/infinite-scroll/infinite.scroll';\n\n@Directive({\n    selector: '[driveInfiniteScroll]'\n})\nexport class DriveInfiniteScrollDirective extends InfiniteScroll {\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n        protected zone: NgZone,\n    ) {\n        super();\n    }\n\n    protected loadMoreItems() {\n        const page = this.store.selectSnapshot(DriveState.currentPage) + 1;\n        this.store.dispatch(new LoadMoreEntries({page}));\n    }\n\n    protected isLoading(): boolean {\n        return this.store.selectSnapshot(DriveState.loading);\n    }\n\n    protected canLoadMore(): boolean {\n        return this.store.selectSnapshot(DriveState.canLoadMoreEntries);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from './state/drive-state';\nimport { DriveDomCacheService } from './interactions/drive-dom-cache.service';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n    LoadUserFolders,\n    LoadUserSpaceUsage,\n    ResetState,\n    SetCurrentUser,\n    SetViewMode,\n    ToggleSidebar,\n    UploadFiles\n} from './state/actions/commands';\nimport { UploadedFile } from 'common/uploads/uploaded-file';\nimport { Settings } from 'common/core/config/settings.service';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { BreakpointChanged } from './state/actions/events';\nimport { VIEW_MODE_KEY } from './state/models/drive-state-model';\nimport { LocalStorage } from 'common/core/services/local-storage.service';\nimport { User } from '@common/core/types/models/User';\n\n@Component({\n    selector: 'drive',\n    templateUrl: './drive.component.html',\n    styleUrls: ['./drive.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveComponent implements OnInit, OnDestroy {\n    @ViewChild('scrollContainer', { read: ElementRef, static: true }) scrollContainer: ElementRef;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef;\n    @ViewChild(EntryDragPreviewComponent, { read: ElementRef, static: true }) dragPreview: ElementRef;\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    @Select(DriveState.detailsOpen) activityOpen$: Observable<boolean>;\n    @Select(DriveState.sidebarOpen) sidebarOpen$: Observable<boolean>;\n    @Select(DriveState.loading) loading$: Observable<boolean>;\n    @Select(DriveState.isMobile) isMobile$: Observable<boolean>;\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private currentUser: CurrentUser,\n        private localStorage: LocalStorage,\n        private domCache: DriveDomCacheService,\n        private breakpoints: BreakpointObserver,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.setViewMode();\n        this.cacheDemoElements();\n        this.observeBreakpointChanges();\n        this.store.dispatch(new LoadUserFolders());\n        this.store.dispatch(new LoadUserSpaceUsage());\n\n        // TODO: refactor this once auth is moved to it's own store\n        this.store.dispatch(new SetCurrentUser(this.currentUser.getModel() as User));\n        this.currentUser.model$.subscribe(user => {\n            this.store.dispatch(new SetCurrentUser(user as User));\n        });\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(ResetState);\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    public uploadFiles(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n\n    public toggleSidebar() {\n        this.store.dispatch(new ToggleSidebar());\n    }\n\n    private cacheDemoElements() {\n        this.domCache.filesCont = this.filesContainer.nativeElement;\n        this.domCache.scrollCont = this.scrollContainer.nativeElement;\n        this.domCache.dragPreview = this.dragPreview.nativeElement;\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n\n    private observeBreakpointChanges() {\n        const sub = this.breakpoints.observe('(max-width: 1100px)').subscribe(result => {\n            this.store.dispatch(new BreakpointChanged({isMobile: result.matches}));\n        });\n        this.subscriptions.push(sub);\n    }\n}\n","<material-navbar [showToggleButton]=\"(isMobile$ | async)\" (toggleButtonClick)=\"toggleSidebar()\" menuPosition=\"drive-navbar\">\n    <main-searchbar class=\"nav-searchbar\"></main-searchbar>\n</material-navbar>\n<mat-sidenav-container>\n    <mat-sidenav [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" [opened]=\"sidebarOpen$ | async\" class=\"left-sidebar\">\n        <sidebar></sidebar>\n    </mat-sidenav>\n    <mat-sidenav [opened]=\"activityOpen$ | async\" [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" position=\"end\" class=\"right-sidebar\">\n        <details-sidebar></details-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content driveHammerInteractions [class.has-rek]=\"settings.has('ads.drive')\">\n        <ad-host slot=\"ads.drive\"></ad-host>\n        <drive-toolbar></drive-toolbar>\n        <file-list-header></file-list-header>\n        <div class=\"loading-overlay-container\">\n            <div\n                class=\"files-container\"\n                #filesContainer\n                #scrollContainer\n                toggleSelectedClass\n                [class.dragging]=\"dragging | async\"\n                contextMenu=\"entry\"\n                [disableContextMenu]=\"!(canUpload$ | async)\"\n                fileDropzone\n                [disableDropzoneClick]=\"true\"\n                [disableDropzone]=\"!(canUpload$ | async)\"\n                driveInfiniteScroll\n                (filesDropped)=\"uploadFiles($event)\"\n            >\n                <router-outlet></router-outlet>\n            </div>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n<entry-drag-preview></entry-drag-preview>\n","export enum Keycodes {\r\n    ENTER = 13,\r\n    SPACE = 32,\r\n    ESCAPE = 27,\r\n    DELETE = 46,\r\n    ARROW_UP = 38,\r\n    ARROW_RIGHT = 39,\r\n    ARROW_DOWN = 40,\r\n    ARROW_LEFT = 37,\r\n    S = 83,\r\n    N = 78,\r\n    A = 65,\r\n    T = 84,\r\n    B = 66,\r\n    C = 67,\r\n    O = 79,\r\n    P = 80,\r\n    R = 82,\r\n    F = 70,\r\n    Y = 89,\r\n    Z = 90,\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Keycodes } from './keycodes.enum';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { DELETE } from '@angular/cdk/keycodes';\r\n\r\ninterface ParsedKeybind {\r\n    ctrl: boolean;\r\n    shift: boolean;\r\n    key: string;\r\n}\r\n\r\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Keybinds {\r\n    private bindings = [];\r\n\r\n    public add(keybind: string, callback: (e: KeyboardEvent) => void) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\r\n    }\r\n\r\n    public addWithPreventDefault(keybind: string, callback: Function) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\r\n    }\r\n\r\n    public listenOn(el: HTMLElement): Subscription {\r\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\r\n            this.executeBindings(e);\r\n        });\r\n    }\r\n\r\n    private executeBindings(e: KeyboardEvent) {\r\n        this.bindings.forEach(binding => {\r\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\r\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\r\n            binding.callback(e);\r\n        });\r\n    }\r\n\r\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\r\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode && e.ctrlKey === keybind.ctrl && e.shiftKey === keybind.shift;\r\n    }\r\n\r\n    /**\r\n     * Parse keybind string into object.\r\n     */\r\n    private parseKeybindString(keybind: string): ParsedKeybind {\r\n        const parts = keybind.trim().split('+');\r\n        const parsed = {ctrl: false, shift: false, key: ''};\r\n\r\n        parts.forEach(part => {\r\n            part = part.trim().toLowerCase();\r\n\r\n            if (part === 'ctrl') {\r\n                parsed.ctrl = true;\r\n            } else if (part === 'shift') {\r\n                parsed.shift = true;\r\n            } else {\r\n                parsed.key = part;\r\n            }\r\n        });\r\n\r\n        return parsed;\r\n    }\r\n}\r\n","<files-grid-item\r\n        *ngFor=\"let entry of entries; trackBy: trackById\"\r\n        [entry]=\"entry\"\r\n        [contextMenu]=\"{type: 'entry', entry: entry}\"\r\n        [disableContextMenu]=\"disableInteractions\"\r\n        [folderDropTarget]=\"entry\"\r\n></files-grid-item>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid',\n    templateUrl: './files-grid.component.html',\n    styleUrls: ['./files-grid.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","<table mat-table [dataSource]=\"entries\" matSort [matSortDisabled]=\"disableInteractions\" (matSortChange)=\"sortChange($event)\" [trackBy]=\"trackById\">\n  <!-- Image Column -->\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef> </th>\n    <td mat-cell *matCellDef=\"let entry\"> <file-thumbnail [file]=\"entry\"></file-thumbnail> </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</th>\n    <td mat-cell *matCellDef=\"let entry\">\n      <span class=\"entry-name\">{{entry.name}}</span>\n      <mat-icon class=\"star-icon\" svgIcon=\"star\" *ngIf=\"isStarred(entry)\" [matTooltip]=\"'Starred' | trans\"></mat-icon>\n    </td>\n  </ng-container>\n\n  <!-- Updated_at Column -->\n  <ng-container matColumnDef=\"updated\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"updated_at\" trans>Updated</th>\n    <td mat-cell *matCellDef=\"let entry\"> {{entry.updated_at | formattedDate }} </td>\n  </ng-container>\n\n  <!-- File Size Column -->\n  <ng-container matColumnDef=\"size\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"file_size\" trans>Size</th>\n    <td mat-cell *matCellDef=\"let entry\"> {{entry.file_size | formattedFileSize}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"['image', 'name', 'updated', 'size']\"></tr>\n  <tr\n      class=\"drive-entry\"\n      mat-row\n      *matRowDef=\"let row; columns: ['image', 'name', 'updated', 'size'];\"\n      [contextMenu]=\"{type: 'entry', entry: row}\"\n      [disableContextMenu]=\"disableInteractions\"\n      [attr.data-id]=\"row.id\"\n      [folderDropTarget]=\"row\"\n  ></tr>\n</table>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input} from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\nimport { Sort } from '@angular/material/sort';\nimport { Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../../state/actions/commands';\nimport { SortColumn, SortDirection } from '../../../entries/available-sorts';\n\n@Component({\n    selector: 'files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesListComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n\n    constructor(private store: Store) {}\n\n    public sortChange(e: Sort) {\n        const params = {\n            orderBy: e.active as SortColumn,\n            orderDir: e.direction as SortDirection\n        };\n\n        if ( ! this.disableInteractions) {\n            this.store.dispatch(new ReloadPageEntries(params));\n        }\n    }\n\n    public isStarred(entry: DriveEntry): boolean {\n        if ( ! entry.tags) return false;\n        return !!entry.tags.find(tag => tag.name === 'starred');\n    }\n\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-recent-entries',\n    templateUrl: './no-recent-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoRecentEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>No recent entries.</div>\r\n    <div class=\"secondary\" trans>You have not uploaded any files or folders yet.</div>\r\n    <mat-icon svgIcon=\"recent-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-trashed-entries',\n    templateUrl: './no-trashed-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoTrashedEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Trash is empty.</div>\r\n    <div class=\"secondary\" trans>There are no files or folders in your trash currently.</div>\r\n    <mat-icon svgIcon=\"trash-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-starred-entries',\n    templateUrl: './no-starred-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoStarredEntriesComponent {\n}\n","<div class=\"no-results-message\">\n    <div class=\"main\" trans>Nothing is starred.</div>\n    <div class=\"secondary\" trans>Add stars to files and folders that you want to easily find later.</div>\n    <mat-icon svgIcon=\"add-star-custom\" class=\"icon\"></mat-icon>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-shared-entries',\n    templateUrl: './no-shared-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSharedEntriesComponent {\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Shared with me.</div>\r\n    <div class=\"secondary\" trans>Files and folders other people have shared with you.</div>\r\n    <mat-icon svgIcon=\"share-custom\" class=\"icon\"></mat-icon>\r\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-search-entries',\n    templateUrl: './no-search-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSearchEntriesComponent {\n}\n","<div class=\"no-results-message\">\n    <div class=\"main\" trans>No matches found.</div>\n    <div class=\"secondary\" trans>Try another search with different query or file type.</div>\n    <mat-icon svgIcon=\"search-custom\" class=\"icon\"></mat-icon>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\n\n@Component({\n    selector: 'upload-dropzone',\n    templateUrl: './upload-dropzone.component.html',\n    styleUrls: ['./upload-dropzone.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadDropzoneComponent implements AfterViewInit {\n    @ViewChild('clickTarget', { static: true }) clickTarget: ElementRef;\n\n    constructor (\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadConfig: UploadInputConfig,\n    ) {}\n\n    ngAfterViewInit() {\n        this.clickTarget.nativeElement.addEventListener('click', () => {\n            openUploadWindow(this.uploadConfig).then(files => {\n                this.store.dispatch(new UploadFiles(files));\n            });\n        });\n    }\n}\n","<div class=\"animation-circle\"></div>\n<div class=\"content-circle\" #clickTarget>\n    <mat-icon class=\"main-icon\" svgIcon=\"upload-custom\"></mat-icon>\n    <div class=\"text initial-text\">\n        <div class=\"primary\" trans>Drop files or folders here</div>\n        <div class=\"secondary\" trans>or click to upload.</div>\n    </div>\n</div>","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-folder-entries',\n    templateUrl: './no-folder-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoFolderEntriesComponent {\n}\n","<upload-dropzone></upload-dropzone>","<files-grid [entries]=\"entries$ | async\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n<ng-template #filesList>\r\n    <files-list [entries]=\"entries$ | async\"></files-list>\r\n</ng-template>\r\n\r\n<ng-container [ngSwitch]=\"activePageName$ | async\" *ngIf=\"noEntries | async\">\r\n    <no-recent-entries *ngSwitchCase=\"'recent'\"></no-recent-entries>\r\n    <no-trashed-entries *ngSwitchCase=\"'trash'\"></no-trashed-entries>\r\n    <no-starred-entries *ngSwitchCase=\"'starred'\"></no-starred-entries>\r\n    <no-shared-entries *ngSwitchCase=\"'shares'\"></no-shared-entries>\r\n    <no-search-entries *ngSwitchCase=\"'search'\"></no-search-entries>\r\n    <no-folder-entries *ngSwitchDefault></no-folder-entries>\r\n</ng-container>","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    HostBinding,\n    OnInit,\n    ElementRef, OnDestroy\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Observable, Subscription } from 'rxjs';\nimport { DrivePageType } from '../../state/models/available-pages';\nimport { Keybinds } from 'common/core/keybinds/keybinds.service';\nimport { DeleteSelectedEntries, SelectAllEntries } from '../../state/actions/commands';\nimport { EntryDoubleTapped } from '../../state/actions/events';\n\n@Component({\n    selector: 'entries-container',\n    templateUrl: './entries-container.component.html',\n    styleUrls: ['./entries-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Keybinds],\n})\nexport class EntriesContainerComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.tabindex') tabindex = 0;\n    @Select(DriveState.entries) entries$: Observable<DriveEntry[]>;\n    @Select(DriveState.entriesEmpty) noEntries: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n    @Select(DriveState.activePageName) activePageName$: Observable<DrivePageType>;\n    private keybindSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private keybinds: Keybinds,\n    ) {}\n\n    ngOnInit() {\n        this.keybindSub = this.keybinds.listenOn(this.el.nativeElement);\n        this.keybinds.addWithPreventDefault('ctrl+a', () => {\n            this.store.dispatch(new SelectAllEntries());\n        });\n        this.keybinds.addWithPreventDefault('delete', () => {\n            this.store.dispatch(new DeleteSelectedEntries());\n        });\n        this.keybinds.addWithPreventDefault('enter', () => {\n            this.store.dispatch(new EntryDoubleTapped(this.store.selectSnapshot(DriveState.selectedEntry)));\n        });\n    }\n\n    ngOnDestroy() {\n        this.keybindSub.unsubscribe();\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" trans>Download</button>\r\n</div>","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            this.player().src = this.getSrc();\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: number;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports file up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if google docs preview iframe is not loaded\n        // after 6 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getGoogleDocsUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getGoogleDocsUrl(previewUrl));\n            }\n        });\n    }\n\n    private getGoogleDocsUrl(previewUrl: string) {\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://docs.google.com/gview?embedded=true&url=' + encodeURIComponent(previewUrl);\n    }\n}\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","<mat-icon svgIcon=\"password-custom\"></mat-icon>\n<form class=\"content\" (ngSubmit)=\"submitPassword()\" ngNativeValidate>\n    <div class=\"message\" trans>The link you are trying to access is password protected.</div>\n    <div class=\"input-container\">\n        <label for=\"password\" class=\"hidden\" trans>Password</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" [formControl]=\"passwordControl\" trans-placeholder required>\n    </div>\n    <div class=\"button-container\">\n        <div class=\"error\" *ngIf=\"passwordError$ | async\" trans>Password does not match.</div>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Enter</button>\n    </div>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { ShareableLinksApiService } from '../../../sharing/links/shareable-links-api.service';\nimport { ShareableLink } from '../../../sharing/links/models/shareable-link';\n\n@Component({\n    selector: 'link-preview-password-panel',\n    templateUrl: './link-preview-password-panel.component.html',\n    styleUrls: ['./link-preview-password-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkPreviewPasswordPanelComponent {\n    public passwordControl = new FormControl();\n    public passwordError$ = new BehaviorSubject(false);\n\n    @Input() link: ShareableLink;\n    @Output() passwordValid = new EventEmitter(null);\n\n    constructor(private links: ShareableLinksApiService) {}\n\n    public submitPassword() {\n        this.links.checkPassword(this.link.id, this.passwordControl.value)\n            .subscribe(response => {\n               this.handlePasswordCheck(response.matches);\n            }, () => {});\n    }\n\n    private handlePasswordCheck(matches: boolean) {\n        this.passwordError$.next(!matches);\n\n        if (matches) {\n            this.passwordValid.emit(this.passwordControl.value);\n        }\n    }\n}\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        <file-icon [type]=\"pagination.entry.type\"></file-icon>\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} {{'of' | trans}} {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.get('branding.logo_light')\">\r\n</a>\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { Settings } from 'common/core/config/settings.service';\n\n@Component({\n    selector: 'file-preview-toolbar',\n    templateUrl: './file-preview-toolbar.component.html',\n    styleUrls: ['./file-preview-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewToolbarComponent {\n    @Input() showLogo = false;\n    @Input() disableDownload = false;\n    @Input() showCloseButton = false;\n\n    @Output() closed = new EventEmitter();\n\n    constructor(\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n    ) {}\n\n    public downloadFiles() {\n        this.previewFiles.download.next();\n    }\n}\n","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        this.downloadSub = comp.instance.download.subscribe(() => {\r\n            this.previewFiles.download.next();\r\n        });\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\" [disableDownload]=\"!canDownload()\">\r\n    <button mat-icon-button (click)=\"openContextMenu()\" #moreOptionsButton *ngIf=\"!data.hideMoreOptionsBtn\">\r\n        <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n    </button>\r\n</file-preview-toolbar>\r\n<preview-container [files]=\"data.entries\" [activeFile]=\"data.activeEntry\" #previewContainer></preview-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, ViewChild, } from '@angular/core';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OverlayPanelRef } from 'common/core/ui/overlay-panel/overlay-panel-ref';\nimport { OVERLAY_PANEL_DATA } from 'common/core/ui/overlay-panel/overlay-panel-data';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { DownloadEntries } from '../../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\n\nexport interface FilePreviewOverlayData {\n    entries: DriveEntry[];\n    activeEntry?: number;\n    shareableLink?: ShareableLink;\n    password?: string;\n    hideMoreOptionsBtn?: boolean;\n}\n\n@Component({\n    selector: 'file-preview-overlay',\n    templateUrl: './file-preview-overlay.component.html',\n    styleUrls: ['./file-preview-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewOverlayComponent implements AfterViewInit, OnDestroy {\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\n    @ViewChild('moreOptionsButton', { read: ElementRef }) optionsButton: ElementRef;\n    private downloadSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private contextMenu: ContextMenu,\n        private overlayRef: OverlayPanelRef,\n        private previewFiles: PreviewFilesService,\n        private currentUser: CurrentUser,\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\n    ) {}\n\n    ngAfterViewInit() {\n        this.bindToDownload();\n        // prevent ghost click from closing preview overlay\n        // when on mobile and single tap opens preview\n        setTimeout(() => {\n            this.previewContainer.nativeElement.addEventListener('click', e => {\n                if ( ! e.target.closest('.preview-object')) {\n                    this.overlayRef.close();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public openContextMenu() {\n        const origin = this.optionsButton.nativeElement;\n        this.contextMenu.open(DriveContextMenuComponent, origin, {data: {entry: this.previewFiles.getCurrent()}});\n    }\n\n    public closeOverlay() {\n        this.overlayRef.close();\n    }\n\n    public canDownload() {\n        return this.data.entries.every(entry => {\n            if ( ! entry.users) entry.users = [];\n            const user = entry.users && entry.users.find(u => u.id === this.currentUser.get('id'));\n            const userHasDownloadPermission = user && (user.owns_entry || user.entry_permissions.download);\n            return this.data.shareableLink || userHasDownloadPermission;\n        });\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const entries = this.previewFiles.getCurrent();\n            this.store.dispatch(new DownloadEntries([entries], this.data.shareableLink, this.data.password));\n        });\n    }\n}\n","<material-navbar></material-navbar>\r\n\r\n<div class=\"toolbar\">\r\n    <div class=\"breadcrumb\">\r\n        <button mat-icon-button *ngIf=\"isSubFolder()\" (click)=\"openFolder()\" class=\"home-button\">\r\n            <mat-icon svgIcon=\"home\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n        <ng-container *ngFor=\"let folder of breadcrumb$ | async; last as last;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"openFolder(folder)\">{{folder.name}}</div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <entries-sort-button [formControl]=\"sortFormControl\"></entries-sort-button>\r\n\r\n        <span class=\"action-separator\"></span>\r\n\r\n        <ng-container *ngIf=\"viewMode$ | async as viewMode\">\r\n            <button mat-icon-button (click)=\"toggleViewMode()\" class=\"view-toggle-button\" [matTooltip]=\"(viewMode === 'list' ? 'Grid view' : 'List view') | trans\">\r\n                <mat-icon [svgIcon]=\"viewMode === 'list' ? 'view-list' : 'view-module'\" class=\"action-icon\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-icon-button (click)=\"download()\" *ngIf=\"data.link.allow_download\" [matTooltip]=\"'Download all' | trans\">\r\n            <mat-icon svgIcon=\"file-download\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n\r\n<ad-host slot=\"ads.file-preview\" class=\"folder-preview-vert-host\"></ad-host>\r\n\r\n<div class=\"files-container\" #filesContainer (click)=\"onClick($event)\">\r\n   <ng-container *ngIf=\"pagination$ | async as pagination\">\r\n       <files-grid [entries]=\"pagination.data\" [disableInteractions]=\"true\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n       <ng-template #filesList>\r\n           <files-list [entries]=\"pagination.data\" [disableInteractions]=\"true\"></files-list>\r\n       </ng-template>\r\n       <no-results-message *ngIf=\"!pagination.data.length\">\r\n           <span primary-text trans>Folder Is Empty</span>\r\n           <span secondary-text trans>No files have been uploaded to this folder yet.</span>\r\n       </no-results-message>\r\n   </ng-container>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {\n    Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ElementRef, OnInit, OnChanges, NgZone,\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FilePreviewOverlayComponent } from '../file-preview-overlay/file-preview-overlay.component';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { SortValue } from '../../entries/available-sorts';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { DriveState } from '../../state/drive-state';\n\n@Component({\n    selector: 'folder-preview',\n    templateUrl: './folder-preview.component.html',\n    styleUrls: ['./folder-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FolderPreviewComponent extends InfiniteScroll implements OnChanges, OnInit {\n    @Input() data: GetLinkData;\n    @Input() password: string;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef<HTMLDivElement>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n\n    get folder() {\n        return this.data.link.entry;\n    }\n\n    get children() {\n        return this.pagination$.value.data;\n    }\n\n    public loading$ = new BehaviorSubject(false);\n    public breadcrumb$: BehaviorSubject<FileEntry[]> = new BehaviorSubject([]);\n    public pagination$: BehaviorSubject<PaginationResponse<FileEntry>> = new BehaviorSubject(null);\n    private allFolders = {};\n    public sortFormControl = new FormControl({\n        column: 'updated_at',\n        direction: 'desc',\n    });\n\n    constructor(\n        private store: Store,\n        private overlay: OverlayPanel,\n        private router: Router,\n        private linkApi: ShareableLinksApiService,\n        protected zone: NgZone,\n        protected el: ElementRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.sortFormControl.valueChanges.subscribe((value: SortValue) => {\n            if (value) {\n                this.loadChildren({}, true);\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.allFolders[this.folder.id] = this.folder;\n        this.generateBreadcrumb(this.folder);\n        this.setPagination(this.data.folderChildren);\n        this.loading$.next(false);\n    }\n\n    public download() {\n        this.store.dispatch(new DownloadEntries([this.folder], this.data.link, this.password));\n    }\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    private openPreviewOverlay(entry: FileEntry) {\n        const entries = this.children.filter(ent => ent.type !== 'folder'),\n            activeEntry = entries.findIndex(e => e.id === entry.id);\n\n        this.overlay.open(FilePreviewOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            panelClass: 'file-preview-overlay-container',\n            data: {\n                entries: entries.slice(),\n                activeEntry,\n                shareableLink: this.data.link,\n                password: this.password,\n                hideMoreOptionsBtn: true,\n            }\n        });\n    }\n\n    private getEntry(e: MouseEvent): FileEntry {\n        const node = (e.target as HTMLElement).closest('.drive-entry') as HTMLElement;\n        if (node) {\n            return this.children.find(entry => entry.id === +node.dataset.id);\n        }\n    }\n\n    public onClick(e: MouseEvent) {\n        const entry = this.getEntry(e);\n        if ( ! entry) return;\n\n        if (entry.type === 'folder') {\n            this.openFolder(entry);\n        } else {\n            this.openPreviewOverlay(entry);\n        }\n    }\n\n    public isSubFolder() {\n        return this.router.url.indexOf(':') > -1;\n    }\n\n    public openFolder(folder?: FileEntry) {\n        if (folder && this.folder.id === folder.id) return;\n        this.loading$.next(true);\n        this.router.navigate(['/drive/s', this.makeLinkHash(folder)]).then(() => {\n            // reset sort to default, as there's no good way to\n            // pass current sort to parent link preview component\n            this.sortFormControl.reset();\n        });\n    }\n\n    private generateBreadcrumb(folder: FileEntry) {\n        this.breadcrumb$.next(folder.path.split('/').map(folderId => {\n            return this.allFolders[+folderId];\n        }).filter(subFolder => !!subFolder));\n    }\n\n    private loadChildren(params: {page?: number}, replaceChildren = false) {\n        this.loading$.next(true);\n        const order = `${this.sortFormControl.value.column}:${this.sortFormControl.value.direction}`;\n        const page = params.page || this.pagination$.value.current_page;\n        this.linkApi.findByHash(this.makeLinkHash(this.folder), {page, order, withEntries: true})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const oldChildren = this.children;\n                const pagination = response.folderChildren;\n                if ( ! replaceChildren) {\n                    pagination.data = [...oldChildren, ...pagination.data];\n                }\n                this.setPagination(pagination);\n            });\n    }\n\n    private makeLinkHash(folder?: FileEntry) {\n        let hash = this.data.link.hash;\n        if (folder) hash += ':' + folder.hash;\n        return hash;\n    }\n\n    private setPagination(pagination: PaginationResponse<FileEntry>) {\n        // add shareable link hash to all entries url to avoid permission errors\n        pagination.data = pagination.data.map(entry => {\n            entry.url += `?shareable_link=${this.data.link.id}`;\n            if (this.password) {\n                entry.url += `&password=${this.password}`;\n            }\n            return entry;\n        });\n        this.pagination$.next(pagination);\n    }\n\n    protected loadMoreItems() {\n        const page = this.pagination$.value.current_page + 1;\n        this.loadChildren({page}, false);\n    }\n\n    protected canLoadMore() {\n        return this.pagination$.value.current_page < this.pagination$.value.last_page;\n    }\n\n    protected isLoading() {\n        return this.loading$.value;\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <link-preview-password-panel *ngIf=\"passwordPanelVisible$ | async; else filePreview\" [link]=\"data.link\" (passwordValid)=\"setValidPassword($event)\"></link-preview-password-panel>\n\n    <ng-template #filePreview>\n        <ng-container *ngIf=\"data.link.entry.type === 'folder'\">\n            <folder-preview [data]=\"data\" [password]=\"this.password\">\n                <ng-container *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\">\n                    <span class=\"action-separator\"></span>\n                    <button\n                            mat-flat-button\n                            color=\"accent\"\n                            (click)=\"import()\"\n                            trans\n                    >Import</button>\n                </ng-container>\n            </folder-preview>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.link.entry.type !== 'folder'\">\n            <file-preview-toolbar [showLogo]=\"true\" [disableDownload]=\"!data.link.allow_download\">\n                <a mat-flat-button color=\"accent\" routerLink=\"/login\" *ngIf=\"!currentUser.isLoggedIn()\" trans>Sign In</a>\n                <button\n                        mat-flat-button\n                        color=\"accent\"\n                        (click)=\"import()\"\n                        *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\"\n                        trans\n                >Import</button>\n            </file-preview-toolbar>\n            <ad-host slot=\"ads.file-preview\" class=\"file-preview-vert-host\"></ad-host>\n            <preview-container [files]=\"[data.link.entry]\" [class.has-rek]=\"settings.has('ads.file-preview')\"></preview-container>\n        </ng-container>\n    </ng-template>\n</ng-container>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnDestroy, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { Settings } from 'common/core/config/settings.service';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { filter, map } from 'rxjs/operators';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\nimport { VIEW_MODE_KEY } from '../../state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\n\n@Component({\n    selector: 'link-preview-container',\n    templateUrl: './link-preview-container.component.html',\n    styleUrls: ['./link-preview-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PreviewFilesService,\n    ]\n})\nexport class LinkPreviewContainerComponent implements OnInit, OnDestroy {\n    public data$: BehaviorSubject<GetLinkData> = new BehaviorSubject(null);\n    public passwordPanelVisible$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public password: string;\n    private downloadSub: Subscription;\n\n    /**\n     * Check if current user owns this entry or\n     * already has it imported into their drive.\n     */\n    public get entryAlreadyImported$(): Observable<boolean> {\n        const userId = this.currentUser.get('id');\n        return this.data$.pipe(\n            map(data => data.link),\n            filter(link => !!link && !!link.entry && !!link.entry.users),\n            map(link => link.entry),\n            map(entry => !!entry.users.find(user => user.id === userId))\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private links: ShareableLinksApiService,\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n        public currentUser: CurrentUser,\n        private router: Router,\n        private toast: Toast,\n        private el: ElementRef<HTMLElement>,\n        private localStorage: LocalStorage,\n    ) {}\n\n    ngOnInit() {\n        this.bindToDownload();\n        this.disableContextMenu();\n        this.setViewMode();\n        this.route.params.subscribe(params => {\n            this.links.findByHash(params.hash, {withEntries: true}).subscribe(response => {\n                const linkChanged = response.link.id !== (this.data$.value && this.data$.value.link.id);\n                this.data$.next(response);\n                this.setBackgroundClass(response.link);\n\n                // prevent asking password for nested folders, if user already entered password\n                if (response.link.password && (linkChanged || !this.password)) {\n                    this.togglePasswordPanel(true);\n                } else {\n                    this.togglePasswordPanel(false);\n                    this.showPreview();\n                }\n            }, () => {\n                this.router.navigate(['/404']);\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public import() {\n        this.links.importEntry(this.data$.value.link.id, this.password)\n            .subscribe(response => {\n                const link = this.data$.value.link;\n                link.entry.users = response.users;\n                this.data$.next({...this.data$.value, link});\n                this.toast.open({\n                    message: `\":name\" imported into your drive.`,\n                    replacements: {name: link.entry.name},\n                });\n            });\n    }\n\n    public togglePasswordPanel(value: boolean) {\n        this.passwordPanelVisible$.next(value);\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const link = this.data$.value.link;\n            this.store.dispatch(new DownloadEntries([link.entry], link, this.password));\n        });\n    }\n\n    /**\n     * Show preview for shareable link files.\n     */\n    private showPreview() {\n        const data = this.data$.value;\n        data.link.entry.url += `?shareable_link=${data.link.id}`;\n        if (this.password) {\n            data.link.entry.url += `&password=${this.password}`;\n        }\n        this.data$.next({...data});\n    }\n\n    public setValidPassword(password: string) {\n        this.password = password;\n        this.showPreview();\n        this.togglePasswordPanel(false);\n    }\n\n    private setBackgroundClass(link: ShareableLink) {\n        const className = link.entry.type === 'folder' ? 'folder-link' : 'file-link';\n        this.el.nativeElement.classList.add(className);\n    }\n\n    private disableContextMenu() {\n        fromEvent(this.el.nativeElement, 'contextmenu')\n            .subscribe(e => {\n                e.preventDefault();\n            });\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriveComponent } from './drive.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { AuthGuard } from 'common/guards/auth-guard.service';\n\nconst dashboardRoutes: Routes = [\n    // shareable links can be accessed by guests\n    {\n        path: 's/:hash',\n        component: LinkPreviewContainerComponent,\n    },\n\n    // main drive routes can only be accessed by logged in users\n    {\n        path: '',\n        component: DriveComponent,\n        canActivate: [AuthGuard],\n        children: [\n            { path: '', component: EntriesContainerComponent},\n            { path: 'shares', component: EntriesContainerComponent},\n            { path: 'search', component: EntriesContainerComponent},\n            { path: 'recent', component: EntriesContainerComponent},\n            { path: 'starred', component: EntriesContainerComponent},\n            { path: 'trash', component: EntriesContainerComponent},\n            { path: 'folders/:hash', component: EntriesContainerComponent},\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(dashboardRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n})\nexport class DriveRoutingModule {}\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r2.diameter)(\"stroke-dashoffset\", ctx_r2._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r2._strokeCircumference, \"px\")(\"stroke-width\", ctx_r2._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r2._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r3._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r3._strokeCircumference, \"px\")(\"stroke-width\", ctx_r3._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r3._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DriveContextMenuComponent } from './components/drive-context-menu/drive-context-menu.component';\r\n\r\nexport const DRIVE_CONTEXT_MENUS = {\r\n    entry: DriveContextMenuComponent,\r\n};\r\n","<file-icon [mime]=\"upload.uploadedFile.mime\"></file-icon>\n<div class=\"content\">\n    <div class=\"meta\">\n        <div class=\"name\" [matTooltip]=\"upload.uploadedFile.name\">{{upload.uploadedFile.name}}</div>\n        <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n            {{progress.eta}}\n            <span trans>left</span>\n        </div>\n        <div class=\"actions\">\n            <mat-icon\n                    svgIcon=\"error\"\n                    *ngIf=\"upload.error$ | async as error; else noError\"\n                    class=\"error-icon\"\n                    [matTooltip]=\"error | trans\"\n                    matTooltipPosition=\"left\"\n            ></mat-icon>\n            <ng-template #noError>\n                <mat-icon svgIcon=\"check-circle\" *ngIf=\"upload.completed\" class=\"completed-icon\"></mat-icon>\n                <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"cancelUpload(upload)\" trans>Cancel</span>\n            </ng-template>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" [value]=\"progress.percentage\" color=\"accent\"></mat-progress-bar>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueItem, UploadQueueItemProgress } from 'common/uploads/upload-queue/upload-queue-item';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../../state/actions/commands';\nimport { throttleTime } from 'rxjs/operators';\nimport { animationFrameScheduler, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel-item',\n    templateUrl: './uploads-panel-item.component.html',\n    styleUrls: ['./uploads-panel-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelItemComponent implements OnInit, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    public progress: UploadQueueItemProgress = {};\n    private subscription: Subscription;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private store: Store,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public cancelUpload(upload: UploadQueueItem) {\n        this.uploadQueue.remove(upload.id);\n        if (this.uploadQueue.isEmpty()) {\n            this.store.dispatch(new CloseUploadsPanel());\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"info\">\n        <ng-container *ngIf=\"activeUploads.count$ | async as count\">\n            <ng-container *ngIf=\"count.pending > 0\">\n                {{ 'Uploading' | trans }} {{count.pending}} {{(count.pending > 1 ? 'Items' : 'Item') | trans}}\n            </ng-container>\n            <ng-container *ngIf=\"count.pending === 0\">\n                {{count.completed}} {{'items uploaded' | trans}}\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button (click)=\"toggleMinimized()\">\n            <mat-icon svgIcon=\"keyboard-arrow-up\" *ngIf=\"minimized$ | async; else notMinimized\" class=\"minimize-icon\"></mat-icon>\n            <ng-template #notMinimized>\n                <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"minimize-icon\"></mat-icon>\n            </ng-template>\n        </button>\n        <button mat-icon-button (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"uploads-list\" [class.hidden]=\"minimized$ | async\">\n    <uploads-panel-item *ngFor=\"let upload of activeUploads.uploads$ | async; trackBy: trackById\" [upload]=\"upload\"></uploads-panel-item>\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueService } from 'common/uploads/upload-queue/upload-queue.service';\nimport { UploadQueueItem } from 'common/uploads/upload-queue/upload-queue-item';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../state/actions/commands';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel',\n    templateUrl: './uploads-panel.component.html',\n    styleUrls: ['./uploads-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelComponent implements OnDestroy {\n    public minimized$ = new BehaviorSubject(false);\n\n    constructor(\n        private store: Store,\n        public activeUploads: UploadQueueService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.activeUploads.reset();\n    }\n\n    public toggleMinimized() {\n        this.minimized$.next(!this.minimized$.value);\n    }\n\n    public close() {\n        this.store.dispatch(new CloseUploadsPanel());\n    }\n\n    public trackById(index: number, upload: UploadQueueItem) {\n        return upload.id;\n    }\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    entryComponents: [\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent,\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OpenFilePreview } from '../actions/commands';\r\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { FilePreviewOverlayComponent } from '../../preview/file-preview-overlay/file-preview-overlay.component';\r\nimport { DriveState } from '../drive-state';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class OverlayHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private overlay: OverlayPanel,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(OpenFilePreview))\r\n            .subscribe((action: OpenFilePreview) => {\r\n                const entries = action.entries || this.selectedEntries();\r\n                this.overlay.open(FilePreviewOverlayComponent, {\r\n                    position: 'center',\r\n                    origin: 'global',\r\n                    panelClass: 'file-preview-overlay-container',\r\n                    data: {entries: entries.slice()},\r\n                });\r\n            });\r\n    }\r\n\r\n    private selectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { DownloadEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { downloadFileFromUrl } from 'common/uploads/utils/download-file-from-url';\r\nimport { Settings } from 'common/core/config/settings.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DownloadHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private settings: Settings,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(DownloadEntries))\r\n            .subscribe((action: DownloadEntries) => {\r\n                downloadFileFromUrl(this.getDownloadUrl(action));\r\n            });\r\n    }\r\n\r\n    private getDownloadUrl(action: DownloadEntries): string {\r\n        const hashes = this.getEntryHashes(action.entries);\r\n        let base = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (action.link) base += `&shareable_link=${action.link.id}`;\r\n        if (action.password) base += `&password=${action.password}`;\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Get hashes string for specified entries or for currently selected entries.\r\n     */\r\n    private getEntryHashes(entries?: FileEntry[]): string {\r\n        if ( ! entries) {\r\n            entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n        }\r\n\r\n        return entries.map(entry => entry.hash).join(',');\r\n    }\r\n}\r\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'loading-toast',\n    templateUrl: './loading-toast.component.html',\n    styleUrls: ['./loading-toast.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingToastComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {message: string}) {}\n}\n","<mat-spinner [diameter]=\"30\"></mat-spinner>\r\n<span trans>{{ data.message }}</span>","import { Actions, ofAction, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { AddStar, HideLoadingToast, RemoveStar, RestoreTrashedEntries, ShowLoadingToast } from '../actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    FileDeleteSuccess,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated, NotEnoughSpaceError,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess\r\n} from '../actions/events';\r\nimport { Toast } from 'common/core/ui/toast.service';\r\nimport { LinkCopySuccess } from '../../sharing/links/share-link.state';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingToastComponent } from '../../messages/loading-toast/loading-toast.component';\r\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ToastHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private toast: Toast,\r\n        private store: Store,\r\n        private router: Router,\r\n    ) {\r\n        this.entriesDeleted();\r\n        this.entriesStarred();\r\n        this.entriesUnstarred();\r\n        this.entriesMoveFailed();\r\n        this.folderCreated();\r\n        this.entriesMoved();\r\n        this.entriesDeletedForever();\r\n        this.entriesRestoredFromTrash();\r\n        this.entryRenamed();\r\n        this.linkCopiedToClipboard();\r\n        this.notEnoughSpace();\r\n        this.loadingToast();\r\n    }\r\n\r\n    private entriesDeleted() {\r\n        this.actions$\r\n            .pipe(ofAction(FileDeleteSuccess))\r\n            .subscribe((action: FileDeleteSuccess) => {\r\n                const msg = {message: `Deleted :count items.`, replacements: {count: action.deletedFiles.length}};\r\n                this.toast.open(msg, {action: 'UNDO'})\r\n                    .onAction().subscribe(() => {\r\n                        this.store.dispatch(new RestoreTrashedEntries(action.deletedFiles));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesStarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(AddStar))\r\n            .subscribe((action: AddStar) => {\r\n                this.toast.open(`Star added.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new RemoveStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesUnstarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(RemoveStar))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.toast.open(`Star Removed.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new AddStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesMoved() {\r\n        this.actions$.pipe(ofAction(MoveEntriesSuccess))\r\n            .subscribe((action: MoveEntriesSuccess) => {\r\n                this.toast.open(\r\n                    {message: 'Moved :count items.', replacements: {count: action.entries.length}}\r\n                );\r\n            });\r\n    }\r\n\r\n    private entriesMoveFailed() {\r\n        this.actions$.pipe(ofAction(MoveEntriesFailed))\r\n            .subscribe(() => {\r\n                this.toast.open('There was an issue with moving selected items.');\r\n            });\r\n    }\r\n\r\n    private folderCreated() {\r\n        this.actions$.pipe(ofAction(NewFolderCreated))\r\n            .subscribe(() => {\r\n                this.toast.open('Folder created.');\r\n            });\r\n    }\r\n\r\n    private entriesDeletedForever() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesDeleteSuccess))\r\n            .subscribe((action: TrashedEntriesDeleteSuccess) => {\r\n                this.toast.open({\r\n                    message: `Permanently deleted :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entriesRestoredFromTrash() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesRestoreSuccess))\r\n            .subscribe((action: TrashedEntriesRestoreSuccess) => {\r\n                this.toast.open({\r\n                    message: `Restored :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entryRenamed() {\r\n        this.actions$.pipe(ofActionSuccessful(EntryRenamed))\r\n            .subscribe((action: EntryRenamed) => {\r\n                this.toast.open({\r\n                    message: `:oldName renamed to :newName`,\r\n                    replacements: {oldName: action.entry.name, newName: action.newName}\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    private linkCopiedToClipboard() {\r\n        this.actions$.pipe(ofActionSuccessful(LinkCopySuccess))\r\n            .subscribe(() => {\r\n                this.toast.open(`Link copied to clipboard.`);\r\n            });\r\n    }\r\n\r\n    private notEnoughSpace() {\r\n        this.actions$.pipe(ofActionSuccessful(NotEnoughSpaceError))\r\n            .subscribe(() => {\r\n                this.toast.open(`You are out of space. Try to delete some files.`, {action: 'Upgrade'})\r\n                    .onAction().subscribe(() => {\r\n                        this.router.navigate(['/billing/upgrade']);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadingToast() {\r\n        let toastRef: MatSnackBarRef<any>;\r\n\r\n        this.actions$.pipe(ofActionSuccessful(ShowLoadingToast))\r\n            .subscribe((action: ShowLoadingToast) => {\r\n                toastRef = this.toast.openComponent(LoadingToastComponent, {duration: 0, data: {message: action.message}});\r\n            });\r\n\r\n        this.actions$.pipe(ofActionSuccessful(HideLoadingToast))\r\n            .subscribe(() => {\r\n                if (toastRef) {\r\n                    toastRef.dismiss();\r\n                    toastRef = null;\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { CloseUploadsPanel, OpenUploadsPanel } from '../actions/commands';\r\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { UploadsPanelComponent } from '../../uploads/uploads-panel/uploads-panel.component';\r\nimport { OverlayPanelRef } from 'common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { OverlayPanelConfig } from 'common/core/ui/overlay-panel/overlay-panel-config';\nimport { Injectable } from \"@angular/core\";\r\n\r\nconst overlayConfig: OverlayPanelConfig = {\r\n    origin: 'global',\r\n    hasBackdrop: false,\r\n    position: {right: '10px', bottom: '10px'},\r\n    mobilePosition: {left: 0, bottom: 0}\r\n};\r\n\r\n@Injectable()\nexport class UploadPanelHandler {\r\n    private uploadPanelRef: OverlayPanelRef;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n        private overlayPanel: OverlayPanel,\r\n    ) {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(OpenUploadsPanel))\r\n            .subscribe(() => {\r\n                this.openUploadsPanel();\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(CloseUploadsPanel))\r\n            .subscribe(() => {\r\n               this.closeUploadsPanel();\r\n            });\r\n\r\n        this.currentUser.model$.subscribe(() => {\r\n            this.closeUploadsPanel();\r\n        });\r\n    }\r\n\r\n    public openUploadsPanel() {\r\n        if (this.uploadPanelRef) return;\r\n        this.uploadPanelRef = this.overlayPanel\r\n            .open(UploadsPanelComponent, overlayConfig);\r\n    }\r\n\r\n    private closeUploadsPanel() {\r\n        if ( ! this.uploadPanelRef) return;\r\n        this.uploadPanelRef.close();\r\n        this.uploadPanelRef = null;\r\n    }\r\n}\r\n","import { Actions, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { OpenConfirmDialog, OpenDialog } from '../actions/commands';\r\nimport { NgZone, Injectable } from '@angular/core';\r\nimport { Modal } from 'common/core/ui/dialogs/modal.service';\r\nimport { ConfirmModalComponent } from 'common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable()\nexport class DialogHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dialog: Modal,\r\n        private zone: NgZone,\r\n        private store: Store,\r\n    ) {\r\n        this.actions$.pipe(ofActionDispatched(OpenDialog))\r\n            .subscribe((action: OpenDialog) => {\r\n                this.dialog.open(action.dialog, action.data, action.config);\r\n            });\r\n\r\n        this.actions$.pipe(ofActionDispatched(OpenConfirmDialog))\r\n            .subscribe((action: OpenConfirmDialog) => {\r\n                this.openConfirmDialog(action);\r\n            });\r\n    }\r\n\r\n    private openConfirmDialog(action: OpenConfirmDialog) {\r\n        this.dialog.open(ConfirmModalComponent, action.data)\r\n            .beforeClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                return this.store.dispatch(action.confirmAction);\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharingPermissionsButtonComponent } from './sharing-permissions-button/sharing-permissions-button.component';\nimport { ShareDialogComponent } from './share-dialog/share-dialog.component';\nimport { EntriesAccessTableComponent } from './entries-access-table/entries-access-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ChipInputModule } from 'common/core/ui/chip-input/chip-input.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LinkOptionsComponent } from './links/link-options/link-options.component';\nimport { ShareLinkDialogComponent } from './share-link-dialog/share-link-dialog.component';\nimport { NoSharedEntriesComponent } from './no-shared-entries/no-shared-entries.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatDialogModule,\n        ChipInputModule,\n        MatIconModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n    ],\n    declarations: [\n        ShareDialogComponent,\n        EntriesAccessTableComponent,\n        SharingPermissionsButtonComponent,\n        LinkOptionsComponent,\n        ShareLinkDialogComponent,\n        NoSharedEntriesComponent,\n    ],\n    exports: [\n        NoSharedEntriesComponent,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class SharingModule {\n}\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { ReloadPageEntries } from '../actions/commands';\r\nimport { DriveDomCacheService } from '../../interactions/drive-dom-cache.service';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ResetScrollHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private domCache: DriveDomCacheService\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(ReloadPageEntries))\r\n            .subscribe(() => {\r\n                this.domCache.scrollCont.scrollTo({top: 0});\r\n            });\r\n    }\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DeselectAllEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { filter } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class PageChangeHandler {\r\n    constructor(\r\n        private store: Store\r\n    ) {\r\n        this.store.select(DriveState.activePage)\r\n            .pipe(filter(page => !!page))\r\n            .subscribe(() => {\r\n                this.store.dispatch(new DeselectAllEntries());\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RouterNavigation, RouterState } from '@ngxs/router-plugin';\r\nimport {\r\n    FolderPageOpened,\r\n    RecentEntriesPageOpened, SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    TrashPageOpened\r\n} from '../actions/events';\r\nimport { DrivePageType } from '../models/available-pages';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CurrentUser } from 'common/auth/current-user';\nimport { Injectable } from \"@angular/core\";\r\n\r\nconst LINK_PREVIEW_PAGE = 's';\r\n\r\n@Injectable()\nexport class PageLoadHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n    ) {\r\n        this.actions$\r\n            .pipe(\r\n                ofActionSuccessful(RouterNavigation),\r\n                filter((action: RouterNavigation) => action.event.urlAfterRedirects.indexOf('drive') > -1),\r\n                filter(() => this.currentUser.isLoggedIn()),\r\n            )\r\n            .subscribe(() => {\r\n                const action = this.getPageLoadAction();\r\n                if (action) this.store.dispatch(action);\r\n            });\r\n    }\r\n\r\n    private getPageLoadAction() {\r\n        const params = this.getPageUriParams();\r\n\r\n        switch (params.pageName) {\r\n            case DRIVE_PAGE_NAMES.RECENT:\r\n                return new RecentEntriesPageOpened();\r\n            case DRIVE_PAGE_NAMES.TRASH:\r\n                return new TrashPageOpened();\r\n            case DRIVE_PAGE_NAMES.SHARES:\r\n                return new SharesFolderOpened();\r\n            case DRIVE_PAGE_NAMES.STARRED:\r\n                return new StarredPageOpened();\r\n            case DRIVE_PAGE_NAMES.SEARCH:\r\n                const state = this.store.selectSnapshot(RouterState.state),\r\n                    search = state.root.firstChild.queryParams;\r\n                return new SearchPageOpened({type: search.type, query: search.query});\r\n            case LINK_PREVIEW_PAGE:\r\n                return null;\r\n            default:\r\n                return new FolderPageOpened(params.folderHash || 'root');\r\n        }\r\n    }\r\n\r\n    private getPageUriParams() {\r\n        // remove query params\r\n        const uri = this.store.selectSnapshot(RouterState.url).split('?')[0];\r\n\r\n        // current drive uri parts\r\n        let parts = uri.split('/');\r\n\r\n        // remove empty parts\r\n        parts = parts.filter(x => !!x);\r\n\r\n        return {pageName: parts[1] as DrivePageType|string, folderHash: parts[2]};\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RemoveEntries, RemoveStar } from '../actions/commands';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DriveState } from '../drive-state';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class RemoveStarHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(RemoveStar))\r\n            .pipe(filter(() => {\r\n                const name = this.store.selectSnapshot(DriveState.activePage).name;\r\n                return name === DRIVE_PAGE_NAMES.RECENT;\r\n            }))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.store.dispatch(new RemoveEntries(action.entries));\r\n            });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ContextMenuDirective} from '@common/core/ui/context-menu/context-menu.directive';\n\n\n@NgModule({\n    declarations: [\n        ContextMenuDirective,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ContextMenuDirective,\n    ]\n})\nexport class ContextMenuModule {\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FoldersTreeComponent } from './sidebar/folders-tree/folders-tree.component';\nimport { FilesGridComponent } from './files/components/files-grid/files-grid.component';\nimport { FileThumbnailComponent } from './files/components/file-thumbnail/file-thumbnail.component';\nimport { FilesGridItemComponent } from './files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { DriveHammerInteractionsDirective } from './interactions/drive-hammer-interactions.directive';\nimport { FileIconComponent } from './files/components/file-icon/file-icon.component';\nimport { AVAILABLE_CONTEXT_MENUS } from 'common/core/ui/context-menu/available-context-menus';\nimport { DRIVE_CONTEXT_MENUS } from './context-actions/drive-context-menus';\nimport { DriveContextMenuComponent } from './context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { SidebarActionButtonsComponent } from './sidebar/sidebar-action-buttons/sidebar-action-buttons.component';\nimport { CrupdateFolderDialogComponent } from './folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { RenameEntryDialogComponent } from './entries/rename-entry-dialog/rename-entry-dialog.component';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { EntryBreadcrumbsComponent } from './drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component';\nimport { UploadsPanelComponent } from './uploads/uploads-panel/uploads-panel.component';\nimport { UploadsModule } from 'common/uploads/uploads.module';\nimport { MoveEntriesDialogComponent } from './entries/move-entries-dialog/move-entries-dialog.component';\nimport { FolderDropTargetDirective } from './interactions/drop-targets/folder-drop-target.directive';\nimport { DriveToolbarComponent } from './drive-toolbar/drive-toolbar.component';\nimport { ToolbarActionsComponent } from './drive-toolbar/toolbar-actions/toolbar-actions.component';\nimport { MainSearchbarComponent } from './search/main-searchbar/main-searchbar.component';\nimport { UploadDropzoneComponent } from './uploads/upload-dropzone/upload-dropzone.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { DetailsPanelComponent } from './details-sidebar/details-panel/details-panel.component';\nimport { FilePreviewOverlayComponent } from './preview/file-preview-overlay/file-preview-overlay.component';\nimport { FilePreviewModule } from 'common/file-preview/file-preview.module';\nimport { FilePreviewToolbarComponent } from './preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport { OverlayHandler } from './state/handlers/overlay-handler';\nimport { DownloadHandler } from './state/handlers/donwlod-handler';\nimport { ToastHandler } from './state/handlers/toast-handler';\nimport { UploadPanelHandler } from './state/handlers/upload-panel-handler';\nimport { DialogHandler } from './state/handlers/dialog-handler';\nimport { SharingModule } from './sharing/sharing.module';\nimport { DetailsSidebarComponent } from './details-sidebar/details-sidebar.component';\nimport { FileListHeaderComponent } from './header/file-list-header/file-list-header.component';\nimport { DriveInfiniteScrollDirective } from './interactions/drive-infinite-scroll.directive';\nimport { ResetScrollHandler } from './state/handlers/reset-scroll-handler';\nimport { FilesListComponent } from './files/components/files-list/files-list.component';\nimport { ToggleSelectedClassDirective } from './interactions/toggle-selected-class.directive';\nimport { PageChangeHandler } from './state/handlers/page-change-handler';\nimport { PageLoadHandler } from './state/handlers/page-load-handler';\nimport { RemoveStarHandler } from './state/handlers/remove-star-handler';\nimport { NoFolderEntriesComponent } from './messages/no-folder-entries/no-folder-entries.component';\nimport { NoTrashedEntriesComponent } from './messages/no-trashed-entries/no-trashed-entries.component';\nimport { NoStarredEntriesComponent } from './messages/no-starred-entries/no-starred-entries.component';\nimport { NoRecentEntriesComponent } from './messages/no-recent-entries/no-recent-entries.component';\nimport { UploadsPanelItemComponent } from './uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { ShareDialogState } from './sharing/state/share-dialog.state';\nimport { ShareLinkState } from './sharing/links/share-link.state';\nimport { DriveState } from './state/drive-state';\nimport { Settings } from 'common/core/config/settings.service';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { AvailableSpaceIndicatorComponent } from './sidebar/available-space-indicator/available-space-indicator.component';\nimport { LoadingToastComponent } from './messages/loading-toast/loading-toast.component';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { LinkPreviewPasswordPanelComponent } from './preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component';\nimport { ContextActionsContainerComponent } from './context-actions/components/context-actions-container/context-actions-container.component';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from './upload-input-config';\nimport { NoSearchEntriesComponent } from './messages/no-search-entries/no-search-entries.component';\nimport { EntryDescriptionPanelComponent } from './details-sidebar/details-panel/entry-description-panel/entry-description-panel.component';\nimport { FolderPreviewComponent } from './preview/folder-preview/folder-preview.component';\nimport { EntriesSortButtonComponent } from './header/entries-sort-button/entries-sort-button.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { ContextMenuModule } from '@common/core/ui/context-menu/context-menu.module';\nimport { AdHostModule } from '@common/core/ui/ad-host/ad-host.module';\n\nexport const STATE_HANDLERS = [\n    OverlayHandler,\n    DownloadHandler,\n    ToastHandler,\n    UploadPanelHandler,\n    DialogHandler,\n    ResetScrollHandler,\n    PageChangeHandler,\n    PageLoadHandler,\n    RemoveStarHandler,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UploadsModule,\n        DriveRoutingModule,\n        FilePreviewModule,\n        FormsModule,\n        SharingModule,\n        MaterialNavbarModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ReactiveFormsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        ContextMenuModule,\n        AdHostModule,\n\n        // material\n        MatSidenavModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatTableModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n\n        // state\n        NgxsModule.forFeature([\n            DriveState,\n            ShareDialogState,\n            ShareLinkState,\n        ]),\n    ],\n    declarations: [\n        DriveComponent,\n        SidebarComponent,\n        FoldersTreeComponent,\n        FilesGridComponent,\n        FileThumbnailComponent,\n        DriveHammerInteractionsDirective,\n        FilesGridItemComponent,\n        FileIconComponent,\n        DriveContextMenuComponent,\n        SidebarActionButtonsComponent,\n        CrupdateFolderDialogComponent,\n        RenameEntryDialogComponent,\n        EntryDragPreviewComponent,\n        DriveToolbarComponent,\n        EntryBreadcrumbsComponent,\n        UploadsPanelComponent,\n        MoveEntriesDialogComponent,\n        FolderDropTargetDirective,\n        ToolbarActionsComponent,\n        MainSearchbarComponent,\n        UploadDropzoneComponent,\n        NoFolderEntriesComponent,\n        NoTrashedEntriesComponent,\n        NoStarredEntriesComponent,\n        NoRecentEntriesComponent,\n        NoSearchEntriesComponent,\n        EntriesContainerComponent,\n        DetailsSidebarComponent,\n        DetailsPanelComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n        FileListHeaderComponent,\n        DriveInfiniteScrollDirective,\n        FilesListComponent,\n        ToggleSelectedClassDirective,\n        UploadsPanelItemComponent,\n        AvailableSpaceIndicatorComponent,\n        LoadingToastComponent,\n        LinkPreviewContainerComponent,\n        LinkPreviewPasswordPanelComponent,\n        ContextActionsContainerComponent,\n        EntryDescriptionPanelComponent,\n        FolderPreviewComponent,\n        EntriesSortButtonComponent,\n    ],\n    providers: [\n        // fix angular lazy loaded entry components issue\n        ContextMenu,\n        OverlayPanel,\n        PreviewFilesService,\n        Toast,\n\n        // handlers\n        ...STATE_HANDLERS,\n        {\n            provide: AVAILABLE_CONTEXT_MENUS,\n            useValue: DRIVE_CONTEXT_MENUS,\n            multi: true,\n        },\n        {\n            provide: DRIVE_UPLOAD_INPUT_CONFIG,\n            deps: [Settings],\n            useFactory: (settings) => {\n                const uploadInputConfig: UploadInputConfig = {multiple: true};\n\n                const extensions = settings.getJson('drive.validation.allowed_extensions');\n                if (extensions) {\n                    uploadInputConfig.extensions = extensions.map(ext => '.' + ext);\n                }\n\n                return uploadInputConfig;\n            },\n        },\n    ]\n})\nexport class DriveModule {\n    constructor(private injector: Injector) {\n        STATE_HANDLERS.forEach(handler => this.injector.get(handler));\n    }\n}\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r16.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r16.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const tab_r16 = ctx.$implicit; const i_r17 = ctx.index; const ctx_r23 = ɵngcc0.ɵɵnextContext(); const _r12 = ɵngcc0.ɵɵreference(1); return ctx_r23._handleClick(tab_r16, _r12, i_r17); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r16 = ctx.$implicit;\n    const i_r17 = ctx.index;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r13.selectedIndex == i_r17);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r13._getTabLabelId(i_r17))(\"disabled\", tab_r16.disabled)(\"matRippleDisabled\", tab_r16.disabled || ctx_r13.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r13._getTabIndex(tab_r16, i_r17))(\"aria-posinset\", i_r17 + 1)(\"aria-setsize\", ctx_r13._tabs.length)(\"aria-controls\", ctx_r13._getTabContentId(i_r17))(\"aria-selected\", ctx_r13.selectedIndex == i_r17)(\"aria-label\", tab_r16.ariaLabel || null)(\"aria-labelledby\", !tab_r16.ariaLabel && tab_r16.ariaLabelledby ? tab_r16.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r16.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r16.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r25 = ctx.$implicit;\n    const i_r26 = ctx.index;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r15.selectedIndex == i_r26);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r15._getTabContentId(i_r26))(\"content\", tab_r25.content)(\"position\", tab_r25.position)(\"origin\", tab_r25.origin)(\"animationDuration\", ctx_r15.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r15._getTabLabelId(i_r26));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"]}