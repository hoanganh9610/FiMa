{"version":3,"sources":["node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","node_modules/lodash/_listCacheHas.js","node_modules/lodash/_cloneArrayBuffer.js","node_modules/copy-to-clipboard/index.js","node_modules/lodash/property.js","node_modules/lodash/_initCloneObject.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","node_modules/lodash/isSymbol.js","src/common/core/ui/confirm-modal/confirm-modal.component.ts","src/common/core/ui/confirm-modal/confirm-modal.component.html","node_modules/lodash/isArguments.js","node_modules/lodash/_stackSet.js","node_modules/lodash/stubArray.js","node_modules/lodash/isSet.js","node_modules/lodash/_SetCache.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","node_modules/lodash/_baseIsNaN.js","node_modules/lodash/_coreJsData.js","node_modules/lodash/_setCacheHas.js","node_modules/lodash/_toSource.js","node_modules/lodash/_basePropertyDeep.js","node_modules/lodash/memoize.js","node_modules/lodash/_Hash.js","node_modules/lodash/_hasPath.js","node_modules/lodash/_castPath.js","node_modules/lodash/_cloneBuffer.js","src/common/uploads/formatted-file-size.pipe.ts","node_modules/lodash/_isPrototype.js","node_modules/lodash/_baseProperty.js","node_modules/lodash/_stackClear.js","node_modules/lodash/keys.js","node_modules/lodash/_nativeKeysIn.js","node_modules/lodash/_mapToArray.js","node_modules/lodash/_toKey.js","node_modules/lodash/_isKey.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","node_modules/lodash/_baseKeys.js","node_modules/lodash/_getRawTag.js","node_modules/lodash/stubFalse.js","node_modules/lodash/cloneDeep.js","node_modules/lodash/_arrayPush.js","src/common/core/ui/no-results-message/no-results-message.component.ts","src/common/core/ui/no-results-message/no-results-message.component.html","node_modules/lodash/_isStrictComparable.js","node_modules/lodash/_strictIndexOf.js","node_modules/lodash/_getNative.js","node_modules/lodash/isBuffer.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js","node_modules/lodash/_baseAssignIn.js","src/common/uploads/directives/upload-button.directive.ts","node_modules/lodash/_isMasked.js","node_modules/toggle-selection/index.js","node_modules/lodash/_copySymbolsIn.js","node_modules/lodash/_isKeyable.js","node_modules/lodash/isObjectLike.js","node_modules/lodash/_getAllKeysIn.js","node_modules/lodash/_baseMatchesProperty.js","node_modules/lodash/_stringToPath.js","src/common/uploads/uploads.module.ts","src/common/core/ui/chip-input/chip-input.component.ts","src/common/core/ui/chip-input/chip-input.component.html","node_modules/lodash/_baseIsMap.js","node_modules/lodash/isObject.js","node_modules/lodash/_mapCacheSet.js","node_modules/lodash/_equalByTag.js","node_modules/lodash/_Promise.js","node_modules/lodash/_hashDelete.js","node_modules/lodash/_memoizeCapped.js","node_modules/lodash/_matchesStrictComparable.js","src/common/core/ui/no-results-message/no-results-message.module.ts","node_modules/lodash/_Uint8Array.js","node_modules/lodash/_mapCacheGet.js","node_modules/lodash/_hashSet.js","node_modules/lodash/_baseIsArguments.js","node_modules/lodash/_baseHasIn.js","node_modules/lodash/_listCacheClear.js","node_modules/lodash/_objectToString.js","node_modules/lodash/_baseFindIndex.js","node_modules/lodash/_root.js","node_modules/lodash/_stackDelete.js","node_modules/lodash/_baseUniq.js","node_modules/lodash/_arrayFilter.js","node_modules/lodash/_getPrototype.js","node_modules/lodash/isArrayLike.js","node_modules/lodash/_assignValue.js","node_modules/lodash/_getSymbols.js","node_modules/lodash/_baseIsNative.js","node_modules/lodash/_getValue.js","node_modules/lodash/_baseGetTag.js","node_modules/lodash/_defineProperty.js","node_modules/lodash/_getMatchData.js","node_modules/lodash/_baseClone.js","node_modules/lodash/_WeakMap.js","node_modules/lodash/_copyArray.js","node_modules/lodash/_baseKeysIn.js","node_modules/lodash/_getMapData.js","node_modules/lodash/_arraySome.js","node_modules/lodash/_getTag.js","node_modules/lodash/_baseIndexOf.js","node_modules/lodash/_hashClear.js","node_modules/lodash/_baseTimes.js","node_modules/lodash/_nativeKeys.js","node_modules/lodash/_copySymbols.js","node_modules/lodash/_stackHas.js","node_modules/lodash/_freeGlobal.js","src/common/core/ui/chip-input/chip-input.module.ts","node_modules/lodash/_baseAssign.js","node_modules/lodash/_cloneDataView.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","node_modules/lodash/_ListCache.js","node_modules/lodash/_arrayIncludesWith.js","node_modules/lodash/isEqual.js","node_modules/lodash/_nativeCreate.js","(webpack)/buildin/module.js","node_modules/lodash/isArray.js","node_modules/lodash/_listCacheSet.js","node_modules/lodash/_baseMatches.js","node_modules/lodash/_baseGet.js","node_modules/lodash/_listCacheDelete.js","src/common/core/services/local-storage.service.ts","node_modules/lodash/_cloneRegExp.js","node_modules/lodash/_arrayLikeKeys.js","node_modules/lodash/isTypedArray.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","node_modules/lodash/_baseIsTypedArray.js","node_modules/lodash/_createSet.js","node_modules/lodash/_baseCreate.js","node_modules/lodash/toString.js","node_modules/lodash/_MapCache.js","node_modules/lodash/_baseIsEqualDeep.js","node_modules/lodash/_arrayMap.js","node_modules/lodash/_Map.js","node_modules/lodash/_hashHas.js","node_modules/lodash/_mapCacheClear.js","node_modules/lodash/_baseGetAllKeys.js","node_modules/lodash/_Stack.js","node_modules/lodash/_setCacheAdd.js","node_modules/lodash/_stackGet.js","node_modules/lodash/_arrayEach.js","node_modules/rxjs/_esm2015/internal/operators/throttle.js","node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","node_modules/lodash/hasIn.js","node_modules/lodash/_baseAssignValue.js","src/common/core/ui/format-pipes/formatted-date.pipe.ts","node_modules/lodash/_arrayIncludes.js","node_modules/lodash/_copyObject.js","node_modules/lodash/_mapCacheDelete.js","src/common/core/ui/format-pipes/format-pipes.module.ts","node_modules/lodash/_overArg.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","node_modules/lodash/isFunction.js","node_modules/lodash/eq.js","node_modules/lodash/_baseIsMatch.js","node_modules/lodash/keysIn.js","node_modules/lodash/_nodeUtil.js","node_modules/lodash/get.js","node_modules/lodash/_Symbol.js","node_modules/lodash/_getSymbolsIn.js","node_modules/lodash/_equalArrays.js","node_modules/lodash/_cloneSymbol.js","node_modules/lodash/_mapCacheHas.js","node_modules/lodash/uniqBy.js","node_modules/lodash/_getAllKeys.js","node_modules/lodash/_setToArray.js","src/common/uploads/upload-progress-bar/upload-progress-bar.component.ts","src/common/uploads/upload-progress-bar/upload-progress-bar.component.html","node_modules/lodash/_baseUnary.js","node_modules/lodash/_equalObjects.js","node_modules/lodash/isLength.js","node_modules/lodash/_listCacheGet.js","node_modules/lodash/_DataView.js","node_modules/lodash/_hashGet.js","node_modules/lodash/_baseIteratee.js","node_modules/lodash/noop.js","src/app/drive/folders/api/folders-api.service.ts","src/app/drive/drive-entry-api.service.ts","src/app/drive/drive-urls.service.ts","src/app/drive/state/actions/events.ts","src/app/drive/uploads/drive-upload-validator.ts","src/app/drive/upload-input-config.ts","src/app/drive/state/drive-state.ts","src/app/drive/files/components/file-icon/file-icon.component.ts","src/app/drive/folders/api/folders-api-routes.enum.ts","src/app/drive/folders/root-folder.ts","src/app/drive/state/actions/commands.ts","src/app/drive/state/models/drive-page.ts","src/app/drive/state/models/drive-state-model-defaults.ts","src/app/drive/state/models/drive-state-model.ts","src/app/drive/messages/loading-toast/loading-toast-messages.ts","src/app/drive/entries/supported-entry-types.ts","src/common/core/utils/kebab-case.ts","src/app/drive/files/components/file-icon/file-icon.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.html","src/app/drive/interactions/entry-drag-preview/entry-drag-preview.component.ts","src/app/drive/interactions/drive-dom-cache.service.ts","src/app/drive/search/search-file-types.ts","src/common/core/types/pagination/pagination-response.ts","src/app/drive/search/main-searchbar/main-searchbar.component.html","src/app/drive/search/main-searchbar/main-searchbar.component.ts","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.html","src/app/drive/folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component.ts","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.ts","src/app/drive/interactions/drop-targets/folder-drop-target.directive.ts","src/app/drive/interactions/drop-targets/base-drop-target.ts","node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/sidebar-action-buttons/sidebar-action-buttons.component.html","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tree.js","src/app/drive/sidebar/folders-tree/folders-tree.service.ts","src/common/core/ui/context-menu/context-menu.directive.ts","src/common/core/ui/context-menu/context-menu.service.ts","src/common/core/ui/context-menu/available-context-menus.ts","src/common/core/ui/context-menu/context-menu-ref.ts","src/common/core/ui/context-menu/context-menu-data.ts","src/app/drive/sidebar/folders-tree/folders-tree.component.html","src/app/drive/sidebar/folders-tree/folders-tree.component.ts","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.html","src/app/drive/sidebar/available-space-indicator/available-space-indicator.component.ts","src/app/drive/sidebar/sidebar.component.ts","src/app/drive/sidebar/sidebar.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.html","src/app/drive/details-sidebar/details-panel/entry-description-panel/entry-description-panel.component.ts","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.html","src/app/drive/files/components/file-thumbnail/file-thumbnail.component.ts","src/app/drive/details-sidebar/details-panel/details-panel.component.html","src/app/drive/details-sidebar/details-panel/details-panel.component.ts","src/app/drive/details-sidebar/details-sidebar.component.html","src/app/drive/details-sidebar/details-sidebar.component.ts","src/app/drive/interactions/drive-hammer-interactions.directive.ts","src/app/drive/interactions/drag-entry.service.ts","src/app/drive/interactions/files-drag-select.service.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.ts","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.ts","src/app/drive/files/components/files-grid/files-grid-item/files-grid-item.component.html","src/app/drive/context-actions/components/drive-context-menu/drive-context-menu.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.html","src/app/drive/drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.ts","src/app/drive/drive-toolbar/drive-toolbar.component.html","src/app/drive/entries/available-sorts.ts","src/app/drive/header/entries-sort-button/entries-sort-button.component.html","src/app/drive/header/entries-sort-button/entries-sort-button.component.ts","src/app/drive/context-actions/drive-context-actions.ts","src/app/drive/context-actions/actions/trash-actions.ts","src/app/drive/sharing/links/shareable-links-api.service.ts","src/app/drive/sharing/links/share-link.state.ts","src/app/drive/sharing/links/link-options/link-options.component.html","src/app/drive/sharing/links/link-options/link-options.component.ts","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.html","src/app/drive/sharing/share-link-dialog/share-link-dialog.component.ts","src/app/drive/sharing/shares-api.service.ts","src/app/drive/sharing/state/share-dialog.state.ts","src/common/core/utils/share-link-socially.ts","src/app/drive/permissions/drive-entry-permissions.ts","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.html","src/app/drive/sharing/sharing-permissions-button/sharing-permissions-button.component.ts","src/app/drive/sharing/entries-access-table/entries-access-table.component.html","src/app/drive/sharing/entries-access-table/entries-access-table.component.ts","src/app/drive/sharing/share-dialog/share-dialog.component.html","src/app/drive/sharing/share-dialog/share-dialog.component.ts","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.html","src/app/drive/entries/rename-entry-dialog/rename-entry-dialog.component.ts","src/app/drive/context-actions/actions/shares-actions.ts","src/app/drive/context-actions/actions/folder-actions.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.ts","src/app/drive/context-actions/actions/entry-actions.ts","src/app/drive/context-actions/actions/trash-page-actions.ts","src/app/drive/entries/move-entries-dialog/move-entries-dialog.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.html","src/app/drive/context-actions/components/context-actions-container/context-actions-container.component.ts","src/app/drive/interactions/toggle-selected-class.directive.ts","src/app/drive/header/file-list-header/file-list-header.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.ts","src/app/drive/drive-toolbar/toolbar-actions/toolbar-actions.component.html","src/app/drive/header/file-list-header/file-list-header.component.html","src/common/uploads/utils/read-uploaded-folders.ts","src/common/uploads/directives/upload-dropzone.directive.ts","src/app/drive/interactions/drive-infinite-scroll.directive.ts","src/common/core/ui/infinite-scroll/infinite.scroll.ts","src/app/drive/drive.component.ts","src/common/core/keybinds/keybinds.service.ts","src/app/drive/drive.component.html","src/common/core/keybinds/keycodes.enum.ts","src/app/drive/files/components/files-grid/files-grid.component.html","src/app/drive/files/components/files-grid/files-grid.component.ts","src/app/drive/files/components/files-list/files-list.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.ts","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.ts","src/app/drive/messages/no-starred-entries/no-starred-entries.component.ts","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.ts","src/app/drive/files/components/files-list/files-list.component.ts","src/app/drive/messages/no-folder-entries/no-folder-entries.component.ts","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.ts","src/app/drive/messages/no-recent-entries/no-recent-entries.component.html","src/app/drive/messages/no-trashed-entries/no-trashed-entries.component.html","src/app/drive/messages/no-starred-entries/no-starred-entries.component.html","src/app/drive/sharing/no-shared-entries/no-shared-entries.component.html","src/app/drive/messages/no-search-entries/no-search-entries.component.html","src/app/drive/uploads/upload-dropzone/upload-dropzone.component.html","src/app/drive/messages/no-folder-entries/no-folder-entries.component.html","src/app/drive/entries/entries-container/entries-container.component.html","src/app/drive/entries/entries-container/entries-container.component.ts","src/common/file-preview/default-preview/default-preview.component.ts","src/common/file-preview/base-file-preview.ts","src/common/file-preview/current-preview-file.ts","src/common/file-preview/preview-url-transformer.ts","src/common/file-preview/default-preview/default-preview.component.html","src/common/file-preview/text-preview/text-preview.component.html","src/common/file-preview/text-preview/text-preview.component.ts","src/common/file-preview/audio-preview/audio-preview.component.html","src/common/file-preview/audio-preview/audio-preview.component.ts","src/common/file-preview/video-preview/video-preview.component.html","src/common/file-preview/video-preview/video-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.ts","src/common/file-preview/pdf-preview/pdf-preview.component.ts","src/common/file-preview/image-preview/image-preview.component.html","src/common/file-preview/pdf-preview/pdf-preview.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.html","src/common/file-preview/google-docs-viewer/google-docs-viewer.component.ts","src/common/file-preview/preview-files.service.ts","src/common/file-preview/available-previews.ts","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.html","src/app/drive/preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.html","src/app/drive/preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component.ts","src/common/file-preview/preview-container/preview-container.component.html","src/common/file-preview/preview-container/preview-container.component.ts","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.html","src/app/drive/preview/file-preview-overlay/file-preview-overlay.component.ts","src/app/drive/preview/folder-preview/folder-preview.component.html","src/app/drive/preview/folder-preview/folder-preview.component.ts","src/app/drive/preview/link-preview-container/link-preview-container.component.html","src/app/drive/preview/link-preview-container/link-preview-container.component.ts","src/app/drive/drive-routing.module.ts","node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","src/app/drive/context-actions/drive-context-menus.ts","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.html","src/app/drive/uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component.ts","src/app/drive/uploads/uploads-panel/uploads-panel.component.html","src/app/drive/uploads/uploads-panel/uploads-panel.component.ts","src/app/drive/state/handlers/donwlod-handler.ts","src/app/drive/state/handlers/overlay-handler.ts","src/common/file-preview/file-preview.module.ts","src/app/drive/state/handlers/toast-handler.ts","src/app/drive/messages/loading-toast/loading-toast.component.ts","src/app/drive/state/handlers/upload-panel-handler.ts","src/app/drive/state/handlers/dialog-handler.ts","src/app/drive/state/handlers/remove-star-handler.ts","src/app/drive/state/handlers/page-load-handler.ts","src/app/drive/state/handlers/page-change-handler.ts","src/app/drive/state/handlers/reset-scroll-handler.ts","src/app/drive/sharing/sharing.module.ts","src/common/core/ui/context-menu/context-menu.module.ts","src/app/drive/drive.module.ts","src/common/uploads/utils/download-file-from-url.ts","src/app/drive/messages/loading-toast/loading-toast.component.html","node_modules/lodash/_baseIsSet.js","node_modules/lodash/_baseIsEqual.js","node_modules/lodash/_isIndex.js","node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","node_modules/lodash/_initCloneByTag.js","node_modules/lodash/_cacheHas.js","node_modules/lodash/_assocIndexOf.js","node_modules/lodash/_Set.js","node_modules/lodash/_initCloneArray.js","node_modules/lodash/_cloneTypedArray.js","node_modules/lodash/isMap.js","node_modules/lodash/identity.js","node_modules/lodash/_baseToString.js"],"names":["_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","args","super","_sticky","this","_hasStickyChanged","hasStickyChanged","v","prevValue","CdkFooterCellDef","CdkHeaderCellDef","CdkCellDef","CdkColumnDef","BaseRowDef","CdkCell","CdkFooterCell","CdkHeaderCell","CdkHeaderRowDef","CdkRow","CdkFooterRow","CdkHeaderRow","CdkCellOutlet","CdkRowDef","CdkFooterRowDef","CDK_TABLE","TEXT_COLUMN_OPTIONS","template","ɵfac","t","ɵdir","type","selectors","_CdkColumnDefBase","CdkColumnDefBase","_table","_stickyEnd","_name","cssClassFriendlyName","replace","contentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","hostAttrs","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","column","_CdkHeaderRowDefBase","CdkHeaderRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDefBase","when","_viewContainer","mostRecentCellOutlet","ɵcmp","decls","vars","consts","directives","encapsulation","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","positions","rows","stickyDirections","row","nodeType","ELEMENT_NODE","_removeStickyStyle","i","children","length","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","element","dir","style","zIndex","_getCalculatedZIndex","remove","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","push","width","widths","nextPosition","getTableUnknownColumnError","id","Error","CdkTable","FooterRowOutlet","HeaderRowOutlet","DataRowOutlet","viewContainer","_changeDetectorRef","_elementRef","role","_dir","_document","_platform","_onDestroy","Subject","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","BehaviorSubject","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","data","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","clear","_headerRowOutlet","_footerRowOutlet","next","complete","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","get","move","_updateRowIndexContext","forEachIdentityChange","context","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","forEach","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","Array","from","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","renderRow","cache","_getRowDefs","cachedRenderRows","shift","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","unsubscribe","_dataSource","dataStream","connect","isObservable","isArray","of","pipe","takeUntil","subscribe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","JSON","stringify","renderIndex","outlet","index","createEmbeddedView","_getCellTemplates","cellTemplate","markForCheck","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","tag","section","createElement","appendChild","stickyCheckReducer","d","value","isBrowser","change","items","_trackByFn","fn","console","warn","_switchDataSource","viewQuery","exportAs","ngContentSelectors","array","concat","CdkTableModule","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","ɵmod","ɵinj","factory","MatTextColumn_th_1_Template","ctx_r4","MatTextColumn_td_2_Template","data_r6","ctx_r5","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderRowDef","MatCell","MatFooterCell","MatHeaderCell","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatTextColumn","MatTableModule","arguments","ɵMatTable_BaseFactory","styles","ɵMatCellDef_BaseFactory","ɵMatHeaderCellDef_BaseFactory","ɵMatFooterCellDef_BaseFactory","ɵMatColumnDef_BaseFactory","ɵMatHeaderRowDef_BaseFactory","ɵMatFooterRowDef_BaseFactory","ɵMatRowDef_BaseFactory","ɵMatHeaderRow_BaseFactory","ɵMatFooterRow_BaseFactory","ɵMatRow_BaseFactory","ɵMatTextColumn_BaseFactory","imports","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","Subscription","EMPTY","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","indexOf","_updateChangeSubscription","sortChange","_sort","merge","initialized","pageChange","_paginator","page","filteredData","combineLatest","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","assocIndexOf","module","exports","__data__","Uint8Array","arrayBuffer","result","constructor","byteLength","deselectCurrent","clipboardToIE11Formatting","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","textContent","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","window","clearData","setData","onCopy","body","selectNodeContents","addRange","execCommand","err","error","copyKey","test","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","baseProperty","basePropertyDeep","isKey","toKey","path","baseCreate","getPrototype","isPrototype","object","MatAutocomplete_ng_template_0_Template","_classList","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","_MatAutocompleteMixinBase","MatAutocompleteBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","autoActiveFirstOption","MatAutocomplete","defaults","_activeOptionChanges","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","withWrap","emit","toArray","_setVisibility","scrollTop","panel","_setVisibilityClasses","event","split","className","optionGroups","disableRipple","panelWidth","outputs","changeDetection","MatAutocompleteOrigin","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_formField","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","onStable","asObservable","_scrollStrategy","_getWindow","runOutsideAngular","_isInsideShadowRoot","_positionStrategy","_setStrategyPositions","updatePosition","removeEventListener","_destroyPanel","_attachOverlay","_floatLabel","_resetLabel","_overlayRef","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","composedPath","target","formField","contains","overlayElement","_setTriggerValue","isDisabled","disabled","keyCode","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","selected","deselect","overlayRef","setOrigin","_getConnectedElement","updateSize","_getPanelWidth","_portal","_getOverlayConfig","keydownEvents","altKey","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPosition","originX","originY","overlayX","overlayY","abovePosition","panelClass","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","setActiveItem","readOnly","_a","defaultView","tabOut","_getOutsideClickStream","detachments","hostVars","hostBindings","_handleFocus","$event","_handleInput","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","providers","baseGetTag","isObjectLike","ConfirmModalComponent","dialogRef","i18n","settings","close","title","bodyBold","ok","cancel","confirm","baseIsArguments","objectProto","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","call","ListCache","MapCache","pairs","LARGE_ARRAY_SIZE","size","baseIsSet","baseUnary","nodeUtil","nodeIsSet","isSet","setCacheAdd","setCacheHas","SetCache","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","checked","_MatSlideToggleMixinBase","_focusMonitor","tabIndex","_ngZone","_animationMode","_","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","toggleChange","dragChange","parseInt","monitor","focusOrigin","_inputElement","stopMonitoring","_emitChangeEvent","focusVia","_thumbEl","_thumbBarEl","color","required","_onChangeEvent","_onInputClick","_onLabelTextChange","_r4","_r8","inputId","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","root","funcToString","Function","func","baseGet","memoize","resolver","TypeError","memoized","apply","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","entry","castPath","isIndex","isLength","hasFunc","stringToPath","freeExports","freeModule","Buffer","allocUnsafe","buffer","isDeep","copy","FormattedFileSizePipe","precision","bytes","isNaN","String","isFinite","Ctor","arrayLikeKeys","baseKeys","isArrayLike","isSymbol","reIsDeepProp","reIsPlainProp","_MatChipMixinBase","MatChipAvatar","MatChipTrailingIcon","MatChip","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_selected","_selectable","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","hasAttribute","tagName","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","isUserInput","removable","selectable","toggleSelected","run","coercedValue","_value","MatChipRemove","avatar","trailingIcon","removeIcon","_handleClick","_blur","ariaSelected","_parentChip","parentChip","MAT_CHIPS_DEFAULT_OPTIONS","_MatChipListMixinBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","_disabled","ariaOrientation","valueChange","valueAccessor","chips","withVerticalOrientation","withHorizontalOrientation","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","undefined","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","_clearSelection","_selectValue","_sortValues","correspondingChip","selectViaInteraction","select","fallbackValue","valueToEmit","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","empty","writeValue","placeholder","_placeholder","_keydown","errorState","compareWith","errorStateMatcher","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","input","separators","registerInput","_focus","_onInput","invalid","chipList","ɵ0","MatChipsModule","useValue","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","baseClone","CLONE_DEEP_FLAG","offset","NoResultsMessageComponent","horizontal","isObject","fromIndex","baseIsNative","getValue","stubFalse","isBuffer","MatSortHeader_div_3_Template","_r2","_disableViewStateAnimation","_getArrowViewState","_getArrowDirectionState","_MatSortMixinBase","MatSortBase","MatSort","sortables","_stateChanges","_direction","sortable","getNextSortDirection","disableClear","sortOrder","sortDirectionCycle","nextDirectionIndex","_markInitialized","_disableClear","ɵMatSort_BaseFactory","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","sortButtonLabel","ɵprov","token","MAT_SORT_HEADER_INTL_PROVIDER","parentIntl","_MatSortHeaderMixinBase","MatSortHeaderBase","MatSortHeader","_intl","changeDetectorRef","_columnDef","_showIndicatorHint","_arrowDirection","_rerenderSubscription","_isSorted","_updateArrowDirection","_viewState","toState","_setAnimationTransitionState","fromState","origin","_setIndicatorHintVisible","register","deregister","visible","_isDisabled","viewState","_getAriaSortAttribute","attrs","_renderArrow","animation","MatSortModule","copyObject","keysIn","UploadButtonDirective","el","config","filesSelected","files","uid","coreJsData","maskSrcKey","exec","IE_PROTO","rangeCount","ranges","getRangeAt","blur","getSymbolsIn","baseGetAllKeys","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","match","number","quote","subString","UploadsModule","ChipInputComponent","formControl","items$","suggestedValues$","suggestFn","bindToSearchControl","splice","propagateChange","propagate","matAutocomplete","isOpen","duplicate","inputEl","setValue","valueChanges","query","addFromChipInput","addFromAutocomplete","getTag","getMapData","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteOffset","convert","stacked","NoResultsMessageModule","nativeCreate","predicate","fromRight","freeGlobal","freeSelf","self","arrayIncludes","arrayIncludesWith","cacheHas","createSet","iteratee","comparator","includes","isCommon","seen","outer","computed","seenIndex","resIndex","getPrototypeOf","isFunction","baseAssignValue","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","isMasked","toSource","reIsHostCtor","reIsNative","RegExp","getRawTag","objectToString","getNative","defineProperty","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","cloneableTags","isFlat","isFull","isArr","isFunc","subValue","keysFunc","props","nativeKeysIn","isProto","isKeyable","DataView","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseFindIndex","baseIsNaN","strictIndexOf","n","getSymbols","global","ChipInputModule","cloneArrayBuffer","dataView","MatDrawerContainer_div_0_Template","_r7","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","_r11","ctx_r8","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","ngZone","_contentMarginChanges","MatDrawerContainer","_contentMargins","MatDrawer","_focusTrapFactory","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","_takeFocus","_restoreFocus","disableClose","x","y","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","_openedVia","_updateFocusTrapState","destroy","openedVia","toggle","open","enabled","mode","_autoFocus","o","offsetWidth","_animationStartListener","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","viewportRuler","defaultAutosize","_drawers","backdropClick","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","reset","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","autosize","hasBackdrop","MatSidenavContent","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","ɵMatSidenav_BaseFactory","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenavContainer_BaseFactory","MatSidenavModule","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","webpackPolyfill","deprecate","paths","enumerable","l","baseIsMatch","getMatchData","matchData","pop","LocalStorage","storage","localStorageAvailable","localStorage","defaultValue","parse","getItem","setItem","removeItem","reFlags","regexp","lastIndex","baseTimes","isTypedArray","inherited","isArg","isBuff","isType","skipIndexes","baseIsTypedArray","nodeIsTypedArray","MatSelect_span_4_Template","ctx_r20","MatSelect_span_5_span_1_Template","ctx_r23","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r21","customTrigger","MatSelect_ng_template_8_Template","_r27","_panelDoneAnimatingStream","ctx_r22","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","transformPanel","minWidth","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","MatSelectTrigger","MatSelect","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_scrollTop","_destroy","_optionIds","_offsetY","_positions","_disableOptionCentering","_focused","optionSelectionChanges","_scrollStrategyFactory","disableOptionCentering","typeaheadDebounceInterval","overlayDir","offsetX","_triggerRect","trigger","_initKeyManager","changed","added","_resetOptions","withTypeAhead","_typeaheadDebounceInterval","getComputedStyle","fontSize","_calculateOverlayPosition","_highlightCorrectOption","_isRtl","_handleOpenKeydown","_handleClosedKeydown","isOpenKey","manager","isTyping","previouslySelectedOption","selectedOption","announce","viewValue","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","positionChange","_calculateOverlayOffsetX","correspondingOption","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","sortComparator","activeOptionIndex","_getItemHeight","current","itemHeight","_getItemCount","panelHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","max","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","paddingWidth","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_X","group","leftOverflow","rightOverflow","round","optionOffsetFromPanelTop","optionHeightAdjustment","maxOptionsDisplayed","floor","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","newValue","_id","selectedOptions","isEmpty","_getAriaLabelledby","_getAriaActiveDescendant","_onAttached","_r18","MatSelectModule","typedArrayTags","noop","objectCreate","proto","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","equalByTag","equalObjects","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","arrayPush","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","defaultThrottleConfig","leading","trailing","throttleTime","duration","scheduler","lift","ThrottleTimeOperator","subscriber","destination","_hasTrailingValue","_trailingValue","throttled","schedule","dispatchNext","Subscriber","arg","clearThrottle","baseHasIn","hasPath","FormattedDatePipe","_locale","angularPipe","timezone","locale","baseIndexOf","isNew","FormatPipesModule","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r11","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r15","updateOutlineGap","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r7","MatFormField_div_13_Template","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r17","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r9","_c5","MatError","matFormFieldAnimations","transitionMessages","MatFormFieldControl","getMatFormFieldDuplicatedHintError","align","MatHint","MatLabel","MatPlaceholder","MatPrefix","MatSuffix","nextUniqueId$2","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","control","_validatePlaceholders","_syncDescribedByIds","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","requestAnimationFrame","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","querySelectorAll","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","outlineGapPadding","rect","getRootNode","rootNode","_appearance","oldValue","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","underlineRef","_inputContainerRef","_hideControlPlaceholder","autofilled","_shouldForward","onContainerClick","MatFormFieldModule","noCustomizer","baseKeysIn","freeProcess","process","require","types","binding","arraySome","isPartial","arrLength","othLength","arrValue","othValue","compared","othIndex","baseIteratee","baseUniq","UploadProgressBarComponent","uploadQueue","cd","hidden","subscription","totalProgress","progress","count$","pending","objProps","objLength","skipCtor","objCtor","othCtor","baseMatches","baseMatchesProperty","identity","property","FoldersApiService","DriveEntryApiService","DriveUrlsService","StarredPageOpened","SearchPageOpened","TrashPageOpened","SharesFolderOpened","FolderPageOpened","RecentEntriesPageOpened","DriveUploadValidator","DriveState","FileIconComponent","FOLDERS_API_ROUTES","http","currentUser","params","GET_ALL","parent_id","post","CREATE","hash","userId","entryId","put","emptyTrash","ROOT_FOLDER","folder","driveRoot","LoadUserFolders","LoadUserSpaceUsage","BuildFolderTree","folders","OpenFolder","OpenSearchPage","queryParams","SelectEntries","SelectAllEntries","DeselectAllEntries","DeleteSelectedEntries","OpenUploadsPanel","CloseUploadsPanel","AddEntries","MoveEntries","OpenDialog","dialog","OpenConfirmDialog","confirmAction","SetViewMode","ToggleDetailsSidebar","ToggleSidebar","UploadFiles","RestoreTrashedEntries","DeleteTrashedEntriesForever","EmptyTrash","OpenFilePreview","DownloadEntries","link","password","AddStar","RemoveStar","RemoveEntries","LoadMoreEntries","loadMore","ReloadPageEntries","CopySelectedEntries","OpenUploadWindow","ShowLoadingToast","HideLoadingToast","ResetState","UpdateEntries","SetCurrentUser","user","UpdateEntryDescription","description","DrivePage","viewName","folderHash","hasActions","sortColumn","sortDirection","RECENT_PAGE","disableSort","recentOnly","SEARCH_PAGE","SHARES_PAGE","sharedOnly","TRASH_PAGE","deletedOnly","STARRED_PAGE","starredOnly","ROOT_FOLDER_PAGE","FOLDER_PAGE","orderBy","EntriesSelectedViaDrag","EntrySelectedViaContextMenu","EntryTapped","EntryDoubleTapped","FileDeleteSuccess","deletedFiles","EntryContextMenuOpened","NewFolderCreated","EntryRenamed","newName","StartedDragging","StoppedDragging","MoveEntriesSuccess","oldLocation","MoveEntriesFailed","messages","TrashedEntriesDeleteSuccess","TrashedEntriesRestoreSuccess","NotEnoughSpaceError","UserSpaceUsageChanged","BreakpointChanged","status","DRIVE_STATE_MODEL_DEFAULTS","isMobile","activePage","folderTree","flatFolders","userFoldersLoaded","selectedEntries","dragging","loading","uploadsPanelOpen","viewMode","detailsVisible","sidebarOpen","spaceUsage","available","used","meta","currentPage","lastPage","DEFAULT_MAX_FILE_SIZE_MB","validations","maxSize","getMaxFileSize","allowedExtensions","getAllowedExtensions","blockedExtensions","getBlockedExtensions","extensions","convertToBytes","getJson","LoadingToastMessages","DRIVE_UPLOAD_INPUT_CONFIG","foldersApi","entriesApi","router","driveUrls","uploads","store","localStore","validator","uploadInputConfig","getAllForCurrentUser","tap","response","dispatch","action","hashTable","tree","len","getState","parent","patchState","oldState","newState","orderDir","transformQueryParams","getEntriesForFolder","last_page","current_page","currentFolder","navigate","oldParams","selectSnapshot","entryDoubleTapped","alreadySelected","findIndex","curr","entryIds","selectedEntryIds","actions","selectedEntryParent","newFolderId","canMoveEntriesTo","moveEntries","minimal","finalize","currentEntries","newEntries","newSize","sum","file_size","enoughSpaceLeftToUpload","parentId","httpParams","fileEntry","newEntry","f","deleteForever","restoredEntries","restore","addStar","tags","removeStar","removeTag","copyEntries","directory","getSpaceUsage","mainEntries","updatedEntry","mainIndex","update","setState","folderId","file","every","spaceUsed","spaceAvail","permission","folderUser","users","u","owns_entry","entry_permissions","activeFolder","userHasPermission","edit","userCanEditFolder","movingEntries","startsWith","cancelUncompleted","selectedEntry","selectedEntryOrActiveFolder","userSpaceUsed","userSpaceAvailable","userCanEditSelectedFolder","SUPPORTED_ENTRY_TYPES","mime","DriveDomCacheService","EntryDragPreviewComponent","Observable","SEARCH_FILE_TYPES","EMPTY_PAGINATION_RESPONSE","pagination","MainSearchbarComponent","driveApi","defaultResults","results$","displayFn","lastQuery","setDefaultResults","debounceTime","distinctUntilChanged","q","switchMap","search","content","openSearchPage","resetForm","closePanelAndBlur","getCurrentUserEntries","per_page","entryType","executeAction","CrupdateFolderDialogComponent","SidebarActionButtonsComponent","FolderDropTargetDirective","BaseDropTarget","CdkTreeNodeOutlet","CdkTreeNodeDef","folderName","errors","setErrors","openUploadsPanel","openNewFolderDialog","canUpload","subs","onDragStart","onDragEnd","enter","fromEvent","onDragEnter","leave","onDragLeave","classes","canDrop","removeDragOverClass","sub","FlatTreeControl","getLevel","isExpandable","dataNodes","dataNode","results","expansionModel","toBeProcessed","collapseDescendants","expandDescendants","getDescendants","CDK_TREE_NODE_OUTLET_NODE","_node","CdkTreeNodeOutletContext","getTreeControlFunctionsMissingError","CdkNestedTreeNode","CdkTreeNode","CdkTree","CdkTreeModule","CdkTreeNodeToggle","CdkTreeNodePadding","MatTreeNodeDef","MatTreeNode","MatTreeNodePadding","MatNestedTreeNode","MatTree","MatTreeNodeOutlet","MatTreeNodeToggle","MatTreeModule","FoldersTreeService","ContextMenuDirective","ContextMenu","_levels","treeControl","_nodeOutlet","_dataSubscription","defaultNodeDefs","_nodeDefs","_defaultNodeDef","renderNodeChanges","parentData","dataDiffer","adjustedPreviousIndex","insertNode","nodeDef","nodeData","node","_getNodeDef","level","mostRecentTreeNode","_tree","_dataChanges","getChildren","childrenNodes","_setRoleFromChildren","_setRoleFromData","isExpanded","updateChildrenNodes","nodeOutlet","_clear","_getNodeOutlet","_children","outlets","cssUnitPattern","_treeNode","_renderer","indentUnits","_indent","_setPadding","nodeLevel","_level","forceChange","padding","_paddingIndent","_currentPadding","paddingProp","resetProp","setStyle","indent","units","parts","_recursive","recursive","toggleDescendants","_toggle","_MatTreeNodeMixinBase","ɵMatTreeNodeDef_BaseFactory","ngOnDestroy","ɵMatTreeNodePadding_BaseFactory","ɵMatTree_BaseFactory","ɵMatTreeNodeToggle_BaseFactory","transformFunction","resultNodes","parentMap","flatNode","_flattenChildren","take","child","childParentMap","_flattenNode","structuredData","nodes","currentExpand","expand","_treeControl","_treeFlattener","_flattenedData","_expandedData","collectionViewer","expandFlattenedNodes","flattenNodes","createTreeFlattener","createTreeControl","createTreeDataSource","bindToStore","flattener","transformer","userFolders$","assign","expandable","userFolders","AVAILABLE_CONTEXT_MENUS","ContextMenuRef","attachments","backdropElement","CONTEXT_MENU_DATA","zone","injector","events","component","createOverlay","openContextMenu","portal","bindEventsToOverlay","removeLastOrigin","getMenuPositionStrategy","backdropClass","contextMenuElement","createOriginFromEvent","primary","lastOrigin","HTMLElement","EventTarget","clientY","offsetY","clientX","contextMenu","_availableMenus","disableContextMenu","availableMenus","getMenuComponent","getMenuData","FoldersTreeComponent","expanded","showRootNode","folderSelected","selectedFolder","AvailableSpaceIndicatorComponent","SidebarComponent","spaceUsedPercent","urls","openFolder","EntryDescriptionPanelComponent","editingDescription$","savingDescription$","textArea","queryList","FileThumbnailComponent","url","thumbnail","separator","DetailsPanelComponent","DriveHammerInteractionsDirective","DragEntryService","FilesDragSelectService","FilesGridItemComponent","DetailsSidebarComponent","DriveContextMenuComponent","driveEntry","initial","cacheClientRects","createSelectBox","bindScroll","hammerToRelative","scrollCont","selectBox","lastPanEvent","resizeBox","removeSelectBox","dispatchSelectedAction","unbindScroll","newPos","getNewSelectorPosition","scrollAndRepositionSelector","selectIntersectingElements","tmp","x1","y1","x2","y2","area","rectToRelative","filesContRect","edge","reachedAreaEdge","scrollBy","scrollDiff","scrollValue","scrollHeight","applyPosition","selectedBoxRect","getGridElements","gridItem","center","dataset","filesCont","scrollContRect","scrollListener","domCache","dragPreview","dragSelect","dragEntry","subscriptions","bindToHammer","hammerManager","enable","createHammerManager","onPanStart","onPan","onPanEnd","onTap","onDoubleTap","Hammer","Manager","Tap","pan","Pan","doubleTap","taps","recognizeWith","on","gridElement","getEntryEl","panService","getEntryByEl","en","entryEl","srcEvent","closest","DriveToolbarComponent","EntryBreadcrumbsComponent","breadcrumb","combined","bindToActivePage","breadcrumbs","getFolderRootBreadcrumb","folderPath","getBreadcrumbForFolder","allFolders","pathFolder","userOwnsFolder","userOwnsActiveFolder","generateBreadCrumb","AVAILABLE_SORTS","DriveContextActions","EntriesSortButtonComponent","TrashActions","ShareableLinksApiService","ShareLinkState","DEFAULT_VALUE","btnDisabled","availableSorts","sort$","updateStatus","multipleEntriesSelected","allStarred","allSelectedEntriesStarred","onlyFoldersSelected","noopTrue","icon","showInCompact","execute","linkId","LoadShareableLink","UpdateShareableLink","CreateShareableLink","DeleteShareableLink","ToggleOptionsPanel","LinkCopySuccess","ResetShareLinkState","defaultState","optionsPanelVisible","backendErrors","linkOptions","allowDownload","allowEdit","expiresAt","linksApi","entry_id","errorResponse","cachedLink","findByEntryId","autoCreate","LinkOptionsComponent","form","date","time","passwordVisible","expirationVisible","bindToLinkChange","getPayload","payload","link$","hydrateExpirationForm","expires_at","patchValue","allow_edit","allow_download","Date","toJSON","saveChanges","toggleOptionsPanel","ShareLinkDialogComponent","SharesApiService","ShareDialogState","toast","actions$","shareableLink$","bindToOptionsPanelToggle","s","focusInput","getBaseUrl","optionsVisible","network","image","mediaItem","location","href","innerWidth","innerHeight","getElementById","overflow","DRIVE_ENTRY_FULL_PERMISSIONS","download","SetInitialUsers","UpdateUserPermissions","permissions","RemoveUser","SetUsers","SaveChanges","ShareEntries","ShareEntriesFailed","sharesApi","uniqueUsers","p","varies","usersWithAccess","original","updateUsers","newUsers","updateEntriesInDriveStore","shareEntries","updatedEntries","SharingPermissionsButtonComponent","compact","selectPermission","EntriesAccessTableComponent","newPermissions","dirty","ShareDialogComponent","destroyed$","suggestUserEmails","getAll","email","resetModel","bindToShareError","bindToShareModel","emails","shareModel","setErrorMessages","RenameEntryDialogComponent","SharesActions","FolderActions","MoveEntriesDialogComponent","EntryActions","TrashPageActions","entryName","shares","getSelectedEntries","userCanEditSelectedEntries","detachUser","separatorAfter","openUploadWindow","loading$","failure","folderIsSelected","selectedFolderId","ContextActionsContainerComponent","ToggleSelectedClassDirective","FileListHeaderComponent","ToolbarActionsComponent","hasMoreActions$","setActions","moreActionsButton","getActions","setActionsForEntry","toggleViewMode","ToggleDetails","anythingSelected","detailsOpen","sortFormControl","activePage$","emitEvent","els","readDirRecursive","createReader","readEntries","childEntry","isDirectory","transformFileEntry","fullPath","DriveInfiniteScrollDirective","InfiniteScroll","UploadDropzoneDirective","DriveComponent","Keybinds","disableDropzoneClick","disableDropzone","uploadConfig","filesDropped","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","clickButton","handleClick","removeClassesFromDropzone","emitUploadEvent","dropzoneDisabled","dataTransfer","dropEffect","newEl","elementFromPoint","kind","webkitGetAsEntry","hasFiles","threshold","scrollSub","getScrollContainer","capture","passive","onScroll","canLoadMore","isLoading","offsetHeight","scrollY","documentElement","loadMoreItems","canLoadMoreEntries","route","breakpoints","setViewMode","cacheDemoElements","observeBreakpointChanges","getModel","model$","filesContainer","scrollContainer","observe","matches","toggleSidebar","uploadFiles","Keycodes","bindings","keybind","callback","parseKeybindString","keybindString","executeBindings","bindingMatches","ctrl","parsed","part","FilesGridComponent","disableInteractions","NoSearchEntriesComponent","NoSharedEntriesComponent","NoStarredEntriesComponent","NoTrashedEntriesComponent","NoRecentEntriesComponent","FilesListComponent","NoFolderEntriesComponent","UploadDropzoneComponent","EntriesContainerComponent","DefaultPreviewComponent","BaseFilePreview","keybinds","tabindex","keybindSub","listenOn","addWithPreventDefault","entriesEmpty","activePageName","CURRENT_PREVIEW_FILE","PREVIEW_URL_TRANSFORMER","sanitizer","filePreviewWrapper","bypassSecurityTrustResourceUrl","getSrc","responseType","TextPreviewComponent","content$","fileTooLarge$","loadFileContents","getContents","AudioPreviewComponent","invalidMedia","canPlayVideo","player","src","play","canPlayType","playerEl","VideoPreviewComponent","ImagePreviewComponent","PdfPreviewComponent","GoogleDocsViewerComponent","PreviewFilesService","DefaultPreviews","showDefaultPreview$","showDefaultPreview","iframe","onload","clearTimeout","timeoutRef","stopLoading","getIframeSrc","reject","previewUrl","preview_token","getGoogleDocsUrl","encodeURIComponent","AVAILABLE_PREVIEWS","video","audio","pdf","spreadsheet","powerPoint","word","availablePreviews","previewUriTransformer","haveNext","updateMeta","updatePortal","havePrevious","newPointer","oldPointer","pointer","total","getCurrent","createInjector","activeFile","injectionTokens","LinkPreviewPasswordPanelComponent","links","passwordControl","passwordError$","passwordValid","checkPassword","handlePasswordCheck","submitPassword","previewFiles","FilePreviewToolbarComponent","showLogo","disableDownload","showCloseButton","PreviewContainerComponent","downloadSub","comp","instance","FilePreviewOverlayComponent","bindToDownload","previewContainer","optionsButton","shareableLink","closeOverlay","FolderPreviewComponent","linkApi","breadcrumb$","pagination$","loadChildren","generateBreadcrumb","setPagination","folderChildren","ent","activeEntry","hideMoreOptionsBtn","getEntry","openPreviewOverlay","makeLinkHash","subFolder","replaceChildren","order","findByHash","withEntries","onClick","LinkPreviewContainerComponent","DriveRoutingModule","data$","passwordPanelVisible$","linkChanged","setBackgroundClass","togglePasswordPanel","showPreview","importEntry","replacements","dashboardRoutes","canActivate","forChild","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","ctx_r2","MatSpinner__svg_circle_2_Template","ctx_r3","MatProgressSpinnerModule","MatSpinner","MatProgressSpinner","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","_diameter","_fallbackAnimation","trackedDiameters","_diameters","head","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","_strokeWidth","viewBox","PI","_viewBox","DRIVE_CONTEXT_MENUS","UploadsPanelItemComponent","upload","progress$","animationFrame","UploadsPanelComponent","DownloadHandler","OverlayHandler","FilePreviewModule","ToastHandler","LoadingToastComponent","UploadPanelHandler","DialogHandler","RemoveStarHandler","PageLoadHandler","PageChangeHandler","ResetScrollHandler","SharingModule","ContextMenuModule","DriveModule","activeUploads","minimized$","toggleMinimized","useClass","getDownloadUrl","click","hashes","getEntryHashes","entriesDeleted","entriesStarred","entriesUnstarred","entriesMoveFailed","folderCreated","entriesMoved","entriesDeletedForever","entriesRestoredFromTrash","entryRenamed","linkCopiedToClipboard","notEnoughSpace","loadingToast","onAction","oldName","toastRef","openComponent","dismiss","overlayConfig","mobilePosition","overlayPanel","closeUploadsPanel","uploadPanelRef","openConfirmDialog","beforeClosed","confirmed","scrollTo","urlAfterRedirects","isLoggedIn","getPageLoadAction","getPageUriParams","pageName","firstChild","STATE_HANDLERS","handler","ext","forFeature","baseIsEqualDeep","reIsUint","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r16","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r24","i_r17","_r12","ctx_r13","_getTabLabelId","_getTabIndex","_tabs","_getTabContentId","MatTabGroup_mat_tab_body_5_Template","_r28","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r25","i_r26","ctx_r15","_c6","_c7","_c8","_c9","_MAT_INK_BAR_POSITIONER","offsetLeft","MatInkBar","_inkBarPositioner","show","_setStyles","visibility","inkBar","MatTabContent","MatTabLabel","ɵMatTabLabel_BaseFactory","_MatTabMixinBase","MatTabBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","_contentPortal","isActive","_explicitContent","_implicitContent","_templateLabel","matTabsAnimations","translateTab","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","isCentering","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","_computePositionAnimationState","_computePositionFromOrigin","clientHeight","_getLayoutDirection","_positionIndex","_portalHost","_onTranslateTabStarted","MAT_TABS_CONFIG","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","disablePagination","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","tab","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","_allTabs","_tabHeader","_alignInkBarToSelectedTab","tabHeight","wrapper","_tabBodyWrapper","tabHeader","focusIndex","idx","_animationDuration","_backgroundColor","backgroundColor","dynamicHeight","MatTabGroup","_focusChanged","MatTabHeader","MatTabLabelWrapper","_MatTabLabelWrapperMixinBase","MatTabLabelWrapperBase","passiveEventListenerOptions","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_itemSelected","_currentTextContent","_checkPaginationEnabled","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","_scrollTo","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","mouseEvent","button","maxScrollDistance","distance","_MatTabHeaderBase","_disableRipple","_handlePaginatorClick","_onContentChanges","_MatTabNavBase","updateActiveLink","MatTabNav","MatTabLink","_MatTabLinkMixinBase","MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","_isActive","exitDuration","tabNavBar","focusMonitor","_tabLinkRipple","MatTabsModule","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","typedArray","baseIsMap","nodeIsMap","arrayMap","symbolToString"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r4.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r6 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r5.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.dataAccessor(data_r6, ctx_r5.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1.id)(\"ngClass\", ctx_r1._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                window.addEventListener('blur', this._windowBlurHandler);\n            }));\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        /** @type {?} */\n        const belowPosition = {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        };\n        /** @type {?} */\n        const abovePosition = {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom',\n            // The overlay edge connected to the trigger should have squared corners, while\n            // the opposite end has rounded corners. We apply a CSS class to swap the\n            // border-radius based on the overlay position.\n            panelClass: 'mat-autocomplete-panel-above'\n        };\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = [abovePosition];\n        }\n        else if (this.position === 'below') {\n            positions = [belowPosition];\n        }\n        else {\n            positions = [belowPosition, abovePosition];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [MatAutocomplete,\n        MatOptionModule,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Translations} from '../../translations/translations.service';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\nexport interface ConfirmModalData {\r\n    title: string;\r\n    body: string;\r\n    bodyBold?: string;\r\n    ok?: string;\r\n    cancel?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmModalComponent implements OnInit {\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmModalData,\r\n        private i18n: Translations,\r\n        public settings: Settings,\r\n    ) {}\r\n\r\n    public close() {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.data.title = this.i18n.t(this.data.title);\r\n        this.data.body = this.i18n.t(this.data.body);\r\n        if (this.data.bodyBold) this.data.bodyBold = this.i18n.t(this.data.bodyBold);\r\n        this.data.ok = this.data.ok ? this.i18n.t(this.data.ok) : this.i18n.t('Confirm');\r\n        this.data.cancel = this.data.cancel ? this.i18n.t(this.data.cancel) : this.i18n.t('Cancel');\r\n    }\r\n\r\n    public confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n}","<div class=\"modal-header\">\r\n    <h2 class=\"modal-title\" mat-dialog-title>{{data.title}}</h2>\r\n    <button type=\"button\" (click)=\"close()\" class=\"close-button no-style\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<div class=\"mat-dialog-contents\" mat-dialog-content>\r\n    <p>{{data.body}}</p>\r\n    <p class=\"bold\" *ngIf=\"data.bodyBold\">{{data.bodyBold}}</p>\r\n</div>\r\n\r\n<div class=\"buttons right mat-dialog-actions\" mat-dialog-actions>\r\n    <button (click)=\"close()\" type=\"button\" mat-button class=\"button cancel cancel-button\">{{data.cancel}}</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" class=\"button primary submit-button\" cdkFocusInitial (click)=\"confirm()\">{{data.ok}}</button>\r\n</div>\r\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, NgZone, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-slide-toggle` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nfunction MatSlideToggleDefaultOptions() { }\nif (false) {\n    /**\n     * Whether toggle action triggers value changes in slide toggle.\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableToggleValue;\n    /**\n     * Whether drag action triggers value changes in slide toggle.\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?|undefined}\n     */\n    MatSlideToggleDefaultOptions.prototype.disableDragValue;\n}\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nif (false) {\n    /**\n     * The source MatSlideToggle of the event.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.source;\n    /**\n     * The new `checked` value of the MatSlideToggle.\n     * @type {?}\n     */\n    MatSlideToggleChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSlideToggleBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, \n    /**\n     * @deprecated `_ngZone` and `_dir` parameters to be removed.\n     * @breaking-change 10.0.0\n     */\n    _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         * @deprecated No longer being used. To be removed.\n         * \\@breaking-change 10.0.0\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r4 = ɵngcc0.ɵɵreference(1);\n        const _r8 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r8.textContent || !_r8.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r4)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc4.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], dragChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_checked;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSlideToggle.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._uniqueId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._checked;\n    /**\n     * Reference to the thumb HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbEl;\n    /**\n     * Reference to the thumb bar HTMLElement.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._thumbBarEl;\n    /**\n     * Name value will be applied to the input element if present.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.name;\n    /**\n     * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.id;\n    /**\n     * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.labelPosition;\n    /**\n     * Used to set the aria-label attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabel;\n    /**\n     * Used to set the aria-labelledby attribute on the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.ariaLabelledby;\n    /**\n     * An event will be dispatched each time the slide-toggle changes its value.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.change;\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     * @type {?}\n     */\n    MatSlideToggle.prototype.toggleChange;\n    /**\n     * An event will be dispatched each time the slide-toggle is dragged.\n     * This event is always emitted when the user drags the slide toggle to make a change greater\n     * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n     * the user toggles the slide toggle to change its value.\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSlideToggle.prototype.dragChange;\n    /**\n     * Reference to the underlying input element.\n     * @type {?}\n     */\n    MatSlideToggle.prototype._inputElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlideToggle.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatSlideToggle.prototype.defaults;\n    /** @type {?} */\n    MatSlideToggle.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/slide-toggle-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ],\n        _MatSlideToggleRequiredValidatorModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule,\n        MatSlideToggle,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slide-toggle/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatChipBase)), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        this._selected = false;\n        this._selectable = true;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disabled', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip.disabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon], exports: [MatChipList,\n        MatChip,\n        MatChipInput,\n        MatChipRemove,\n        MatChipAvatar,\n        MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","import {ChangeDetectionStrategy, Component, HostBinding, Input} from '@angular/core';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Component({\r\n    selector: 'no-results-message',\r\n    templateUrl: './no-results-message.component.html',\r\n    styleUrls: ['./no-results-message.component.scss'],\r\n    host: {class: 'no-results-message'},\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NoResultsMessageComponent {\r\n    @Input() @HostBinding('class.horizontal') horizontal = false;\r\n    constructor(public settings: Settings) {}\r\n}\r\n","<div class=\"icon\">\r\n    <img [src]=\"settings.getAssetUrl('images/no-results.svg')\">\r\n</div>\r\n<div class=\"text\">\r\n    <div class=\"main\">\r\n        <ng-content select=\"[primary-text]\"></ng-content>\r\n    </div>\r\n    <div class=\"secondary\">\r\n        <ng-content select=\"[secondary-text]\"></ng-content>\r\n    </div>\r\n</div>","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","import { EventEmitter, isDevMode, Directive, Input, Output, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ElementRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"mat-sort-header\", \"\"];\nfunction MatSortHeader_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵlistener(\"@arrowPosition.start\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._disableViewStateAnimation = true; })(\"@arrowPosition.done\", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3._disableViewStateAnimation = false; });\n    ɵngcc0.ɵɵelement(1, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 5);\n    ɵngcc0.ɵɵelement(3, \"div\", 6);\n    ɵngcc0.ɵɵelement(4, \"div\", 7);\n    ɵngcc0.ɵɵelement(5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@arrowOpacity\", ctx_r0._getArrowViewState())(\"@arrowPosition\", ctx_r0._getArrowViewState())(\"@allowChildren\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"@indicator\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@leftPointer\", ctx_r0._getArrowDirectionState());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@rightPointer\", ctx_r0._getArrowDirectionState());\n} }\nconst _c1 = [\"*\"];\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a directive that holds sorting state consumed by `MatSortHeader`.\n * @record\n */\nfunction MatSortable() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    MatSortable.prototype.id;\n    /**\n     * Starting sort direction.\n     * @type {?}\n     */\n    MatSortable.prototype.start;\n    /**\n     * Whether to disable clearing the sorting state.\n     * @type {?}\n     */\n    MatSortable.prototype.disableClear;\n}\n/**\n * The current sort state.\n * @record\n */\nfunction Sort() { }\nif (false) {\n    /**\n     * The id of the column being sorted.\n     * @type {?}\n     */\n    Sort.prototype.active;\n    /**\n     * The sort direction.\n     * @type {?}\n     */\n    Sort.prototype.direction;\n}\n// Boilerplate for applying mixins to MatSort.\n/**\n * \\@docs-private\n */\nclass MatSortBase {\n}\n/** @type {?} */\nconst _MatSortMixinBase = mixinInitialized(mixinDisabled(MatSortBase));\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nclass MatSort extends _MatSortMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Collection of all registered sortables that this directive manages.\n         */\n        this.sortables = new Map();\n        /**\n         * Used to notify any child components listening to state changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /**\n         * Event emitted when the user changes either the active sort or sort direction.\n         */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * The sort direction of the currently active MatSortable.\n     * @return {?}\n     */\n    get direction() { return this._direction; }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n    set direction(direction) {\n        if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    register(sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        /** @type {?} */\n        const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        /** @type {?} */\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        /** @type {?} */\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = function MatSort_Factory(t) { return ɵMatSort_BaseFactory(t || MatSort); };\nMatSort.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSort, selectors: [[\"\", \"matSort\", \"\"]], hostAttrs: [1, \"mat-sort\"], inputs: { disabled: [\"matSortDisabled\", \"disabled\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"], active: [\"matSortActive\", \"active\"] }, outputs: { sortChange: \"matSortChange\" }, exportAs: [\"matSort\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatSort.propDecorators = {\n    active: [{ type: Input, args: ['matSortActive',] }],\n    start: [{ type: Input, args: ['matSortStart',] }],\n    direction: [{ type: Input, args: ['matSortDirection',] }],\n    disableClear: [{ type: Input, args: ['matSortDisableClear',] }],\n    sortChange: [{ type: Output, args: ['matSortChange',] }]\n};\nconst ɵMatSort_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSort);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSort, [{\n        type: Directive,\n        args: [{\n                selector: '[matSort]',\n                exportAs: 'matSort',\n                host: { 'class': 'mat-sort' },\n                inputs: ['disabled: matSortDisabled']\n            }]\n    }], null, { start: [{\n            type: Input,\n            args: ['matSortStart']\n        }], sortChange: [{\n            type: Output,\n            args: ['matSortChange']\n        }], direction: [{\n            type: Input,\n            args: ['matSortDirection']\n        }], disableClear: [{\n            type: Input,\n            args: ['matSortDisableClear']\n        }], active: [{\n            type: Input,\n            args: ['matSortActive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSort.ngAcceptInputType_disabled;\n    /**\n     * Collection of all registered sortables that this directive manages.\n     * @type {?}\n     */\n    MatSort.prototype.sortables;\n    /**\n     * Used to notify any child components listening to state changes.\n     * @type {?}\n     */\n    MatSort.prototype._stateChanges;\n    /**\n     * The id of the most recently sorted MatSortable.\n     * @type {?}\n     */\n    MatSort.prototype.active;\n    /**\n     * The direction to set when an MatSortable is initially sorted.\n     * May be overriden by the MatSortable's sort start.\n     * @type {?}\n     */\n    MatSort.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSort.prototype._disableClear;\n    /**\n     * Event emitted when the user changes either the active sort or sort direction.\n     * @type {?}\n     */\n    MatSort.prototype.sortChange;\n}\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    /** @type {?} */\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n    AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * \\@docs-private\n * @type {?}\n */\nconst matSortAnimations = {\n    /**\n     * Animation that moves the sort indicator.\n     */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the left pointer of the indicator based on the sorting direction.\n     */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that rotates the right pointer of the indicator based on the sorting direction.\n     */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n    ]),\n    /**\n     * Animation that controls the arrow opacity.\n     */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: .54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(-25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(25%)' })\n        ]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(25%)' }),\n            style({ transform: 'translateY(0)' })\n        ]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n            style({ transform: 'translateY(0)' }),\n            style({ transform: 'translateY(-25%)' })\n        ]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /**\n     * Necessary trigger that calls animate on children animations.\n     */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [\n            query('@*', animateChild(), { optional: true })\n        ])\n    ]),\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * ARIA label for the sorting button.\n         */\n        this.sortButtonLabel = (/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => {\n            return `Change sorting for ${id}`;\n        });\n    }\n}\nMatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) { return new (t || MatSortHeaderIntl)(); };\n/** @nocollapse */ MatSortHeaderIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatSortHeaderIntl_Factory() { return new MatSortHeaderIntl(); }, token: MatSortHeaderIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeaderIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.changes;\n    /**\n     * ARIA label for the sorting button.\n     * @type {?}\n     */\n    MatSortHeaderIntl.prototype.sortButtonLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to the sort header.\n/**\n * \\@docs-private\n */\nclass MatSortHeaderBase {\n}\n/** @type {?} */\nconst _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * \\@docs-private\n * @record\n */\nfunction ArrowViewStateTransition() { }\nif (false) {\n    /** @type {?|undefined} */\n    ArrowViewStateTransition.prototype.fromState;\n    /** @type {?} */\n    ArrowViewStateTransition.prototype.toState;\n}\n/**\n * Column definition associated with a `MatSortHeader`.\n * @record\n */\nfunction MatSortHeaderColumnDef() { }\nif (false) {\n    /** @type {?} */\n    MatSortHeaderColumnDef.prototype.name;\n}\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderMixinBase {\n    /**\n     * @param {?} _intl\n     * @param {?} changeDetectorRef\n     * @param {?} _sort\n     * @param {?} _columnDef\n     * @param {?=} _focusMonitor\n     * @param {?=} _elementRef\n     */\n    constructor(_intl, changeDetectorRef, _sort, _columnDef, _focusMonitor, _elementRef) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The direction the arrow should be facing according to the current state.\n         */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /**\n         * Sets the position of the arrow that displays when sorted.\n         */\n        this.arrowPosition = 'after';\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            changeDetectorRef.markForCheck();\n        }));\n        if (_focusMonitor && _elementRef) {\n            // We use the focus monitor because we also want to style\n            // things differently based on the focus origin.\n            _focusMonitor.monitor(_elementRef, true)\n                .subscribe((/**\n             * @param {?} origin\n             * @return {?}\n             */\n            origin => this._setIndicatorHintVisible(!!origin)));\n        }\n    }\n    /**\n     * Overrides the disable clear value of the containing MatSort for this MatSortable.\n     * @return {?}\n     */\n    get disableClear() { return this._disableClear; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection });\n        this._sort.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // @breaking-change 10.0.0 Remove null check for _focusMonitor and _elementRef.\n        if (this._focusMonitor && this._elementRef) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     * @param {?} visible\n     * @return {?}\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     * @param {?} viewState\n     * @return {?}\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState;\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /**\n     * Triggers the sort on this sort header and removes the indicator hint.\n     * @return {?}\n     */\n    _handleClick() {\n        if (this._isDisabled()) {\n            return;\n        }\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n        // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n        // the direction it is facing.\n        /** @type {?} */\n        const viewState = this._isSorted() ?\n            { fromState: this._arrowDirection, toState: 'active' } :\n            { fromState: 'active', toState: this._arrowDirection };\n        this._setAnimationTransitionState(viewState);\n        this._showIndicatorHint = false;\n    }\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    _isSorted() {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    }\n    /**\n     * Returns the animation state for the arrow direction (indicator and pointers).\n     * @return {?}\n     */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /**\n     * Returns the arrow position state (opacity, translation).\n     * @return {?}\n     */\n    _getArrowViewState() {\n        /** @type {?} */\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     * @return {?}\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ?\n            this._sort.direction :\n            (this.start || this._sort.start);\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     * @return {?}\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return null;\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /**\n     * Whether the arrow inside the sort header should be rendered.\n     * @return {?}\n     */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n}\nMatSortHeader.ɵfac = function MatSortHeader_Factory(t) { return new (t || MatSortHeader)(ɵngcc0.ɵɵdirectiveInject(MatSortHeaderIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSort, 8), ɵngcc0.ɵɵdirectiveInject('MAT_SORT_HEADER_COLUMN_DEF', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatSortHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSortHeader, selectors: [[\"\", \"mat-sort-header\", \"\"]], hostAttrs: [1, \"mat-sort-header\"], hostVars: 3, hostBindings: function MatSortHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatSortHeader_click_HostBindingHandler() { return ctx._handleClick(); })(\"mouseenter\", function MatSortHeader_mouseenter_HostBindingHandler() { return ctx._setIndicatorHintVisible(true); })(\"mouseleave\", function MatSortHeader_mouseleave_HostBindingHandler() { return ctx._setIndicatorHintVisible(false); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-sort\", ctx._getAriaSortAttribute());\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-disabled\", ctx._isDisabled());\n    } }, inputs: { disabled: \"disabled\", arrowPosition: \"arrowPosition\", disableClear: \"disableClear\", id: [\"mat-sort-header\", \"id\"], start: \"start\" }, exportAs: [\"matSortHeader\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 7, consts: [[1, \"mat-sort-header-container\"], [\"type\", \"button\", 1, \"mat-sort-header-button\", \"mat-focus-indicator\"], [\"class\", \"mat-sort-header-arrow\", 4, \"ngIf\"], [1, \"mat-sort-header-arrow\"], [1, \"mat-sort-header-stem\"], [1, \"mat-sort-header-indicator\"], [1, \"mat-sort-header-pointer-left\"], [1, \"mat-sort-header-pointer-right\"], [1, \"mat-sort-header-pointer-middle\"]], template: function MatSortHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, MatSortHeader_div_3_Template, 6, 6, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-sort-header-sorted\", ctx._isSorted())(\"mat-sort-header-position-before\", ctx.arrowPosition == \"before\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx._isDisabled() || null)(\"aria-label\", ctx._intl.sortButtonLabel(ctx.id));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._renderArrow());\n    } }, directives: [ɵngcc2.NgIf], styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], encapsulation: 2, data: { animation: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSortHeader.ctorParameters = () => [\n    { type: MatSortHeaderIntl },\n    { type: ChangeDetectorRef },\n    { type: MatSort, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: ['MAT_SORT_HEADER_COLUMN_DEF',] }, { type: Optional }] },\n    { type: FocusMonitor },\n    { type: ElementRef }\n];\nMatSortHeader.propDecorators = {\n    id: [{ type: Input, args: ['mat-sort-header',] }],\n    arrowPosition: [{ type: Input }],\n    start: [{ type: Input }],\n    disableClear: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortHeader, [{\n        type: Component,\n        args: [{\n                selector: '[mat-sort-header]',\n                exportAs: 'matSortHeader',\n                template: \"<div class=\\\"mat-sort-header-container\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\">\\n  <button class=\\\"mat-sort-header-button mat-focus-indicator\\\" type=\\\"button\\\"\\n          [attr.disabled]=\\\"_isDisabled() || null\\\"\\n          [attr.aria-label]=\\\"_intl.sortButtonLabel(id)\\\">\\n    <ng-content></ng-content>\\n  </button>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-sort-header',\n                    '(click)': '_handleClick()',\n                    '(mouseenter)': '_setIndicatorHintVisible(true)',\n                    '(mouseleave)': '_setIndicatorHintVisible(false)',\n                    '[attr.aria-sort]': '_getAriaSortAttribute()',\n                    '[class.mat-sort-header-disabled]': '_isDisabled()'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                animations: [\n                    matSortAnimations.indicator,\n                    matSortAnimations.leftPointer,\n                    matSortAnimations.rightPointer,\n                    matSortAnimations.arrowOpacity,\n                    matSortAnimations.arrowPosition,\n                    matSortAnimations.allowChildren,\n                ],\n                styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-button{border:none;background:0 0;display:flex;align-items:center;padding:0;cursor:inherit;outline:0;font:inherit;color:currentColor;position:relative}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-button,[mat-sort-header].cdk-program-focused .mat-sort-header-button{border-bottom:solid 1px currentColor}.mat-sort-header-button::-moz-focus-inner{border:0}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"]\n            }]\n    }], function () { return [{ type: MatSortHeaderIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: ['MAT_SORT_HEADER_COLUMN_DEF']\n            }, {\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }]; }, { arrowPosition: [{\n            type: Input\n        }], disableClear: [{\n            type: Input\n        }], id: [{\n            type: Input,\n            args: ['mat-sort-header']\n        }], start: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disableClear;\n    /** @type {?} */\n    MatSortHeader.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._rerenderSubscription;\n    /**\n     * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n     * provide an affordance that the header is sortable by showing on focus and hover.\n     * @type {?}\n     */\n    MatSortHeader.prototype._showIndicatorHint;\n    /**\n     * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n     * position through the animation. If animations are currently disabled, the fromState is removed\n     * so that there is no animation displayed.\n     * @type {?}\n     */\n    MatSortHeader.prototype._viewState;\n    /**\n     * The direction the arrow should be facing according to the current state.\n     * @type {?}\n     */\n    MatSortHeader.prototype._arrowDirection;\n    /**\n     * Whether the view state animation should show the transition between the `from` and `to` states.\n     * @type {?}\n     */\n    MatSortHeader.prototype._disableViewStateAnimation;\n    /**\n     * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n     * the column's name.\n     * @type {?}\n     */\n    MatSortHeader.prototype.id;\n    /**\n     * Sets the position of the arrow that displays when sorted.\n     * @type {?}\n     */\n    MatSortHeader.prototype.arrowPosition;\n    /**\n     * Overrides the sort start value of the containing MatSort for this MatSortable.\n     * @type {?}\n     */\n    MatSortHeader.prototype.start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._disableClear;\n    /** @type {?} */\n    MatSortHeader.prototype._intl;\n    /** @type {?} */\n    MatSortHeader.prototype._sort;\n    /** @type {?} */\n    MatSortHeader.prototype._columnDef;\n    /**\n     * @deprecated _focusMonitor and _elementRef to become required parameters.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSortHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSortModule {\n}\nMatSortModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSortModule });\nMatSortModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSortModule_Factory(t) { return new (t || MatSortModule)(); }, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSortModule, { declarations: function () { return [MatSort,\n        MatSortHeader]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MatSort,\n        MatSortHeader]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSortModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [MatSort, MatSortHeader],\n                declarations: [MatSort, MatSortHeader],\n                providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/sort-direction.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sort/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n\n//# sourceMappingURL=sort.js.map","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadInputConfig } from '../upload-input-config';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\n@Directive({\r\n    selector: '[uploadButton]'\r\n})\r\nexport class UploadButtonDirective implements OnInit {\r\n    @Input('uploadButton') config: UploadInputConfig = {};\r\n    @Output() filesSelected = new EventEmitter<UploadedFile[]>();\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('click', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            openUploadWindow(this.config).then(files => {\r\n                if (files && files.length) {\r\n                    this.filesSelected.emit(files);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {UploadButtonDirective} from './directives/upload-button.directive';\r\nimport {UploadDropzoneDirective} from './directives/upload-dropzone.directive';\r\nimport {UploadProgressBarComponent} from './upload-progress-bar/upload-progress-bar.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatIconModule,\r\n    ],\r\n    declarations: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n    exports: [\r\n        UploadDropzoneDirective,\r\n        UploadButtonDirective,\r\n        UploadProgressBarComponent,\r\n    ],\r\n})\r\nexport class UploadsModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'chip-input',\r\n    templateUrl: './chip-input.component.html',\r\n    styleUrls: ['./chip-input.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{\r\n        provide: NG_VALUE_ACCESSOR,\r\n        useExisting: ChipInputComponent,\r\n        multi: true,\r\n    }]\r\n})\r\nexport class ChipInputComponent implements ControlValueAccessor, OnInit {\r\n    @Input() placeholder: string;\r\n    @Input() type = 'text';\r\n    @Input() suggestFn: (query: string) => Observable<string[]>;\r\n    @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n    @ViewChild('inputEl', {static: true}) inputEl: HTMLInputElement;\r\n\r\n    public formControl = new FormControl();\r\n\r\n    public propagateChange: Function;\r\n    public items$ = new BehaviorSubject<string[]>([]);\r\n    public suggestedValues$ = new Subject<string[]>();\r\n\r\n    constructor(public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.suggestFn) {\r\n            this.bindToSearchControl();\r\n        }\r\n    }\r\n\r\n    public remove(index: number) {\r\n        const items = [...this.items$.value];\r\n        items.splice(index, 1);\r\n        this.items$.next(items);\r\n        this.propagateChange(this.items$.value);\r\n    }\r\n\r\n    public addFromChipInput(value: string, propagate = true) {\r\n        if ( ! this.matAutocomplete.isOpen) {\r\n            this.add(value, propagate);\r\n        }\r\n    }\r\n\r\n    public addFromAutocomplete(value: string, propagate = true) {\r\n        this.add(value, propagate);\r\n    }\r\n\r\n    private add(value: string, propagate = true) {\r\n        value = value ? value.trim() : '';\r\n        const duplicate = this.items$.value.indexOf(value) > -1;\r\n        if (value && !duplicate) {\r\n            this.items$.next([...this.items$.value, value]);\r\n            if (propagate) {\r\n                this.propagateChange(this.items$.value);\r\n            }\r\n        }\r\n        if (this.inputEl) {\r\n            this.inputEl.value = '';\r\n        }\r\n        this.formControl.setValue(null);\r\n        this.suggestedValues$.next([]);\r\n    }\r\n\r\n    public writeValue(value: string[] = []) {\r\n        if (value && value.length) {\r\n            value.forEach(item => this.add(item, false));\r\n        } else if (this.items$.value.length) {\r\n            while (this.items$.value.length !== 0) {\r\n                this.remove(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public registerOnChange(fn: Function) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    public registerOnTouched() {}\r\n\r\n    private bindToSearchControl() {\r\n        this.formControl.valueChanges.pipe(\r\n            debounceTime(150),\r\n            distinctUntilChanged(),\r\n            switchMap(query => query ? this.suggestFn(query) : of([])),\r\n            catchError(() => of([])),\r\n        ).subscribe(values => {\r\n            this.suggestedValues$.next(values);\r\n        });\r\n    }\r\n}\r\n","<mat-chip-list #chipList [selectable]=\"false\">\r\n    <mat-chip\r\n        *ngFor=\"let item of items$ | async; index as i\"\r\n        [selectable]=\"false\"\r\n        [removable]=\"true\"\r\n        (removed)=\"remove(i)\"\r\n    >\r\n        {{item}}\r\n        <mat-icon matChipRemove svgIcon=\"cancel\"></mat-icon>\r\n    </mat-chip>\r\n    <input [placeholder]=\"placeholder | trans\"\r\n           #inputEl\r\n           [type]=\"type\"\r\n           class=\"mat-chip-input mat-input-element\"\r\n           [matChipInputFor]=\"chipList\"\r\n           [matChipInputAddOnBlur]=\"true\"\r\n           [matAutocomplete]=\"auto\"\r\n           [matAutocompleteConnectedTo]=\"{elementRef: el}\"\r\n           [formControl]=\"formControl\"\r\n           (matChipInputTokenEnd)=\"addFromChipInput($event.value)\" />\r\n</mat-chip-list>\r\n<mat-autocomplete class=\"chip-input-autocomplete-panel\" #auto=\"matAutocomplete\" (optionSelected)=\"addFromAutocomplete($event.option.viewValue)\">\r\n    <mat-option *ngFor=\"let value of suggestedValues$ | async\" [value]=\"value\">{{value}}</mat-option>\r\n</mat-autocomplete>\r\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NoResultsMessageComponent} from '@common/core/ui/no-results-message/no-results-message.component';\n\n@NgModule({\n    declarations: [\n        NoResultsMessageComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        NoResultsMessageComponent,\n    ]\n})\nexport class NoResultsMessageModule {\n}\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ChipInputComponent} from './chip-input.component';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {TranslationsModule} from '@common/core/translations/translations.module';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatChipsModule,\r\n        MatIconModule,\r\n        MatAutocompleteModule,\r\n        ReactiveFormsModule,\r\n        TranslationsModule,\r\n    ],\r\n    declarations: [\r\n        ChipInputComponent\r\n    ],\r\n    exports: [\r\n        ChipInputComponent\r\n    ]\r\n})\r\nexport class ChipInputModule {\r\n}\r\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r4._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r8._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorage {\r\n    private readonly storage;\r\n\r\n    constructor() {\r\n        if (this.localStorageAvailable()) {\r\n            this.storage = localStorage;\r\n        } else {\r\n            this.storage = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve specified item from local storage.\r\n     */\r\n    public get<T>(key: string, defaultValue?: T): any|T {\r\n        if ( ! this.storage) return defaultValue;\r\n\r\n        let value;\r\n        try {\r\n            value = JSON.parse(this.storage.getItem(key));\r\n        } catch (e) {\r\n            //\r\n        }\r\n\r\n        return value == null ? defaultValue : value;\r\n    }\r\n\r\n    /**\r\n     * Store specified item in local storage.\r\n     */\r\n    public set(key: string, value: any) {\r\n        if ( ! this.storage) return null;\r\n        value = JSON.stringify(value);\r\n        this.storage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Remove specified item from local storage.\r\n     */\r\n    public remove(key: string) {\r\n        if ( ! this.storage) return null;\r\n        this.storage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Check if local storage is available.\r\n     */\r\n    public localStorageAvailable(): boolean {\r\n        const test = 'test';\r\n\r\n        try {\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r20.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r23.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r21.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r22 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r22._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r22._transformOrigin)(\"font-size\", ctx_r22._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r22.panelClass)(\"@transformPanel\", ctx_r22.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r18 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r18)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","import {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Settings} from '../../config/settings.service';\r\n\r\n@Pipe({\r\n    name: 'formattedDate'\r\n})\r\nexport class FormattedDatePipe implements PipeTransform {\r\n    private readonly format: string;\r\n    private angularPipe: DatePipe;\r\n\r\n    /**\r\n     * FormattedDatePipe Constructor.\r\n     */\r\n    constructor(private settings: Settings, @Inject(LOCALE_ID) private _locale: string) {\r\n        this.format = this.settings.get('dates.format', 'yyyy-MM-dd');\r\n        this.angularPipe = new DatePipe(_locale);\r\n    }\r\n\r\n    transform(value: any, format?: string, timezone?: string, locale?: string): string | null {\r\n        // iOS does not support YYYY-MM-DD\r\n        value = (value && typeof value === 'string' ) ? value.replace(/-/g, '/') : value;\r\n        return this.angularPipe.transform(value, format || this.format, timezone, locale);\r\n    }\r\n}\r\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormattedDatePipe} from '@common/core/ui/format-pipes/formatted-date.pipe';\nimport {FormattedFileSizePipe} from '@common/uploads/formatted-file-size.pipe';\n\n\n@NgModule({\n    declarations: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        FormattedDatePipe,\n        FormattedFileSizePipe,\n    ]\n})\nexport class FormatPipesModule {\n}\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-accent\", ctx_r5.color == \"accent\")(\"mat-warn\", ctx_r5.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r5.appearance != \"outline\")(\"id\", ctx_r5._labelId)(\"ngSwitch\", ctx_r5._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r5._control.id)(\"aria-owns\", ctx_r5._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.hideRequiredMarker && ctx_r5._control.required && !ctx_r5._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r7.color == \"accent\")(\"mat-warn\", ctx_r7.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r17._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r9._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy } from '@angular/core';\r\nimport { UploadQueueService } from '../upload-queue/upload-queue.service';\r\nimport { animationFrameScheduler, Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'upload-progress-bar',\r\n    templateUrl: './upload-progress-bar.component.html',\r\n    styleUrls: ['./upload-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadProgressBarComponent implements OnDestroy {\r\n    @HostBinding('class.hidden') hidden = true;\r\n    private subscription: Subscription;\r\n    public progress: number;\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        public uploadQueue: UploadQueueService,\r\n        private cd: ChangeDetectorRef,\r\n    ) {\r\n        this.subscription = this.uploadQueue.totalProgress()\r\n            // material progress bar animation lasts 250ms\r\n            .pipe(throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}))\r\n            .subscribe(progress => {\r\n                this.progress = progress;\r\n                this.hidden = progress === 100 || this.uploadQueue.count$.value.pending === 0;\r\n                this.cd.markForCheck();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}\r\n\r\n","<mat-progress-bar mode=\"determinate\" [value]=\"progress\" color=\"accent\"></mat-progress-bar>\r\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from 'common/core/http/app-http-client.service';\nimport {FOLDERS_API_ROUTES} from './folders-api-routes.enum';\nimport {DriveFolder} from '../models/driveFolder';\nimport {CurrentUser} from 'common/auth/current-user';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { PaginatedBackendResponse } from '@common/core/types/pagination/paginated-backend-response';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersApiService {\n\n    constructor(\n        private http: AppHttpClient,\n        private currentUser: CurrentUser\n    ) {}\n\n    public getAll(params?: {userId?: number}): PaginatedBackendResponse<DriveFolder> {\n        return this.http.get(FOLDERS_API_ROUTES.GET_ALL, params);\n    }\n\n    public getAllForCurrentUser(): BackendResponse<{folders: DriveFolder[]}> {\n        return this.http.get('drive/users/' + this.currentUser.get('id') + '/folders');\n    }\n\n    public create(params: {name: string, parent_id: number|'root'}): BackendResponse<{folder: DriveFolder}> {\n        if (params.parent_id === 'root') params.parent_id = null;\n        return this.http.post(FOLDERS_API_ROUTES.CREATE, params);\n    }\n\n    public getByHash(hash: string): BackendResponse<{folder: DriveFolder}> {\n        return this.http.get('drive/folders/find', {hash});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { DriveEntry } from './files/models/drive-entry';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { Tag } from 'common/core/types/models/Tag';\nimport { SortColumn, SortDirection } from './entries/available-sorts';\nimport { UserSpaceUsage } from './state/models/user-space-usage';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\n\nexport interface DriveApiIndexParams {\n    orderBy?: SortColumn;\n    orderDir?: SortDirection;\n    folderId?: number|'root';\n    userId?: number;\n    query?: string;\n    type?: string;\n    deletedOnly?: boolean;\n    starredOnly?: boolean;\n    sharedOnly?: boolean;\n    per_page?: number;\n    page?: number;\n    recentOnly?: boolean;\n}\n\nexport interface DriveEntriesPaginationResponse extends PaginationResponse<DriveFolder> {\n    folder?: DriveFolder;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveEntryApiService {\n    constructor(private http: AppHttpClient, private currentUser: CurrentUser) {}\n\n    public getEntriesForFolder(params: DriveApiIndexParams = {}): Observable<DriveEntriesPaginationResponse> {\n        return this.http.get('drive/entries', params);\n    }\n\n    public getCurrentUserEntries(params: DriveApiIndexParams): Observable<DriveEntriesPaginationResponse> {\n        params.userId = this.currentUser.get('id');\n        return this.http.get('drive/entries', params);\n    }\n\n    public update(entryId: number, params: {name?: string, description?: string}): BackendResponse<{fileEntry: DriveEntry}> {\n        return this.http.put('uploads/' + entryId, params);\n    }\n\n    public delete(params: {entryIds?: number[], deleteForever?: boolean, emptyTrash?: boolean}): BackendResponse<void> {\n        return this.http.delete('drive/entries', params);\n    }\n\n    public copy(params: {entryIds: number[]}): BackendResponse<{entries: DriveEntry[]}> {\n        return this.http.post('drive/entries/copy', params);\n    }\n\n    public restore(params: {entryIds: number[]}): BackendResponse<void> {\n        return this.http.post('drive/entries/restore', params);\n    }\n\n    public emptyTrash(): BackendResponse<void> {\n        return this.delete({emptyTrash: true});\n    }\n\n    public moveEntries(params: {entries: {id: number, type: string}[], destination: number|'root'}): BackendResponse<{entries: DriveEntry[]}> {\n        if (params.destination === 'root') params.destination = null;\n        return this.http.post('drive/entries/move', params);\n    }\n\n    public addStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/star', {ids});\n    }\n\n    public removeStar(ids: number[]): BackendResponse<{tag: Tag}> {\n        return this.http.post('drive/entries/unstar', {ids});\n    }\n\n    public getSpaceUsage(): BackendResponse<UserSpaceUsage> {\n        return this.http.get('drive/user/space-usage');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DriveFolder } from './folders/models/driveFolder';\nimport { ROOT_FOLDER, RootFolder } from './folders/root-folder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUrlsService {\n    public driveRoot() {\n        return '/drive';\n    }\n\n    public folder(folder: DriveFolder|RootFolder) {\n        if (folder === ROOT_FOLDER) {\n            return this.driveRoot();\n        } else {\n            return `/drive/folders/${(folder as DriveFolder).hash}`;\n        }\n    }\n}\n","import { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { SortColumn } from '../../entries/available-sorts';\r\nimport { RootFolder } from '../../folders/root-folder';\r\nimport {\r\n    DrivePage, FOLDER_PAGE, RECENT_PAGE, ROOT_FOLDER_PAGE, SEARCH_PAGE, SHARES_PAGE, STARRED_PAGE, TRASH_PAGE\r\n} from '../models/drive-page';\r\n\r\nexport interface LoadEntriesAction {\r\n    queryParams: DriveApiIndexParams;\r\n    page?: DrivePage;\r\n    folder?: DriveFolder|RootFolder;\r\n    loadMore?: boolean;\r\n}\r\n\r\nexport class RecentEntriesPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Recent Entries Page Opened';\r\n    public page = RECENT_PAGE;\r\n    public queryParams = {orderBy: 'created_at' as SortColumn, recentOnly: true};\r\n}\r\n\r\nexport class FolderPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Folder Page Opened';\r\n    public page: DrivePage;\r\n    public queryParams = {};\r\n    constructor(folderHash: string|'root') {\r\n        const page = folderHash === 'root' ? ROOT_FOLDER_PAGE : FOLDER_PAGE;\r\n        this.page = {...page, folderHash};\r\n    }\r\n}\r\n\r\nexport class SharesFolderOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Shared with me folder opened';\r\n    public page = SHARES_PAGE;\r\n    public queryParams = {sharedOnly: true};\r\n}\r\n\r\nexport class TrashPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Trash Page Opened';\r\n    public page = TRASH_PAGE;\r\n    public queryParams = {deletedOnly: true};\r\n}\r\n\r\nexport class SearchPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Search Page Opened';\r\n    public page = SEARCH_PAGE;\r\n    constructor(public queryParams: {\r\n        type?: string;\r\n        query?: string;\r\n    } = {}) {}\r\n}\r\n\r\nexport class StarredPageOpened implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Starred Entries Page Opened';\r\n    public page = STARRED_PAGE;\r\n    public queryParams = {starredOnly: true};\r\n}\r\n\r\nexport class EntriesSelectedViaDrag {\r\n    static readonly type = '[Drive] Entries Selected Via Drag';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntrySelectedViaContextMenu {\r\n    static readonly type = '[Drive] File Selected Via ContextMenu';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryTapped {\r\n    static readonly type = '[Drive] User Tapped File';\r\n    constructor(public entry: DriveEntry, public ctrlKey = false) {}\r\n}\r\n\r\nexport class EntryDoubleTapped {\r\n    static readonly type = '[Drive] User Double Tapped Entry';\r\n    constructor(public entry: DriveEntry) {}\r\n}\r\n\r\nexport class FileDeleteSuccess {\r\n    static readonly type = '[Drive] Successfully Deleted Files';\r\n    constructor(public deletedFiles: DriveEntry[]) {}\r\n}\r\n\r\nexport class EntryContextMenuOpened {\r\n    static readonly type = '[Drive] Entry Context Menu Opened';\r\n    constructor(public entry: DriveEntry|RootFolder) {}\r\n}\r\n\r\nexport class NewFolderCreated {\r\n    static readonly type = '[Drive] New Folder Created';\r\n    constructor(public folder: DriveFolder) {}\r\n}\r\n\r\nexport class EntryRenamed {\r\n    static readonly type = '[Drive] Entry Renamed';\r\n    constructor(public entry: DriveEntry, public newName: string) {}\r\n}\r\n\r\nexport class StartedDragging {\r\n    static readonly type = '[Drive] Started Dragging';\r\n}\r\n\r\nexport class StoppedDragging {\r\n    static readonly type = '[Drive] Stopped Dragging';\r\n}\r\n\r\nexport class MoveEntriesSuccess {\r\n    static readonly type = '[Drive API] Move Entries Success';\r\n    constructor(\r\n        public destination: number | 'root',\r\n        public oldLocation: number | 'root',\r\n        public entries: DriveEntry[]\r\n    ) {}\r\n}\r\n\r\nexport class MoveEntriesFailed {\r\n    static readonly type = '[Drive API] Move Entries Failed';\r\n    constructor(public messages: object) {}\r\n}\r\n\r\nexport class TrashedEntriesDeleteSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Delete Forever Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class TrashedEntriesRestoreSuccess {\r\n    static readonly type = '[Drive API] Trashed Entries Restore Success';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class NotEnoughSpaceError {\r\n    static readonly type = '[Drive] Not Enough Space Error';\r\n}\r\n\r\nexport class UserSpaceUsageChanged {\r\n    static readonly type = '[Drive] User Space Usage Changed';\r\n}\r\n\r\nexport class BreakpointChanged {\r\n    static readonly type = '[Drive] BreakpointChanged';\r\n    constructor(public status: {isMobile: boolean}) {}\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { UploadValidator } from 'common/uploads/validation/upload-validator';\nimport { FileSizeValidation } from 'common/uploads/validation/validations/file-size-validation';\nimport { convertToBytes } from 'common/core/utils/convertToBytes';\nimport { AllowedExtensionsValidation } from 'common/uploads/validation/validations/allowed-extensions-validation';\nimport { BlockedExtensionsValidation } from 'common/uploads/validation/validations/blocked-extensions-validation';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveUploadValidator extends UploadValidator {\n    protected readonly DEFAULT_MAX_FILE_SIZE_MB = 8;\n\n    protected initValidations() {\n        this.validations.push(\n            new FileSizeValidation(\n                {maxSize: this.getMaxFileSize()},\n                this.i18n\n            )\n        );\n\n        const allowedExtensions = this.getAllowedExtensions(),\n            blockedExtensions = this.getBlockedExtensions();\n\n        if (allowedExtensions && allowedExtensions.length) {\n            this.validations.push(new AllowedExtensionsValidation(\n                {extensions: allowedExtensions}, this.i18n\n            ));\n        }\n\n        if (blockedExtensions && blockedExtensions.length) {\n            this.validations.push(new BlockedExtensionsValidation(\n                {extensions: blockedExtensions}, this.i18n\n            ));\n        }\n    }\n\n    protected getMaxFileSize(): number {\n        return this.settings.get(\n            'uploads.max_size',\n            convertToBytes(this.DEFAULT_MAX_FILE_SIZE_MB, 'MB')\n        );\n    }\n\n    protected getAllowedExtensions() {\n        return this.settings.getJson('uploads.allowed_extensions');\n    }\n\n    protected getBlockedExtensions() {\n        return this.settings.getJson('uploads.blocked_extensions');\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\nimport { UploadInputConfig } from '../../common/uploads/upload-input-config';\r\n\r\nexport const DRIVE_UPLOAD_INPUT_CONFIG = new InjectionToken<UploadInputConfig>('DRIVE_UPLOAD_INPUT_CONFIG');","import { DriveFolder } from '../folders/models/driveFolder';\r\nimport { DriveEntry } from '../files/models/drive-entry';\r\nimport { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { FoldersApiService } from '../folders/api/folders-api.service';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveApiIndexParams, DriveEntryApiService } from '../drive-entry-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DriveUrlsService } from '../drive-urls.service';\r\nimport { RouterState } from '@ngxs/router-plugin';\r\nimport isEqual from 'lodash/isEqual';\r\nimport {\r\n    AddEntries,\r\n    BuildFolderTree,\r\n    DeleteSelectedEntries,\r\n    DeleteTrashedEntriesForever,\r\n    DeselectAllEntries,\r\n    EmptyTrash,\r\n    LoadUserFolders,\r\n    MoveEntries,\r\n    OpenConfirmDialog,\r\n    OpenFolder,\r\n    OpenUploadsPanel,\r\n    RestoreTrashedEntries,\r\n    SelectEntries,\r\n    ToggleDetailsSidebar,\r\n    SetViewMode,\r\n    UploadFiles,\r\n    OpenFilePreview,\r\n    AddStar,\r\n    RemoveStar,\r\n    RemoveEntries,\r\n    OpenSearchPage,\r\n    LoadMoreEntries,\r\n    ReloadPageEntries,\r\n    ToggleSidebar,\r\n    CopySelectedEntries,\r\n    OpenUploadWindow,\r\n    LoadUserSpaceUsage,\r\n    ShowLoadingToast,\r\n    HideLoadingToast,\r\n    ResetState,\r\n    UpdateEntries,\r\n    SelectAllEntries,\r\n    SetCurrentUser, UpdateEntryDescription,\r\n} from './actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    EntryContextMenuOpened,\r\n    FileDeleteSuccess,\r\n    EntryDoubleTapped,\r\n    EntrySelectedViaContextMenu,\r\n    EntriesSelectedViaDrag,\r\n    EntryTapped,\r\n    FolderPageOpened,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated,\r\n    RecentEntriesPageOpened,\r\n    SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    StartedDragging,\r\n    StoppedDragging,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess,\r\n    TrashPageOpened,\r\n    LoadEntriesAction,\r\n    UserSpaceUsageChanged,\r\n    NotEnoughSpaceError, BreakpointChanged\r\n} from './actions/events';\r\nimport { DriveStateModel, VIEW_MODE_KEY } from './models/drive-state-model';\r\nimport { DRIVE_STATE_MODEL_DEFAULTS } from './models/drive-state-model-defaults';\r\nimport { LocalStorage } from 'common/core/services/local-storage.service';\r\nimport { ROOT_FOLDER, RootFolder } from '../folders/root-folder';\r\nimport { UploadQueueService } from 'common/uploads/upload-queue/upload-queue.service';\r\nimport { DriveUploadValidator } from '../uploads/drive-upload-validator';\r\nimport { openUploadWindow } from 'common/uploads/utils/open-upload-window';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\r\nimport { UploadedFile } from 'common/uploads/uploaded-file';\r\nimport { UserSpaceUsage } from './models/user-space-usage';\r\nimport { LoadingToastMessages } from '../messages/loading-toast/loading-toast-messages';\r\nimport { User } from 'common/core/types/models/User';\r\nimport { DrivePage, TRASH_PAGE } from './models/drive-page';\r\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../upload-input-config';\r\nimport { Tag } from 'common/core/types/models/Tag';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { hasKey } from '@common/core/utils/has-key';\r\n\r\n@State<DriveStateModel>({\r\n    name: 'drive',\r\n    defaults: DRIVE_STATE_MODEL_DEFAULTS,\r\n})\r\n@Injectable()\r\nexport class DriveState {\r\n    constructor(\r\n        private foldersApi: FoldersApiService,\r\n        private entriesApi: DriveEntryApiService,\r\n        private router: Router,\r\n        private driveUrls: DriveUrlsService,\r\n        private uploads: UploadQueueService,\r\n        private store: Store,\r\n        private localStore: LocalStorage,\r\n        private validator: DriveUploadValidator,\r\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadInputConfig: UploadInputConfig,\r\n    ) {}\r\n\r\n    @Selector()\r\n    static flatFolders(state: DriveStateModel) {\r\n        return state.flatFolders;\r\n    }\r\n\r\n    @Selector()\r\n    static userFoldersLoaded(state: DriveStateModel) {\r\n        return state.userFoldersLoaded;\r\n    }\r\n\r\n    @Selector()\r\n    static activePage(state: DriveStateModel) {\r\n        return state.activePage;\r\n    }\r\n\r\n    @Selector()\r\n    static activePageName(state: DriveStateModel) {\r\n        return state.activePage.name;\r\n    }\r\n\r\n    @Selector()\r\n    static userFolders(state: DriveStateModel) {\r\n        return state.folderTree;\r\n    }\r\n\r\n    @Selector()\r\n    static selectedEntries(state: DriveStateModel) {\r\n        return state.selectedEntries;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntryIds(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.map(entry => entry.id);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedEntry(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected ? selected[selected.length - 1] : null;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntry])\r\n    static selectedEntryOrActiveFolder(state: DriveStateModel, selected: DriveEntry[]) {\r\n        return selected || state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntryOrActiveFolder, DriveState.flatFolders])\r\n    static selectedEntryParent(state: DriveStateModel, selected: DriveFolder, folders: {[key: number]: DriveFolder}) {\r\n        if ( ! selected || ! folders || ! selected.parent_id) return ROOT_FOLDER;\r\n        return folders[selected.parent_id];\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static anythingSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static allSelectedEntriesStarred(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => !!entry.tags.find(tag => tag.name === 'starred'));\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static onlyFoldersSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.every(entry => entry.type === 'folder');\r\n    }\r\n\r\n    @Selector()\r\n    static entries(state: DriveStateModel) {\r\n        return state.entries;\r\n    }\r\n\r\n    @Selector()\r\n    static entriesEmpty(state: DriveStateModel) {\r\n        // only return true if entries have already loaded\r\n        return state.meta.currentPage && ! state.loading && state.entries.length === 0;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static multipleEntriesSelected(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        return selectedEntries.length > 1;\r\n    }\r\n\r\n    @Selector()\r\n    static activeFolder(state: DriveStateModel) {\r\n        return state.activePage.folder;\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries])\r\n    static selectedFolderId(state: DriveStateModel, selectedEntries: DriveEntry[]) {\r\n        const folder = selectedEntries.filter(entry => entry.type === 'folder')[0];\r\n        return folder ? folder.id : null;\r\n    }\r\n\r\n    @Selector()\r\n    static meta(state: DriveStateModel) {\r\n        return state.meta;\r\n    }\r\n\r\n    @Selector()\r\n    static dragging(state: DriveStateModel) {\r\n        return state.dragging;\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: DriveStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static currentPage(state: DriveStateModel) {\r\n        return state.meta.currentPage;\r\n    }\r\n\r\n    @Selector()\r\n    static viewMode(state: DriveStateModel) {\r\n        return state.viewMode;\r\n    }\r\n\r\n    @Selector()\r\n    static detailsOpen(state: DriveStateModel) {\r\n        return state.detailsVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static sidebarOpen(state: DriveStateModel) {\r\n        return state.sidebarOpen;\r\n    }\r\n\r\n    @Selector()\r\n    static sortColumn(state: DriveStateModel) {\r\n        return state.meta.sortColumn;\r\n    }\r\n\r\n    @Selector()\r\n    static sortDirection(state: DriveStateModel) {\r\n        return state.meta.sortDirection;\r\n    }\r\n\r\n    @Selector()\r\n    static canLoadMoreEntries(state: DriveStateModel) {\r\n        return state.meta.currentPage < state.meta.lastPage;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceUsed(state: DriveStateModel) {\r\n        return state.spaceUsage.used;\r\n    }\r\n\r\n    @Selector()\r\n    static userSpaceAvailable(state: DriveStateModel) {\r\n        return state.spaceUsage.available;\r\n    }\r\n\r\n    @Selector([DriveState.userSpaceUsed, DriveState.userSpaceAvailable])\r\n    static spaceUsedPercent(state: DriveStateModel, spaceUsed: number, spaceAvail: number) {\r\n        // null means that user has unlimited space available\r\n        return spaceAvail === null ? 0 : ((spaceUsed * 100) / spaceAvail);\r\n    }\r\n\r\n    @Selector()\r\n    static isMobile(state: DriveStateModel) {\r\n        return state.isMobile;\r\n    }\r\n\r\n    static userHasPermission(permission: 'edit'|'owner', folder: DriveEntry|RootFolder, user: User) {\r\n        // we are not in a folder view, can bail\r\n        if ( ! folder || ! user) return false;\r\n\r\n        if (folder.id === 'root') return true;\r\n\r\n        // check if user is the owner of currently open folder\r\n        const folderUser = (folder as DriveEntry).users.find(u => u.id === user.id);\r\n\r\n        if (folderUser.owns_entry) return true;\r\n\r\n        return folderUser.entry_permissions[permission];\r\n    }\r\n\r\n    @Selector()\r\n    static currentUser(state: DriveStateModel) {\r\n        return state.currentUser;\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userOwnsActiveFolder(state: DriveStateModel, activeFolder: DriveEntry|RootFolder, currentUser: User) {\r\n       return DriveState.userHasPermission('owner', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.activeFolder, DriveState.currentUser])\r\n    static userCanEditSelectedFolder(state: DriveStateModel, activeFolder: DriveEntry|RootFolder, currentUser: User) {\r\n        return DriveState.userHasPermission('edit', activeFolder, currentUser);\r\n    }\r\n\r\n    @Selector([DriveState.selectedEntries, DriveState.currentUser])\r\n    static userCanEditSelectedEntries(state: DriveStateModel, entries: DriveEntry[], currentUser: User) {\r\n        return entries.every(entry => {\r\n            const user = entry.users.find(u => u.id === currentUser.id);\r\n            return user && (user.owns_entry || user.entry_permissions.edit);\r\n        });\r\n    }\r\n\r\n    @Selector([DriveState.activePage, DriveState.userCanEditSelectedFolder])\r\n    static canUpload(state: DriveStateModel, page: DrivePage, userCanEditFolder: boolean) {\r\n        return page.folder && userCanEditFolder;\r\n    }\r\n\r\n    @Action(LoadUserFolders)\r\n    loadUserFolders(ctx: StateContext<DriveStateModel>) {\r\n        return this.foldersApi.getAllForCurrentUser().pipe(tap(response => {\r\n            return ctx.dispatch(new BuildFolderTree(response.folders));\r\n        }));\r\n    }\r\n\r\n    @Action(BuildFolderTree)\r\n    buildFolderTree(ctx: StateContext<DriveStateModel>, action: BuildFolderTree) {\r\n        let hashTable = {}; const tree = [];\r\n\r\n        if (action.folders) {\r\n            for (let i = 0, len = action.folders.length; i < len; i++) {\r\n                const folder = action.folders[i];\r\n                hashTable[folder.id] = folder;\r\n            }\r\n        } else {\r\n            hashTable = ctx.getState().flatFolders;\r\n        }\r\n\r\n        for (const id in hashTable) {\r\n            if ( ! hashTable.hasOwnProperty(id)) continue;\r\n            const folder = hashTable[id];\r\n\r\n            // clear children from previous builds, to prevent duplicates\r\n            folder.children = [];\r\n\r\n            if (folder.parent_id) {\r\n                const parent = hashTable[folder.parent_id];\r\n                if (parent) {\r\n                    if ( ! parent.children) parent.children = [];\r\n                    parent.children.push(folder);\r\n                }\r\n            } else {\r\n                tree.push(folder);\r\n            }\r\n        }\r\n\r\n        ctx.patchState({\r\n            folderTree: tree,\r\n            flatFolders: hashTable,\r\n            userFoldersLoaded: true,\r\n        });\r\n    }\r\n\r\n    @Action(FolderPageOpened)\r\n    @Action(RecentEntriesPageOpened)\r\n    @Action(TrashPageOpened)\r\n    @Action(StarredPageOpened)\r\n    @Action(SearchPageOpened)\r\n    @Action(SharesFolderOpened)\r\n    @Action(ReloadPageEntries)\r\n    @Action(LoadMoreEntries)\r\n    loadDriveEntries(ctx: StateContext<DriveStateModel>, action: LoadEntriesAction) {\r\n        const oldState = ctx.getState(),\r\n            newState = {loading: true, meta: {...oldState.meta}} as Partial<DriveStateModel>;\r\n\r\n        // only replace active page if it's actually specified, this way\r\n        // \"Reload\" and \"LoadMore\" actions will not remove active page\r\n        newState.activePage = action.page ? action.page : oldState.activePage;\r\n\r\n        // set sorting from specified query params or specified page or currently active page\r\n        newState.meta.sortColumn = action.queryParams.orderBy || oldState.meta.sortColumn || newState.activePage.sortColumn;\r\n        newState.meta.sortDirection = action.queryParams.orderDir || oldState.meta.sortDirection || newState.activePage.sortDirection;\r\n\r\n        // if it's not search page, clear type and query\r\n        if (newState.activePage.name !== 'search') {\r\n            newState.meta.query = null;\r\n            newState.meta.type = null;\r\n        }\r\n\r\n        newState.meta.query = action.queryParams.query || newState.meta.query;\r\n        newState.meta.type = action.queryParams.type || newState.meta.type;\r\n\r\n        ctx.patchState(newState);\r\n        const params = this.transformQueryParams({\r\n            ...action.queryParams,\r\n            ...newState.activePage.queryParams,\r\n        });\r\n\r\n        return this.entriesApi.getEntriesForFolder(params).pipe(tap(response => {\r\n            const entries = action.loadMore ? oldState.entries : [];\r\n\r\n            const state = {\r\n                entries: entries.concat(response.data),\r\n                meta: {\r\n                    ...newState.meta,\r\n                    lastPage: response.last_page,\r\n                    currentPage: response.current_page\r\n                },\r\n                loading: false\r\n            } as Partial<DriveStateModel>;\r\n\r\n            // make sure \"root\" page folder is not overridden, it's\r\n            // a static constant, so is not returned from backend\r\n            if (newState.activePage.name !== 'root') {\r\n                state.activePage = {\r\n                    ...newState.activePage,\r\n                    folder: response.folder,\r\n                };\r\n            }\r\n\r\n            return ctx.patchState(state);\r\n        }, () => {\r\n            return ctx.patchState({loading: false});\r\n        }));\r\n    }\r\n\r\n    @Action(OpenFolder, {cancelUncompleted: true})\r\n    openFolder(ctx: StateContext<DriveStateModel>, action: OpenFolder) {\r\n        const currentFolder = ctx.getState().activePage.folder;\r\n        if (currentFolder && action.folder.id === currentFolder.id) return;\r\n\r\n        if (action.folder && action.folder['deleted_at']) {\r\n            return ctx.dispatch(new OpenConfirmDialog({\r\n                title: 'Folder is in trash',\r\n                body: 'To view this folder, you need to restore it first.',\r\n                ok: 'Restore'\r\n            }, new RestoreTrashedEntries()));\r\n        } else {\r\n            ctx.patchState({loading: true});\r\n            return this.router.navigate([this.driveUrls.folder(action.folder)]);\r\n        }\r\n    }\r\n\r\n    @Action(OpenSearchPage, {cancelUncompleted: true})\r\n    openSearchPage(ctx: StateContext<DriveStateModel>, action: OpenSearchPage) {\r\n        const oldParams = this.store.selectSnapshot(RouterState.state).root.queryParams;\r\n        if (isEqual(oldParams, action.queryParams)) return;\r\n        ctx.patchState({loading: true});\r\n        return this.router.navigate(['/drive/search'], {queryParams: action.queryParams});\r\n    }\r\n\r\n    @Action(EntriesSelectedViaDrag)\r\n    @Action(EntrySelectedViaContextMenu)\r\n    @Action(SelectEntries)\r\n    selectEntries(ctx: StateContext<DriveStateModel>, action: EntriesSelectedViaDrag | EntrySelectedViaContextMenu | SelectEntries) {\r\n        ctx.patchState({selectedEntries: action.entries});\r\n    }\r\n\r\n    @Action(DeselectAllEntries)\r\n    deselectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        if ( ! ctx.getState().selectedEntries.length) return;\r\n        ctx.patchState({selectedEntries: []});\r\n    }\r\n\r\n    @Action(SelectAllEntries)\r\n    SelectAllEntries(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({selectedEntries: ctx.getState().entries.slice()});\r\n    }\r\n\r\n    @Action(EntryTapped)\r\n    entryTapped(ctx: StateContext<DriveStateModel>, action: EntryTapped) {\r\n        if (ctx.getState().isMobile) {\r\n            this.entryDoubleTapped(ctx, action);\r\n            return;\r\n        }\r\n\r\n        const current = ctx.getState().selectedEntries.slice();\r\n        let alreadySelected = false;\r\n\r\n        // remove entry with matching ID (if exists) to avoid duplicates\r\n        const i = current.findIndex(curr => curr.id === action.entry.id);\r\n        if (i > -1) {\r\n            current.splice(i, 1);\r\n            alreadySelected = true;\r\n        }\r\n\r\n        if (action.ctrlKey) {\r\n            if (alreadySelected) {\r\n                ctx.patchState({selectedEntries: current});\r\n            } else {\r\n                ctx.patchState({selectedEntries: [...current, action.entry]});\r\n            }\r\n        } else {\r\n            ctx.patchState({selectedEntries: [action.entry]});\r\n        }\r\n    }\r\n\r\n    @Action(EntryDoubleTapped)\r\n    entryDoubleTapped(ctx: StateContext<DriveStateModel>, action: EntryDoubleTapped) {\r\n        if (action.entry.type === 'folder') {\r\n            return ctx.dispatch(new OpenFolder(action.entry as DriveFolder));\r\n        } else {\r\n            return ctx.dispatch(new OpenFilePreview([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(DeleteSelectedEntries)\r\n    deleteSelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = this.store.selectSnapshot(DriveState.selectedEntryIds),\r\n            flatFolders = this.store.selectSnapshot(DriveState.flatFolders),\r\n            activePage = ctx.getState().activePage;\r\n\r\n        return this.entriesApi.delete({entryIds}).pipe(tap(() => {\r\n            // filter out deleted entries\r\n            const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n            const newState = {entries: newEntries} as Partial<DriveStateModel>,\r\n                actions = [new FileDeleteSuccess(entries)] as any[];\r\n\r\n            // clear selected entries\r\n            newState.selectedEntries = [];\r\n\r\n            // if selected folder was active, navigate to its parent\r\n            if (activePage.folder && entryIds.indexOf(activePage.folder.id) > -1) {\r\n                this.store.dispatch(new OpenFolder(this.store.selectSnapshot(DriveState.selectedEntryParent)));\r\n            }\r\n\r\n            // rebuild folders tree\r\n            const folders = entries.filter(entry => entry.type === 'folder');\r\n            if (folders.length) {\r\n                folders.forEach(folder => delete flatFolders[folder.id]);\r\n                newState.flatFolders = flatFolders;\r\n                actions.push(new BuildFolderTree());\r\n            }\r\n\r\n            ctx.patchState(newState);\r\n            return ctx.dispatch(actions);\r\n        }));\r\n    }\r\n\r\n    @Action(EntryContextMenuOpened)\r\n    fileContextMenuOpened(ctx: StateContext<DriveStateModel>, action: EntryContextMenuOpened) {\r\n        if ( ! action.entry || action.entry.id === 'root') return;\r\n\r\n        const fileAlreadySelected = ctx.getState().selectedEntries\r\n            .find(entry => entry.id === action.entry.id);\r\n\r\n        if ( ! fileAlreadySelected) {\r\n            return ctx.dispatch(new EntrySelectedViaContextMenu([action.entry]));\r\n        }\r\n    }\r\n\r\n    @Action(NewFolderCreated)\r\n    newFolderCreated(ctx: StateContext<DriveStateModel>, action: NewFolderCreated) {\r\n        const state = ctx.getState(),\r\n            newFolderId = action.folder.parent_id || 'root';\r\n\r\n        // start new folder into user folders cache\r\n        const newState = {\r\n            flatFolders: {...state.flatFolders, [action.folder.id]: action.folder}\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // push new folder into parent folder entries, if parent is currently open\r\n        if (newFolderId === state.activePage.folder.id) {\r\n            newState.entries = [action.folder, ...state.entries];\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n\r\n        // rebuild folder tree\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(EntryRenamed)\r\n    entryRenamed(ctx: StateContext<DriveStateModel>, action: EntryRenamed) {\r\n        const state = ctx.getState(),\r\n            newState = {entries: state.entries.slice()} as Partial<DriveStateModel>,\r\n            i = newState.entries.findIndex(curr => curr.id === action.entry.id);\r\n\r\n        // rename entry inside main entries array\r\n        if (i > -1) {\r\n            newState.entries[i] = {...newState.entries[i], name: action.newName};\r\n        }\r\n\r\n        // rename entry inside selected entries array\r\n        newState.selectedEntries = [{...state.selectedEntries[0], name: action.newName}];\r\n\r\n        // rename active folder\r\n        if (state.activePage.folder && state.activePage.folder.id === action.entry.id) {\r\n            newState.activePage = {...state.activePage, folder: action.entry};\r\n        }\r\n\r\n        // rebuild folder tree\r\n        if (action.entry.type === 'folder') {\r\n            const flatFolders = {...state.flatFolders};\r\n            flatFolders[action.entry.id] = {...flatFolders[action.entry.id], name: action.newName};\r\n            newState.flatFolders = flatFolders;\r\n            ctx.dispatch(new BuildFolderTree());\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n    }\r\n\r\n    @Action(StartedDragging)\r\n    startedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: true});\r\n    }\r\n\r\n    @Action(StoppedDragging)\r\n    stoppedDragging(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({dragging: false});\r\n    }\r\n\r\n    @Action(MoveEntries)\r\n    movieEntries(ctx: StateContext<DriveStateModel>, action: MoveEntries) {\r\n        const entries = action.entries || ctx.getState().selectedEntries;\r\n\r\n        if ( ! DriveState.canMoveEntriesTo(entries, action.destination)) return;\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.moveEntries));\r\n\r\n        const minimal = entries.map(entry => {\r\n            return {id: entry.id, type: entry.type === 'folder' ? 'folder' : 'file'};\r\n        });\r\n\r\n        const oldLocation = entries[0].parent_id;\r\n\r\n        return this.entriesApi.moveEntries({entries: minimal, destination: action.destination.id}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                return ctx.dispatch(new MoveEntriesSuccess(action.destination.id, oldLocation, response.entries));\r\n            }, error => {\r\n                return ctx.dispatch(new MoveEntriesFailed(error.messages));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(MoveEntriesSuccess)\r\n    moveEntriesSuccess(ctx: StateContext<DriveStateModel>, action: MoveEntriesSuccess) {\r\n        const state = ctx.getState(),\r\n            entryIds = action.entries.map(entry => entry.id),\r\n            folders = action.entries.filter(entry => entry.type === 'folder');\r\n\r\n        // remove moved entries from old folder\r\n        const newState = {\r\n            selectedEntries: [],\r\n            entries: state.entries.filter(entry => entryIds.indexOf(entry.id) === -1)\r\n        } as Partial<DriveStateModel>;\r\n\r\n        // rebuild folder tree\r\n        if (folders.length) {\r\n            newState.flatFolders = {...state.flatFolders};\r\n            action.entries\r\n                .filter(entry => entry.type === 'folder')\r\n                .forEach(entry => newState.flatFolders[entry.id] = entry as DriveFolder);\r\n        }\r\n\r\n        // update active folder\r\n        if (state.activePage.folder) {\r\n            const folder = action.entries.find(entry => state.activePage.folder.id === entry.id);\r\n            if (folder) newState.activePage = {...state.activePage, folder};\r\n        }\r\n\r\n        ctx.patchState(newState);\r\n        return ctx.dispatch(new BuildFolderTree());\r\n    }\r\n\r\n    @Action(SetViewMode)\r\n    setViewMode(ctx: StateContext<DriveStateModel>, action: SetViewMode) {\r\n        this.localStore.set(VIEW_MODE_KEY, action.mode);\r\n        ctx.patchState({viewMode: action.mode});\r\n    }\r\n\r\n    @Action(ToggleDetailsSidebar)\r\n    toggleDetailsSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            detailsVisible: !ctx.getState().detailsVisible\r\n        });\r\n    }\r\n\r\n    @Action(ToggleSidebar)\r\n    toggleSidebar(ctx: StateContext<DriveStateModel>) {\r\n        ctx.patchState({\r\n            sidebarOpen: !ctx.getState().sidebarOpen\r\n        });\r\n    }\r\n\r\n    @Action(AddEntries)\r\n    addEntries(ctx: StateContext<DriveStateModel>, action: AddEntries) {\r\n        const currentEntries = ctx.getState().entries,\r\n            spaceUsage = ctx.getState().spaceUsage;\r\n\r\n        const newEntries = action.entries\r\n            .filter(entry => !currentEntries.find(curr => curr.id === entry.id));\r\n\r\n        const newSize = newEntries.filter(entry => entry.type !== 'folder')\r\n            .reduce((sum, entry) => sum + entry.file_size, 0);\r\n\r\n        ctx.patchState({\r\n            entries: [...newEntries, ...currentEntries],\r\n            spaceUsage: {...spaceUsage, used: spaceUsage.used + newSize}\r\n        });\r\n    }\r\n\r\n    @Action(UploadFiles)\r\n    uploadFiles(ctx: StateContext<DriveStateModel>, action: UploadFiles) {\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, action.files)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        if ( ! action.files.length) return;\r\n\r\n        ctx.dispatch(new OpenUploadsPanel());\r\n\r\n        const state = ctx.getState(),\r\n            folder = state.activePage.folder,\r\n            parentId = (folder && folder !== ROOT_FOLDER) ? folder.id : null;\r\n\r\n        const config = {\r\n            httpParams: {parentId},\r\n            validator: this.validator,\r\n        };\r\n\r\n        return this.uploads.start(action.files, config).pipe(\r\n            tap(response => {\r\n                // get parent folders, if user has uploaded folders and not single files\r\n                const entries = [response.fileEntry.parent, response.fileEntry];\r\n\r\n                // remove all entries that are not direct child of currently open folder\r\n                const newEntries = entries\r\n                    .filter(newEntry => newEntry && newEntry.parent_id === parentId);\r\n\r\n                // add newly uploaded files and created folders\r\n                ctx.dispatch(new AddEntries(newEntries as DriveEntry[]));\r\n\r\n                // rebuild folder tree, if there are any folders\r\n                const folders = entries.filter(entry => entry && entry.type === 'folder');\r\n                if (folders.length) {\r\n                    const flatFolders = {...ctx.getState().flatFolders};\r\n                    folders.forEach(f => flatFolders[f.id] = f as DriveFolder);\r\n                    ctx.patchState({flatFolders});\r\n                    ctx.dispatch(new BuildFolderTree());\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(DeleteTrashedEntriesForever)\r\n    deleteTrashedEntriesForever(ctx: StateContext<DriveStateModel>) {\r\n        const selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = selectedEntries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n\r\n        return this.entriesApi.delete({entryIds, deleteForever: true}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch([\r\n                new TrashedEntriesDeleteSuccess(selectedEntries),\r\n                new UserSpaceUsageChanged(),\r\n            ]);\r\n        }));\r\n    }\r\n\r\n    @Action(RestoreTrashedEntries)\r\n    restoreTrashedEntries(ctx: StateContext<DriveStateModel>, action: RestoreTrashedEntries) {\r\n        const activePage = this.store.selectSnapshot(DriveState.activePage);\r\n        const restoredEntries = action.entries || this.store.selectSnapshot(DriveState.selectedEntries);\r\n        const entryIds = restoredEntries.map(entry => entry.id);\r\n        let newEntries: DriveEntry[];\r\n\r\n        if (activePage.name === TRASH_PAGE.name) {\r\n            newEntries = ctx.getState().entries\r\n                .filter(entry => entryIds.indexOf(entry.id) === -1);\r\n        } else {\r\n            newEntries = [...ctx.getState().entries, ...action.entries];\r\n        }\r\n\r\n        return this.entriesApi.restore({entryIds}).pipe(tap(() => {\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: [],\r\n            });\r\n\r\n            return ctx.dispatch(new TrashedEntriesRestoreSuccess(restoredEntries));\r\n        }));\r\n    }\r\n\r\n    @Action(EmptyTrash, {cancelUncompleted: true})\r\n    emptyTrash(ctx: StateContext<DriveStateModel>) {\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.emptyTrash));\r\n\r\n        return this.entriesApi.emptyTrash().pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(() => {\r\n                ctx.patchState({\r\n                    entries: [],\r\n                    selectedEntries: [],\r\n                });\r\n\r\n                return ctx.dispatch(new UserSpaceUsageChanged());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(AddStar, {cancelUncompleted: true})\r\n    addStar(ctx: StateContext<DriveStateModel>, action: AddStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.addStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) {\r\n                    if ( ! entry.tags) entry.tags = [];\r\n                    entry.tags.push(response.tag);\r\n                }\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries.map(entry => {\r\n                entry.tags.push(response.tag);\r\n                return entry;\r\n            });\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries,\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveStar, {cancelUncompleted: true})\r\n    removeStar(ctx: StateContext<DriveStateModel>, action: RemoveStar) {\r\n        const state = ctx.getState(),\r\n            ids = action.entries.map(entry => entry.id);\r\n\r\n        return this.entriesApi.removeStar(ids).pipe(tap(response => {\r\n            const newEntries = state.entries.map(entry => {\r\n                if (ids.indexOf(entry.id) > -1) this.removeTag(entry, response.tag);\r\n                return entry;\r\n            });\r\n\r\n            const selectedEntries = state.selectedEntries\r\n                .map(entry => this.removeTag(entry, response.tag));\r\n\r\n            ctx.patchState({\r\n                entries: newEntries,\r\n                selectedEntries: selectedEntries\r\n            });\r\n        }));\r\n    }\r\n\r\n    @Action(RemoveEntries)\r\n    removeSelectedEntries(ctx: StateContext<DriveStateModel>, action: RemoveEntries) {\r\n        const ids = action.entries.map(entry => entry.id);\r\n\r\n        const newEntries = ctx.getState().entries\r\n            .filter(entry => ids.indexOf(entry.id) === -1);\r\n\r\n        ctx.patchState({\r\n            entries: newEntries\r\n        });\r\n    }\r\n\r\n    @Action(CopySelectedEntries)\r\n    copySelectedEntries(ctx: StateContext<DriveStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\r\n            entryIds = entries.map(entry => entry.id),\r\n            folders = entries.filter(entry => entry.type === 'folder'),\r\n            oldState = ctx.getState();\r\n\r\n        if ( ! this.enoughSpaceLeftToUpload(ctx.getState().spaceUsage, entries)) {\r\n            return ctx.dispatch(new NotEnoughSpaceError());\r\n        }\r\n\r\n        ctx.dispatch(new ShowLoadingToast(LoadingToastMessages.copyEntries));\r\n\r\n        return this.entriesApi.copy({entryIds}).pipe(\r\n            finalize(() => ctx.dispatch(new HideLoadingToast())),\r\n            tap(response => {\r\n                const newState = {} as Partial<DriveStateModel>;\r\n\r\n                // show copied entries, if we are in a folder view\r\n                if (ctx.getState().activePage.folder) {\r\n                    newState.entries =  oldState.entries.concat(response.entries);\r\n                }\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) {\r\n                    newState.flatFolders = {...oldState.flatFolders};\r\n                    response.entries\r\n                        .filter(folder => folder.type === 'folder')\r\n                        .forEach(folder => newState.flatFolders[folder.id] = folder as DriveFolder);\r\n                }\r\n\r\n                ctx.patchState(newState);\r\n\r\n                // update user space usage\r\n                ctx.dispatch(new UserSpaceUsageChanged());\r\n\r\n                // rebuild folder tree\r\n                if (folders.length) ctx.dispatch(new BuildFolderTree());\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(OpenUploadWindow)\r\n    openUploadWindow(ctx: StateContext<DriveStateModel>, action: OpenUploadWindow) {\r\n        const config = {\r\n            ...this.uploadInputConfig,\r\n            directory: action.type === 'directory'\r\n        };\r\n\r\n        openUploadWindow(config).then(files => {\r\n            if ( ! files || ! files.length) return;\r\n            ctx.dispatch(new UploadFiles(files));\r\n        });\r\n    }\r\n\r\n    @Action(LoadUserSpaceUsage)\r\n    @Action(UserSpaceUsageChanged)\r\n    loadUserSpaceUsage(ctx: StateContext<DriveStateModel>) {\r\n        return this.entriesApi.getSpaceUsage().pipe(tap(spaceUsage => {\r\n            ctx.patchState({spaceUsage: {used: spaceUsage.used, available: spaceUsage.available}});\r\n        }));\r\n    }\r\n\r\n    @Action(UpdateEntries)\r\n    updateEntries(ctx: StateContext<DriveStateModel>, action: UpdateEntries) {\r\n        const mainEntries = ctx.getState().entries.slice(),\r\n            selectedEntries = ctx.getState().selectedEntries.slice();\r\n\r\n        action.entries.forEach(updatedEntry => {\r\n            // update main entries\r\n            const mainIndex = mainEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            mainEntries[mainIndex] = {...mainEntries[mainIndex], ...updatedEntry};\r\n\r\n            // update selected entries\r\n            const selectedIndex = selectedEntries.findIndex(entry => updatedEntry.id === entry.id);\r\n            if (selectedIndex > -1) {\r\n                selectedEntries[selectedIndex] = {...selectedEntries[selectedIndex], ...updatedEntry};\r\n            }\r\n        });\r\n\r\n        ctx.patchState({entries: mainEntries, selectedEntries});\r\n    }\r\n\r\n    @Action(UpdateEntryDescription)\r\n    updateEntryDescription(ctx: StateContext<DriveStateModel>, {entry, description}: UpdateEntryDescription) {\r\n        return this.entriesApi.update(entry.id, {description})\r\n            .pipe(tap(response => {\r\n                ctx.dispatch(new UpdateEntries([response.fileEntry]));\r\n            }));\r\n    }\r\n\r\n    @Action(BreakpointChanged)\r\n    breakpointChanged(ctx: StateContext<DriveStateModel>, action: BreakpointChanged) {\r\n        ctx.patchState({\r\n            isMobile: action.status.isMobile,\r\n            sidebarOpen: !action.status.isMobile,\r\n            detailsVisible: !action.status.isMobile,\r\n        });\r\n    }\r\n\r\n    @Action(SetCurrentUser)\r\n    setCurrentUser(ctx: StateContext<DriveStateModel>, action: SetCurrentUser) {\r\n        ctx.patchState({currentUser: action.user});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<DriveStateModel>) {\r\n        ctx.setState({...DRIVE_STATE_MODEL_DEFAULTS, viewMode: ctx.getState().viewMode});\r\n    }\r\n\r\n    private transformQueryParams(params: DriveApiIndexParams): DriveApiIndexParams {\r\n        const page = this.store.selectSnapshot(DriveState.activePage),\r\n            meta = this.store.selectSnapshot(DriveState.meta);\r\n\r\n        const queryParams = {\r\n            orderBy: meta.sortColumn,\r\n            orderDir: meta.sortDirection,\r\n            ...params\r\n        };\r\n\r\n        if (page.folderHash) queryParams.folderId = page.folderHash;\r\n        if (meta.query) queryParams.query = meta.query;\r\n        if (meta.type) queryParams.type = meta.type;\r\n\r\n        return queryParams;\r\n    }\r\n\r\n    /**\r\n     * Check if user has enough space left to upload all specified files.\r\n     */\r\n    private enoughSpaceLeftToUpload(spaceUsage: UserSpaceUsage, files: (UploadedFile|FileEntry)[]) {\r\n        const newSize = files.reduce((sum, file) => {\r\n            const size = hasKey('size', file) ? file.size : file.file_size;\r\n            return sum + size;\r\n        }, 0);\r\n        const currentlyUsing = spaceUsage.used;\r\n        const availableSpace = spaceUsage.available;\r\n        return (newSize + currentlyUsing) < availableSpace;\r\n    }\r\n\r\n    private removeTag(entry: DriveEntry, tag: Tag) {\r\n        entry.tags = entry.tags.filter(t => t.id !== tag.id);\r\n        return entry;\r\n    }\r\n\r\n    static canMoveEntriesTo(movingEntries: DriveEntry[], folder: DriveFolder|RootFolder) {\r\n        if ( ! folder || folder['type'] !== 'folder') return false;\r\n\r\n        // should not be able to move folder into it's\r\n        // own child or same folder it's already in\r\n        return movingEntries.every(entry => {\r\n            // trying to move file to root, but file is already in root\r\n            if (folder.id === 'root' && entry.parent_id === null) return false;\r\n\r\n            // entry is already in this folder\r\n            if (folder.id === entry.parent_id) return false;\r\n\r\n            // trying to move folder into it's own child\r\n            if (folder.path.startsWith(entry.path)) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, OnChanges } from '@angular/core';\nimport { SUPPORTED_ENTRY_TYPES } from '../../../entries/supported-entry-types';\nimport { kebabCase } from '@common/core/utils/kebab-case';\n\n@Component({\n    selector: 'file-icon',\n    templateUrl: './file-icon.component.html',\n    styleUrls: ['./file-icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileIconComponent implements OnChanges {\n    @Input() type: string;\n    @Input() mime: string;\n\n    ngOnChanges() {\n        if ( ! this.type && this.mime) {\n            this.type = this.mime.split('/')[0];\n        }\n        if ( ! SUPPORTED_ENTRY_TYPES.includes(this.type)) {\n            this.type = 'default';\n        }\n    }\n\n    public getType() {\n        return kebabCase(this.type);\n    }\n}\n","export enum FOLDERS_API_ROUTES {\r\n    GET_ALL = 'drive/folders',\r\n    CREATE = 'drive/folders',\r\n}\r\n","export interface RootFolder {\r\n    id: 'root';\r\n    hash: 'root';\r\n    path: '';\r\n    type: 'folder';\r\n}\r\n\r\nexport const ROOT_FOLDER: RootFolder = {\r\n    id: 'root',\r\n    hash: 'root',\r\n    path: '',\r\n    type: 'folder',\r\n};\r\n","import { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { ConfirmModalData } from 'common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\nimport { UploadedFile } from 'common/uploads/uploaded-file';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { LoadEntriesAction } from './events';\r\nimport { DriveApiIndexParams } from '../../drive-entry-api.service';\r\nimport { RootFolder } from '../../folders/root-folder';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\nimport { User } from '../../../../common/core/types/models/User';\r\n\r\nexport class LoadUserFolders {\r\n    static readonly type = '[Drive] Load User Folders';\r\n}\r\n\r\nexport class LoadUserSpaceUsage {\r\n    static readonly type = '[Drive] Load User Space Usage';\r\n}\r\n\r\nexport class BuildFolderTree {\r\n    static readonly type = '[Drive] Build Folder Tree';\r\n    constructor(public folders?: DriveFolder[]) {}\r\n}\r\n\r\nexport class OpenFolder {\r\n    static readonly type = '[Drive] Open Folder';\r\n    constructor(public folder?: DriveFolder|RootFolder) {}\r\n}\r\n\r\nexport class OpenSearchPage {\r\n    static readonly type = '[Drive] Open Search Page';\r\n    constructor(public queryParams: {\r\n        type?: string,\r\n        query?: string,\r\n    }) {}\r\n}\r\n\r\nexport class SelectEntries {\r\n    static readonly type = '[Drive] Select Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SelectAllEntries {\r\n    static readonly type = '[Drive] Select All Entries';\r\n}\r\n\r\nexport class DeselectAllEntries {\r\n    static readonly type = '[Drive] Deselect All Entries';\r\n}\r\n\r\nexport class DeleteSelectedEntries {\r\n    static readonly type = '[Drive] Delete Selected Entries';\r\n}\r\n\r\nexport class OpenUploadsPanel {\r\n    static readonly type = '[Drive] Open UploadsApiService Panel';\r\n}\r\n\r\nexport class CloseUploadsPanel {\r\n    static readonly type = '[Drive] Close UploadsApiService Panel';\r\n}\r\n\r\nexport class AddEntries {\r\n    static readonly type = '[Drive] Add Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class MoveEntries {\r\n    static readonly type = '[Drive API] Move Entries';\r\n    constructor(public destination: DriveFolder|RootFolder, public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class OpenDialog {\r\n    static readonly type = '[Drive] Open Dialog';\r\n    constructor(public dialog: ComponentType<any>, public data?: object, public config?: string|MatDialogConfig) {}\r\n}\r\n\r\nexport class OpenConfirmDialog {\r\n    static readonly type = '[Drive] Open Confirm Dialog';\r\n    constructor(public data: ConfirmModalData, public confirmAction: any) {}\r\n}\r\n\r\nexport class SetViewMode {\r\n    static readonly type = '[Drive] Set View Mode';\r\n    constructor(public mode: 'list'|'grid') {}\r\n}\r\n\r\nexport class ToggleDetailsSidebar {\r\n    static readonly type = '[Drive] Toggle Details';\r\n}\r\n\r\nexport class ToggleSidebar {\r\n    static readonly type = '[Drive] Toggle Sidebar';\r\n}\r\n\r\nexport class UploadFiles {\r\n    static readonly type = '[Drive] Upload Files';\r\n    constructor(public files: UploadedFile[]) {}\r\n}\r\n\r\nexport class RestoreTrashedEntries {\r\n    static readonly type = '[Drive] Restore Trashed Entries';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DeleteTrashedEntriesForever {\r\n    static readonly type = '[Drive] Restore Trashed Entries Forever';\r\n}\r\n\r\nexport class EmptyTrash {\r\n    static readonly type = '[Drive] Empty Trash';\r\n}\r\n\r\nexport class OpenFilePreview {\r\n    static readonly type = '[Drive] Open File Preview Overlay';\r\n    constructor(public entries?: DriveEntry[]) {}\r\n}\r\n\r\nexport class DownloadEntries {\r\n    static readonly type = '[Drive] Download Files';\r\n    constructor(public entries?: FileEntry[], public link?: ShareableLink, public password?: string) {}\r\n}\r\n\r\nexport class AddStar {\r\n    static readonly type = '[Drive] Add a Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveStar {\r\n    static readonly type = '[Drive] Remove Star';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class RemoveEntries {\r\n    static readonly type = '[Drive] Remove Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class ChangeSort {\r\n    static readonly type = '[Drive] Change Sort';\r\n    constructor(public sort: SortColumn, public direction: SortDirection = 'desc') {}\r\n}\r\n\r\nexport class LoadMoreEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive Infinite Scroll] Load More Entries';\r\n    public loadMore = true;\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class ReloadPageEntries implements LoadEntriesAction {\r\n    static readonly type = '[Drive] Reload Page Entries';\r\n    constructor(public queryParams: DriveApiIndexParams = {}) {}\r\n}\r\n\r\nexport class CopySelectedEntries {\r\n    static readonly type = '[Drive] Copy Selected Entries';\r\n}\r\n\r\nexport class OpenUploadWindow {\r\n    static readonly type = '[Drive] Open Upload Window';\r\n    constructor(public type: 'file'|'directory') {}\r\n}\r\n\r\nexport class ShowLoadingToast {\r\n    static readonly type = '[Drive] Show Loading Toast';\r\n    constructor(public message: string) {}\r\n}\r\n\r\nexport class HideLoadingToast {\r\n    static readonly type = '[Drive] Hide Loading Toast';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[Drive] Reset State';\r\n}\r\n\r\nexport class UpdateEntries {\r\n    static readonly type = '[Drive] Update Entries';\r\n    constructor(public entries: DriveEntry[]) {}\r\n}\r\n\r\nexport class SetCurrentUser {\r\n    static readonly type = '[Drive] Set Current User';\r\n    constructor(public user: User) {}\r\n}\r\n\r\nexport class UpdateEntryDescription {\r\n    static readonly type = '[Drive] Update Entry Description';\r\n    constructor(public entry: FileEntry, public description: string) {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { DrivePageType } from './available-pages';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\r\nimport { SortColumn, SortDirection } from '../../entries/available-sorts';\r\n\r\nexport const DRIVE_PAGE_NAMES: {[key: string]: DrivePageType} = {\r\n    FOLDER: 'folder',\r\n    RECENT: 'recent',\r\n    TRASH: 'trash',\r\n    SHARES: 'shares',\r\n    STARRED: 'starred',\r\n    ROOT: 'root',\r\n    SEARCH: 'search',\r\n};\r\n\r\nexport class DrivePage implements DrivePageParams {\r\n    name = null;\r\n    viewName = null;\r\n    folder = null;\r\n    folderHash = null;\r\n    hasActions = false;\r\n    sortColumn = 'updated_at' as SortColumn;\r\n    sortDirection = 'desc' as SortDirection;\r\n    queryParams = {};\r\n\r\n    constructor(params: DrivePageParams) {\r\n        Object.keys(params).forEach(key => {\r\n            this[key] = params[key];\r\n        });\r\n    }\r\n}\r\n\r\nexport interface DrivePageParams {\r\n    name: DrivePageType;\r\n    viewName: string;\r\n    folder?: DriveFolder|RootFolder;\r\n    folderHash?: string;\r\n    hasActions?: boolean;\r\n    disableSort?: boolean;\r\n    sortColumn?: SortColumn;\r\n    queryParams?: object;\r\n    sortDirection?: SortDirection;\r\n}\r\n\r\nexport class DriveFolderPage extends DrivePage {\r\n    constructor(\r\n        folder?: DriveFolder|RootFolder\r\n    ) {\r\n        super({\r\n            folder,\r\n            name: DRIVE_PAGE_NAMES.FOLDER,\r\n            hasActions: true,\r\n            viewName: folder === ROOT_FOLDER ? 'Drive' : (folder as DriveFolder).name,\r\n            folderHash: folder ? folder['hash'] : null,\r\n        });\r\n    }\r\n}\r\n\r\nexport const RECENT_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.RECENT,\r\n    viewName: 'Recent',\r\n    disableSort: true,\r\n    sortColumn: 'created_at',\r\n    sortDirection: 'desc',\r\n    queryParams: {\r\n        recentOnly: true,\r\n    }\r\n});\r\n\r\nexport const SEARCH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SEARCH,\r\n    viewName: 'Search results',\r\n});\r\n\r\nexport const SHARES_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.SHARES,\r\n    viewName: 'Shared with me',\r\n    queryParams: {\r\n        sharedOnly: true,\r\n    }\r\n});\r\n\r\nexport const TRASH_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.TRASH,\r\n    viewName: 'Trash',\r\n    hasActions: true,\r\n    queryParams: {\r\n        deletedOnly: true,\r\n    }\r\n});\r\n\r\nexport const STARRED_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.STARRED,\r\n    viewName: 'Starred',\r\n    queryParams: {\r\n        starredOnly: true,\r\n    }\r\n});\r\n\r\nexport const ROOT_FOLDER_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.ROOT,\r\n    viewName: 'Drive',\r\n    folder: ROOT_FOLDER,\r\n    hasActions: true,\r\n});\r\n\r\nexport const FOLDER_PAGE = new DrivePage({\r\n    name: DRIVE_PAGE_NAMES.FOLDER,\r\n    viewName: null,\r\n    hasActions: true\r\n});\r\n","import { DriveStateModel } from './drive-state-model';\r\nimport { ROOT_FOLDER_PAGE } from './drive-page';\r\n\r\nexport const DRIVE_STATE_MODEL_DEFAULTS: DriveStateModel = {\r\n    isMobile: false,\r\n    activePage: ROOT_FOLDER_PAGE,\r\n    folderTree: [],\r\n    flatFolders: {},\r\n    userFoldersLoaded: false,\r\n    entries: [],\r\n    selectedEntries: [],\r\n    dragging: false,\r\n    loading: false,\r\n    uploadsPanelOpen: false,\r\n    viewMode: 'grid' as 'grid'|'list',\r\n    detailsVisible: true,\r\n    sidebarOpen: true,\r\n    currentUser: null,\r\n    spaceUsage: {\r\n        available: null,\r\n        used: null,\r\n    },\r\n    meta: {\r\n        sortColumn: 'updated_at',\r\n        sortDirection: 'desc',\r\n        currentPage: 0,\r\n        lastPage: 0,\r\n    },\r\n};\r\n","import { SortColumn, SortDirection } from '../../entries/available-sorts';\r\nimport { DriveEntry } from '../../files/models/drive-entry';\r\nimport { DriveFolder } from '../../folders/models/driveFolder';\r\nimport { DrivePage } from './drive-page';\r\nimport { UserSpaceUsage } from './user-space-usage';\r\nimport { User } from 'common/core/types/models/User';\r\n\r\nexport interface DriveStateModel {\r\n    isMobile: boolean;\r\n    activePage: DrivePage;\r\n    folderTree: DriveFolder[];\r\n    flatFolders: {[key: number]: DriveFolder};\r\n    userFoldersLoaded: boolean;\r\n    entries: DriveEntry[];\r\n    selectedEntries: DriveEntry[];\r\n    spaceUsage: UserSpaceUsage;\r\n    meta: {\r\n        currentPage: number;\r\n        lastPage: number;\r\n        sortColumn: SortColumn;\r\n        sortDirection: SortDirection;\r\n        type?: string|null,\r\n        query?: string|null\r\n    };\r\n    dragging: boolean;\r\n    loading: boolean;\r\n    uploadsPanelOpen: boolean;\r\n    viewMode: 'list'|'grid';\r\n    detailsVisible: boolean;\r\n    sidebarOpen: boolean;\r\n    currentUser: User|null;\r\n}\r\n\r\nexport const VIEW_MODE_KEY = 'bedrive.viewMode';\r\n","export enum LoadingToastMessages {\r\n    copyEntries =  'Copying items...',\r\n    emptyTrash = 'Emptying trash...',\r\n    moveEntries = 'Moving items...',\r\n}\r\n","export const SUPPORTED_ENTRY_TYPES = [\r\n    'audio',\r\n    'video',\r\n    'text',\r\n    'pdf',\r\n    'archive',\r\n    'folder',\r\n    'shared-folder',\r\n    'image',\r\n    'powerPoint',\r\n    'word',\r\n    'spreadsheet',\r\n];\r\n","import { snakeCase } from './snake-case';\r\n\r\nexport function kebabCase(text: string) {\r\n    return snakeCase(text).replace('_', '-');\r\n}\r\n","<mat-icon\n        [svgIcon]=\"getType() + '-file-custom'\"\n        class=\"file-color\"\n        [ngClass]=\"getType() + '-file'\"\n></mat-icon>","<ng-container *ngIf=\"entries | async as selectedEntries\">\n    <ng-container *ngIf=\"selectedEntries[0]\">\n        <file-icon [type]=\"selectedEntries[0].type\"></file-icon>\n        <div class=\"text\">{{selectedEntries[0].name}}</div>\n        <div class=\"selected-entry-count\" *ngIf=\"selectedEntries.length > 1\">{{selectedEntries.length}}</div>\n    </ng-container>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, HostBinding } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\n\n@Component({\n    selector: 'entry-drag-preview',\n    templateUrl: './entry-drag-preview.component.html',\n    styleUrls: ['./entry-drag-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDragPreviewComponent {\n    @Select(DriveState.selectedEntries) entries: Observable<DriveEntry[]>;\n    @HostBinding('class') className = 'files-grid-item-footer';\n    @HostBinding('class.hidden') get dragging() {\n        return !this.store.selectSnapshot(DriveState.dragging);\n    }\n\n    constructor(private store: Store) {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DriveDomCacheService {\n    public scrollCont: HTMLElement;\n    public filesCont: HTMLElement;\n    public filesContRect: ClientRect;\n    public scrollContRect: ClientRect;\n    public dragPreview: HTMLElement;\n}\n","export const SEARCH_FILE_TYPES = [\r\n    {name: 'Folders', type: 'folder'},\r\n    {name: 'Images', type: 'image'},\r\n    {name: 'Text documents', type: 'text'},\r\n    {name: 'Video', type: 'video'},\r\n    {name: 'Audio', type: 'audio'},\r\n    {name: 'PDFs', type: 'pdf'},\r\n];\r\n","export interface PaginationResponse<T> {\r\n    data: T[];\r\n    from: number;\r\n    to: number;\r\n    total: number;\r\n    per_page: number;\r\n    current_page: number;\r\n    last_page: number;\r\n    path: string;\r\n    next_page_url: string|null;\r\n    prev_page_url: string|null;\r\n}\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n    pagination: {data: []}\r\n};\r\n","<form class=\"input-container\" (ngSubmit)=\"openSearchPage({query: formControl.value})\">\n    <input type=\"text\" [matAutocomplete]=\"auto\" [formControl]=\"formControl\" placeholder=\"Search files and folders...\" #trigger trans-placeholder>\n    <button type=\"button\" mat-icon-button class=\"search-icon\">\n        <mat-icon svgIcon=\"search\"></mat-icon>\n    </button>\n    <button type=\"button\" mat-icon-button class=\"cancel-icon\" *ngIf=\"formControl.value\" (click)=\"resetForm()\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</form>\n\n<mat-autocomplete #auto=\"matAutocomplete\" class=\"file-types-autocomplete mat-elevation-z1\" (optionSelected)=\"executeAction($event)\" [displayWith]=\"displayFn\">\n    <ng-container *ngFor=\"let result of results$ | async\">\n        <mat-option [value]=\"result\">\n            <file-icon [type]=\"result.content.type\"></file-icon>\n            <div class=\"meta\">\n                <div class=\"name\">{{ result.type === 'entryType' ? (result.content.name | trans) : result.content.name}}</div>\n                <div class=\"owner\" *ngIf=\"result.content.users\">{{result.content.users[0]?.display_name}}</div>\n            </div>\n            <div class=\"date\" *ngIf=\"result.content.updated_at\">{{result.content.updated_at | formattedDate}}</div>\n        </mat-option>\n    </ng-container>\n</mat-autocomplete>\n","import {\n    ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SEARCH_FILE_TYPES } from '../search-file-types';\nimport {\n    MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger\n} from '@angular/material/autocomplete';\nimport { Store } from '@ngxs/store';\nimport { OpenSearchPage } from '../../state/actions/commands';\nimport { debounceTime, distinctUntilChanged, filter, switchMap } from 'rxjs/operators';\nimport {\n    DriveEntriesPaginationResponse, DriveEntryApiService\n} from '../../drive-entry-api.service';\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { EntryDoubleTapped } from '../../state/actions/events';\nimport { EMPTY_PAGINATION_RESPONSE } from '@common/core/types/pagination/pagination-response';\n\ninterface SearchResult {\n    type: 'entry'|'entryType';\n    content: DriveEntry|{name: string, type: string};\n}\n\n@Component({\n    selector: 'main-searchbar',\n    templateUrl: './main-searchbar.component.html',\n    styleUrls: ['./main-searchbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainSearchbarComponent implements OnInit {\n    @ViewChild('trigger', { read: MatAutocompleteTrigger }) trigger: MatAutocompleteTrigger;\n    @ViewChild('trigger', { read: ElementRef }) input: ElementRef<HTMLInputElement>;\n    @ViewChild('auto') autocomplete: MatAutocomplete;\n    private defaultResults: SearchResult[] = [];\n    public formControl = new FormControl();\n    public results$: BehaviorSubject<SearchResult[]> = new BehaviorSubject([]);\n    private lastQuery: string;\n\n    constructor(\n        private store: Store,\n        private driveApi: DriveEntryApiService,\n    ) {\n        this.setDefaultResults();\n    }\n\n    ngOnInit() {\n        this.formControl.valueChanges.pipe(\n            debounceTime(300),\n            distinctUntilChanged(),\n            filter(q => typeof q === 'string'),\n            switchMap(query => this.search(query))\n        ).subscribe(response => {\n            this.results$.next((response.data || []).map(entry => {\n                return {type: 'entry', content: entry} as SearchResult;\n            }));\n        });\n    }\n\n    public executeAction(e: MatAutocompleteSelectedEvent) {\n        const value = e.option.value as SearchResult;\n\n        if (value.type === 'entryType') {\n            this.openSearchPage({type: value.content.type});\n            this.resetForm();\n        } else {\n            this.store.dispatch(new EntryDoubleTapped(value.content as DriveEntry));\n        }\n\n        this.closePanelAndBlur();\n    }\n\n    public openSearchPage(params: {type?: string, query?: string}) {\n        this.store.dispatch(new OpenSearchPage(params)).subscribe(() => {\n            this.closePanelAndBlur();\n        });\n    }\n\n    private search(query: string): Observable<DriveEntriesPaginationResponse> {\n        this.lastQuery = query;\n        if ( ! query || query.length < 3) {\n            return observableOf(EMPTY_PAGINATION_RESPONSE) as any;\n        }\n        return this.driveApi.getCurrentUserEntries({query, per_page: 8});\n    }\n\n    private setDefaultResults() {\n        this.defaultResults = SEARCH_FILE_TYPES.map(entryType => {\n            return {type: 'entryType', content: entryType} as SearchResult;\n        });\n\n        this.results$.next(this.defaultResults);\n    }\n\n    public resetForm() {\n        this.formControl.reset();\n        this.setDefaultResults();\n        this.lastQuery = null;\n    }\n\n    private closePanelAndBlur() {\n        this.trigger.closePanel();\n        this.input.nativeElement.blur();\n    }\n\n    displayFn = () => {\n        // always show original user query when\n        // clicking on any autocomplete option\n        return this.lastQuery || '';\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>New Folder</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"folderName\" placeholder=\"Folder name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Create</button>\n    </mat-dialog-actions>\n</form>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DriveFolder } from '../../models/driveFolder';\nimport { FoldersApiService } from '../../api/folders-api.service';\nimport { Store } from '@ngxs/store';\nimport { BackendErrorResponse } from 'common/core/types/backend-error-response';\nimport { DriveState } from '../../../state/drive-state';\nimport { finalize } from 'rxjs/operators';\nimport { NewFolderCreated } from '../../../state/actions/events';\n\nexport interface CrupdateFolderDialogData {\n    folder?: DriveFolder;\n}\n\nexport interface CrupdateFolderErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'crupdate-folder-dialog',\n    templateUrl: './crupdate-folder-dialog.component.html',\n    styleUrls: ['./crupdate-folder-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CrupdateFolderDialogComponent {\n    public folderName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: CrupdateFolderErrors = {};\n\n    constructor(\n        private dialogRef: MatDialogRef<CrupdateFolderDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: CrupdateFolderDialogData,\n        private store: Store,\n        private foldersApi: FoldersApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    public confirm() {\n        this.loading.next(true);\n\n        const activeFolder = this.store.selectSnapshot(DriveState.activeFolder);\n        const params = {\n            name: this.folderName.value,\n            parent_id: (activeFolder ? activeFolder.id : null),\n        };\n\n        return this.foldersApi.create(params)\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(response => {\n                this.setErrors();\n                this.store.dispatch(new NewFolderCreated(response.folder));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<CrupdateFolderErrors>) {\n        this.errors = response ? response.messages : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { Modal } from 'common/core/ui/dialogs/modal.service';\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { Select, Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { UploadedFile } from 'common/uploads/uploaded-file';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\n\n@Component({\n    selector: 'sidebar-action-buttons',\n    templateUrl: './sidebar-action-buttons.component.html',\n    styleUrls: ['./sidebar-action-buttons.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarActionButtonsComponent {\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    constructor(\n        private dialog: Modal,\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) public uploadInputConfig: UploadInputConfig,\n    ) {}\n\n    public openNewFolderDialog() {\n        this.dialog.open(CrupdateFolderDialogComponent);\n    }\n\n    public openUploadsPanel(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { BaseDropTarget } from './base-drop-target';\nimport { DriveState} from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { RootFolder } from '../../folders/root-folder';\n\n@Directive({\n    selector: '[folderDropTarget]'\n})\nexport class FolderDropTargetDirective extends BaseDropTarget {\n    @Input('folderDropTarget') folder: DriveFolder|RootFolder;\n\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n    ) {\n      super();\n    }\n\n    protected canDrop(): boolean {\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries),\n            folder = this.folder as DriveFolder|RootFolder;\n\n        return DriveState.canMoveEntriesTo(entries, folder);\n    }\n\n    protected executeAction() {\n        return this.store.dispatch(new MoveEntries(this.folder));\n    }\n}\n","import { ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\n\nexport abstract class BaseDropTarget implements OnInit, OnDestroy {\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    protected subs: Subscription[] = [];\n    protected active: boolean;\n    protected abstract el: ElementRef<HTMLElement>;\n\n    ngOnInit() {\n        this.dragging.subscribe(dragging => {\n            if (dragging) {\n                this.onDragStart();\n            } else {\n                this.onDragEnd();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n\n    protected abstract canDrop();\n    protected abstract executeAction();\n\n    protected onDragStart() {\n        const enter = fromEvent(this.el.nativeElement, 'mouseenter')\n            .subscribe(() => this.onDragEnter());\n\n        const leave = fromEvent(this.el.nativeElement, 'mouseleave')\n            .subscribe(() => this.onDragLeave());\n\n        this.subs.push(enter, leave);\n    }\n\n    protected onDragEnter() {\n        const canDrop = this.canDrop(),\n            classes = ['drag-over'];\n        if (canDrop) {\n            this.active = true;\n            classes.push('can-drop');\n        }\n        this.el.nativeElement.classList.add(...classes);\n    }\n\n    protected onDragLeave() {\n        this.active = false;\n        this.removeDragOverClass();\n    }\n\n    protected onDragEnd() {\n        this.unsubscribe();\n        this.removeDragOverClass();\n\n        // pointer never left element before drag stop,\n        // we can assume that user dropped on this el\n        if (this.active && this.canDrop()) {\n            this.executeAction();\n            this.active = false;\n        }\n    }\n\n    protected unsubscribe() {\n        this.subs.forEach(sub => sub && sub.unsubscribe());\n    }\n\n    protected removeDragOverClass() {\n        this.el.nativeElement.classList.remove(...['drag-over', 'can-drop']);\n    }\n}\n","import { SelectionModel, isDataSource } from '@angular/cdk/collections';\nimport { isObservable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { take, filter, takeUntil } from 'rxjs/operators';\nimport { InjectionToken, Directive, ViewContainerRef, Inject, Optional, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, IterableDiffers, ChangeDetectorRef, Input, ViewChild, ContentChildren, ElementRef, Renderer2, HostListener, NgModule } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/base-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nclass BaseTreeControl {\n    constructor() {\n        /**\n         * A selection model with multi-selection to track expansion status.\n         */\n        this.expansionModel = new SelectionModel(true);\n    }\n    /**\n     * Toggles one single data node's expanded/collapsed state.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggle(dataNode) {\n        this.expansionModel.toggle(dataNode);\n    }\n    /**\n     * Expands one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expand(dataNode) {\n        this.expansionModel.select(dataNode);\n    }\n    /**\n     * Collapses one single data node.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapse(dataNode) {\n        this.expansionModel.deselect(dataNode);\n    }\n    /**\n     * Whether a given data node is expanded or not. Returns true if the data node is expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(dataNode);\n    }\n    /**\n     * Toggles a subtree rooted at `node` recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /**\n     * Collapse all dataNodes in the tree.\n     * @return {?}\n     */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /**\n     * Expands a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    expandDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n    /**\n     * Collapses a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    collapseDescendants(dataNode) {\n        /** @type {?} */\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\nif (false) {\n    /**\n     * Saved data node for `expandAll` action.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.dataNodes;\n    /**\n     * A selection model with multi-selection to track expansion status.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    BaseTreeControl.prototype.getChildren;\n    /**\n     * Gets a list of descendent data nodes of a subtree rooted at given data node recursively.\n     * @abstract\n     * @param {?} dataNode\n     * @return {?}\n     */\n    BaseTreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expands all data nodes in the tree.\n     * @abstract\n     * @return {?}\n     */\n    BaseTreeControl.prototype.expandAll = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/flat-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n * @template T\n */\nclass FlatTreeControl extends BaseTreeControl {\n    /**\n     * Construct with flat tree data node functions getLevel and isExpandable.\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     */\n    constructor(getLevel, isExpandable) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        /** @type {?} */\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FlatTreeControl.prototype.getLevel;\n    /** @type {?} */\n    FlatTreeControl.prototype.isExpandable;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/nested-tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n * @template T\n */\nclass NestedTreeControl extends BaseTreeControl {\n    /**\n     * Construct with nested tree function getChildren.\n     * @param {?} getChildren\n     */\n    constructor(getChildren) {\n        super();\n        this.getChildren = getChildren;\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     * @return {?}\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        /** @type {?} */\n        const allNodes = this.dataNodes.reduce((/**\n         * @param {?} accumulator\n         * @param {?} dataNode\n         * @return {?}\n         */\n        (accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode]), []);\n        this.expansionModel.select(...allNodes);\n    }\n    /**\n     * Gets a list of descendant dataNodes of a subtree rooted at given data node recursively.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    getDescendants(dataNode) {\n        /** @type {?} */\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /**\n     * A helper function to get descendants recursively.\n     * @protected\n     * @param {?} descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        /** @type {?} */\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((/**\n             * @param {?} child\n             * @return {?}\n             */\n            (child) => this._getDescendants(descendants, child)));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter((/** @type {?} */ (Boolean))))\n                .subscribe((/**\n             * @param {?} children\n             * @return {?}\n             */\n            children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    NestedTreeControl.prototype.getChildren;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/control/tree-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree control interface. User can implement TreeControl to expand/collapse dataNodes in the tree.\n * The CDKTree will use this TreeControl to expand/collapse a node.\n * User can also use it outside the `<cdk-tree>` to control the expansion status of the tree.\n * @record\n * @template T\n */\nfunction TreeControl() { }\nif (false) {\n    /**\n     * The saved tree nodes data for `expandAll` action.\n     * @type {?}\n     */\n    TreeControl.prototype.dataNodes;\n    /**\n     * The expansion model\n     * @type {?}\n     */\n    TreeControl.prototype.expansionModel;\n    /**\n     * Get depth of a given data node, return the level number. This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     * @type {?}\n     */\n    TreeControl.prototype.isExpandable;\n    /**\n     * Gets a stream that emits whenever the given data node's children change.\n     * @type {?}\n     */\n    TreeControl.prototype.getChildren;\n    /**\n     * Whether the data node is expanded or collapsed. Return true if it's expanded.\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.isExpanded = function (dataNode) { };\n    /**\n     * Get all descendants of a data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.getDescendants = function (dataNode) { };\n    /**\n     * Expand or collapse data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggle = function (dataNode) { };\n    /**\n     * Expand one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expand = function (dataNode) { };\n    /**\n     * Collapse one data node\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapse = function (dataNode) { };\n    /**\n     * Expand all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.expandAll = function () { };\n    /**\n     * Collapse all the dataNodes in the tree\n     * @return {?}\n     */\n    TreeControl.prototype.collapseAll = function () { };\n    /**\n     * Toggle a data node by expand/collapse it and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.toggleDescendants = function (dataNode) { };\n    /**\n     * Expand a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.expandDescendants = function (dataNode) { };\n    /**\n     * Collapse a data node and all its descendants\n     * @param {?} dataNode\n     * @return {?}\n     */\n    TreeControl.prototype.collapseDescendants = function (dataNode) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nCdkTreeNodeOutlet.ɵfac = function CdkTreeNodeOutlet_Factory(t) { return new (t || CdkTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nCdkTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeOutlet, selectors: [[\"\", \"cdkTreeNodeOutlet\", \"\"]] });\n/** @nocollapse */\nCdkTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    CdkTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Context provided to the tree node component.\n * @template T\n */\nclass CdkTreeNodeOutletContext {\n    /**\n     * @param {?} data\n     */\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\nif (false) {\n    /**\n     * Data for the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.$implicit;\n    /**\n     * Depth of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.level;\n    /**\n     * Index location of the node.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.index;\n    /**\n     * Length of the number of total dataNodes.\n     * @type {?}\n     */\n    CdkTreeNodeOutletContext.prototype.count;\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n * @template T\n */\nclass CdkTreeNodeDef {\n    /**\n     * \\@docs-private\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nCdkTreeNodeDef.ɵfac = function CdkTreeNodeDef_Factory(t) { return new (t || CdkTreeNodeDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeDef, selectors: [[\"\", \"cdkTreeNodeDef\", \"\"]], inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] } });\n/** @nocollapse */\nCdkTreeNodeDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodeDef]',\n                inputs: [\n                    'when: cdkTreeNodeDefWhen'\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     * @type {?}\n     */\n    CdkTreeNodeDef.prototype.when;\n    /** @type {?} */\n    CdkTreeNodeDef.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when there is no usable data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there are tree control.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control for the tree.`);\n}\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * \\@docs-private\n * @return {?}\n */\nfunction getTreeControlFunctionsMissingError() {\n    return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n * @template T\n */\nclass CdkTree {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_differs, _changeDetectorRef) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Level of nodes\n         */\n        this._levels = new Map();\n        // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n        //     Remove the MAX_VALUE in viewChange\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n    }\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     * @return {?}\n     */\n    get dataSource() { return this._dataSource; }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._dataDiffer = this._differs.find([]).create(this.trackBy);\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        const defaultNodeDefs = this._nodeDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n        if (this.dataSource && this._nodeDefs && !this._dataSubscription) {\n            this._observeRenderChanges();\n        }\n    }\n    // TODO(tinayuangao): Work on keyboard traversal and actions, make sure it's working for RTL\n    //     and nested trees.\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof ((/** @type {?} */ (this._dataSource))).disconnect === 'function') {\n            ((/** @type {?} */ (this.dataSource))).disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._observeRenderChanges();\n        }\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (dataStream) {\n            this._dataSubscription = dataStream.pipe(takeUntil(this._onDestroy))\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this.renderNodeChanges(data)));\n        }\n        else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n    /**\n     * Check for changes made in the data and render each change (node added/removed/moved).\n     * @param {?} data\n     * @param {?=} dataDiffer\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        /** @type {?} */\n        const changes = dataDiffer.diff(data);\n        if (!changes) {\n            return;\n        }\n        changes.forEachOperation((/**\n         * @param {?} item\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[(/** @type {?} */ (currentIndex))], (/** @type {?} */ (currentIndex)), viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (adjustedPreviousIndex)));\n                this._levels.delete(item.item);\n            }\n            else {\n                /** @type {?} */\n                const view = viewContainer.get((/** @type {?} */ (adjustedPreviousIndex)));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     * @param {?} data\n     * @param {?} i\n     * @return {?}\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        /** @type {?} */\n        const nodeDef = this._nodeDefs.find((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.when && def.when(i, data))) || this._defaultNodeDef;\n        if (!nodeDef) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     * @param {?} nodeData\n     * @param {?} index\n     * @param {?=} viewContainer\n     * @param {?=} parentData\n     * @return {?}\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        /** @type {?} */\n        const node = this._getNodeDef(nodeData, index);\n        // Node context that will be provided to created embedded view\n        /** @type {?} */\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        }\n        else if (typeof parentData !== 'undefined' && this._levels.has(parentData)) {\n            context.level = (/** @type {?} */ (this._levels.get(parentData))) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(nodeData, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        /** @type {?} */\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n}\nCdkTree.ɵfac = function CdkTree_Factory(t) { return new (t || CdkTree)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nCdkTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTree, selectors: [[\"cdk-tree\"]], contentQueries: function CdkTree_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeDefs = _t);\n    } }, viewQuery: function CdkTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"cdk-tree\"], inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", trackBy: \"trackBy\" }, exportAs: [\"cdkTree\"], decls: 1, vars: 0, consts: [[\"cdkTreeNodeOutlet\", \"\"]], template: function CdkTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkTreeNodeOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTree.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef }\n];\nCdkTree.propDecorators = {\n    dataSource: [{ type: Input }],\n    treeControl: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    _nodeOutlet: [{ type: ViewChild, args: [CdkTreeNodeOutlet, { static: true },] }],\n    _nodeDefs: [{ type: ContentChildren, args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTree, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-tree',\n                exportAs: 'cdkTree',\n                template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'cdk-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }]; }, { dataSource: [{\n            type: Input\n        }], treeControl: [{\n            type: Input\n        }], trackBy: [{\n            type: Input\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [CdkTreeNodeOutlet, { static: true }]\n        }], _nodeDefs: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeDef, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._onDestroy;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataDiffer;\n    /**\n     * Stores the node definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._defaultNodeDef;\n    /**\n     * Data subscription\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSubscription;\n    /**\n     * Level of nodes\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._levels;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._dataSource;\n    /**\n     * The tree controller\n     * @type {?}\n     */\n    CdkTree.prototype.treeControl;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @type {?}\n     */\n    CdkTree.prototype.trackBy;\n    /** @type {?} */\n    CdkTree.prototype._nodeOutlet;\n    /**\n     * The tree node template for the tree\n     * @type {?}\n     */\n    CdkTree.prototype._nodeDefs;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     * @type {?}\n     */\n    CdkTree.prototype.viewChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._differs;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTree.prototype._changeDetectorRef;\n}\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n * @template T\n */\nclass CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     */\n    constructor(_elementRef, _tree) {\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits when the node's data has changed.\n         */\n        this._dataChanges = new Subject();\n        /**\n         * The role of the node should be 'group' if it's an internal node,\n         * and 'treeitem' if it's a leaf node.\n         */\n        this.role = 'treeitem';\n        CdkTreeNode.mostRecentTreeNode = (/** @type {?} */ (this));\n    }\n    /**\n     * The tree node's data.\n     * @return {?}\n     */\n    get data() { return this._data; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._setRoleFromData();\n            this._dataChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isExpanded() {\n        return this._tree.treeControl.isExpanded(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    get level() {\n        return this._tree.treeControl.getLevel ? this._tree.treeControl.getLevel(this._data) : 0;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Focuses the menu item. Implements for FocusableOption.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _setRoleFromData() {\n        if (this._tree.treeControl.isExpandable) {\n            this.role = this._tree.treeControl.isExpandable(this._data) ? 'group' : 'treeitem';\n        }\n        else {\n            if (!this._tree.treeControl.getChildren) {\n                throw getTreeControlFunctionsMissingError();\n            }\n            /** @type {?} */\n            const childrenNodes = this._tree.treeControl.getChildren(this._data);\n            if (Array.isArray(childrenNodes)) {\n                this._setRoleFromChildren((/** @type {?} */ (childrenNodes)));\n            }\n            else if (isObservable(childrenNodes)) {\n                childrenNodes.pipe(takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @param {?} children\n                 * @return {?}\n                 */\n                children => this._setRoleFromChildren(children)));\n            }\n        }\n    }\n    /**\n     * @protected\n     * @param {?} children\n     * @return {?}\n     */\n    _setRoleFromChildren(children) {\n        this.role = children && children.length ? 'group' : 'treeitem';\n    }\n}\nCdkTreeNode.ɵfac = function CdkTreeNode_Factory(t) { return new (t || CdkTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree)); };\nCdkTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNode, selectors: [[\"cdk-tree-node\"]], hostAttrs: [1, \"cdk-tree-node\"], hostVars: 3, hostBindings: function CdkTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { role: \"role\" }, exportAs: [\"cdkTreeNode\"] });\n/**\n * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n * in `CdkTree` and set the data to it.\n */\nCdkTreeNode.mostRecentTreeNode = null;\n/** @nocollapse */\nCdkTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree }\n];\nCdkTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-tree-node',\n                exportAs: 'cdkTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     * @type {?}\n     */\n    CdkTreeNode.mostRecentTreeNode;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._destroyed;\n    /**\n     * Emits when the node's data has changed.\n     * @type {?}\n     */\n    CdkTreeNode.prototype._dataChanges;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._data;\n    /**\n     * The role of the node should be 'group' if it's an internal node,\n     * and 'treeitem' if it's a leaf node.\n     * @type {?}\n     */\n    CdkTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNode.prototype._tree;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/nested-node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n * @template T\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     */\n    constructor(_elementRef, _tree, _differs) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        if (!this._tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n        /** @type {?} */\n        const childrenNodes = this._tree.treeControl.getChildren(this.data);\n        if (Array.isArray(childrenNodes)) {\n            this.updateChildrenNodes((/** @type {?} */ (childrenNodes)));\n        }\n        else if (isObservable(childrenNodes)) {\n            childrenNodes.pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            result => this.updateChildrenNodes(result)));\n        }\n        this.nodeOutlet.changes.pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateChildrenNodes()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /**\n     * Add children dataNodes to the NodeOutlet\n     * @protected\n     * @param {?=} children\n     * @return {?}\n     */\n    updateChildrenNodes(children) {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            /** @type {?} */\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Clear the children dataNodes.\n     * @protected\n     * @return {?}\n     */\n    _clear() {\n        /** @type {?} */\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /**\n     * Gets the outlet for the current node.\n     * @private\n     * @return {?}\n     */\n    _getNodeOutlet() {\n        /** @type {?} */\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find((/**\n         * @param {?} outlet\n         * @return {?}\n         */\n        outlet => !outlet._node || outlet._node === this));\n    }\n}\nCdkNestedTreeNode.ɵfac = function CdkNestedTreeNode_Factory(t) { return new (t || CdkNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkNestedTreeNode, selectors: [[\"cdk-nested-tree-node\"]], contentQueries: function CdkNestedTreeNode_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeOutlet = _t);\n    } }, hostAttrs: [1, \"cdk-tree-node\", \"cdk-nested-tree-node\"], hostVars: 2, hostBindings: function CdkNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, exportAs: [\"cdkNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers }\n];\nCdkNestedTreeNode.propDecorators = {\n    nodeOutlet: [{ type: ContentChildren, args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-nested-tree-node',\n                exportAs: 'cdkNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'cdk-tree-node cdk-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: CdkTree }, { type: ɵngcc0.IterableDiffers }]; }, { nodeOutlet: [{\n            type: ContentChildren,\n            args: [CdkTreeNodeOutlet, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkNestedTreeNode.prototype._dataDiffer;\n    /**\n     * The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`.\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._children;\n    /**\n     * The children node placeholder.\n     * @type {?}\n     */\n    CdkNestedTreeNode.prototype.nodeOutlet;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n * @template T\n */\nclass CdkTreeNodePadding {\n    /**\n     * @param {?} _treeNode\n     * @param {?} _tree\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    constructor(_treeNode, _tree, _renderer, _element, _dir) {\n        this._treeNode = _treeNode;\n        this._tree = _tree;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * CSS units used for the indentation value.\n         */\n        this.indentUnits = 'px';\n        this._indent = 40;\n        this._setPadding();\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setPadding(true)));\n        }\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        _treeNode._dataChanges.subscribe((/**\n         * @return {?}\n         */\n        () => this._setPadding()));\n    }\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @return {?}\n     */\n    get level() { return this._level; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set level(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = (/** @type {?} */ (coerceNumberProperty(value, null)));\n        this._setPadding();\n    }\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     * @return {?}\n     */\n    get indent() { return this._indent; }\n    /**\n     * @param {?} indent\n     * @return {?}\n     */\n    set indent(indent) {\n        /** @type {?} */\n        let value = indent;\n        /** @type {?} */\n        let units = 'px';\n        if (typeof indent === 'string') {\n            /** @type {?} */\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = coerceNumberProperty(value);\n        this._setPadding();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * The padding indent value for the tree node. Returns a string with px numbers if not null.\n     * @return {?}\n     */\n    _paddingIndent() {\n        /** @type {?} */\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n        /** @type {?} */\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    /**\n     * @param {?=} forceChange\n     * @return {?}\n     */\n    _setPadding(forceChange = false) {\n        /** @type {?} */\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            /** @type {?} */\n            const element = this._element.nativeElement;\n            /** @type {?} */\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            /** @type {?} */\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            this._renderer.setStyle(element, paddingProp, padding);\n            this._renderer.setStyle(element, resetProp, null);\n            this._currentPadding = padding;\n        }\n    }\n}\nCdkTreeNodePadding.ɵfac = function CdkTreeNodePadding_Factory(t) { return new (t || CdkTreeNodePadding)(ɵngcc0.ɵɵdirectiveInject(CdkTreeNode), ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nCdkTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodePadding, selectors: [[\"\", \"cdkTreeNodePadding\", \"\"]], inputs: { level: [\"cdkTreeNodePadding\", \"level\"], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] } });\n/** @nocollapse */\nCdkTreeNodePadding.ctorParameters = () => [\n    { type: CdkTreeNode },\n    { type: CdkTree },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['cdkTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['cdkTreeNodePaddingIndent',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTreeNodePadding]'\n            }]\n    }], function () { return [{ type: CdkTreeNode }, { type: CdkTree }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { level: [{\n            type: Input,\n            args: ['cdkTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['cdkTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodePadding.ngAcceptInputType_level;\n    /**\n     * Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._currentPadding;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._destroyed;\n    /**\n     * CSS units used for the indentation value.\n     * @type {?}\n     */\n    CdkTreeNodePadding.prototype.indentUnits;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._level;\n    /** @type {?} */\n    CdkTreeNodePadding.prototype._indent;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._treeNode;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._tree;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTreeNodePadding.prototype._dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Node toggle to expand/collapse the node.\n * @template T\n */\nclass CdkTreeNodeToggle {\n    /**\n     * @param {?} _tree\n     * @param {?} _treeNode\n     */\n    constructor(_tree, _treeNode) {\n        this._tree = _tree;\n        this._treeNode = _treeNode;\n        this._recursive = false;\n    }\n    /**\n     * Whether expand/collapse the node recursively.\n     * @return {?}\n     */\n    get recursive() { return this._recursive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set recursive(value) { this._recursive = coerceBooleanProperty(value); }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _toggle(event) {\n        this.recursive\n            ? this._tree.treeControl.toggleDescendants(this._treeNode.data)\n            : this._tree.treeControl.toggle(this._treeNode.data);\n        event.stopPropagation();\n    }\n}\nCdkTreeNodeToggle.ɵfac = function CdkTreeNodeToggle_Factory(t) { return new (t || CdkTreeNodeToggle)(ɵngcc0.ɵɵdirectiveInject(CdkTree), ɵngcc0.ɵɵdirectiveInject(CdkTreeNode)); };\nCdkTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTreeNodeToggle, selectors: [[\"\", \"cdkTreeNodeToggle\", \"\"]], hostBindings: function CdkTreeNodeToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkTreeNodeToggle_click_HostBindingHandler($event) { return ctx._toggle($event); });\n    } }, inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\"] } });\n/** @nocollapse */\nCdkTreeNodeToggle.ctorParameters = () => [\n    { type: CdkTree },\n    { type: CdkTreeNode }\n];\nCdkTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['cdkTreeNodeToggleRecursive',] }],\n    _toggle: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeNodeToggle, [{\n        type: Directive,\n        args: [{ selector: '[cdkTreeNodeToggle]' }]\n    }], function () { return [{ type: CdkTree }, { type: CdkTreeNode }]; }, { recursive: [{\n            type: Input,\n            args: ['cdkTreeNodeToggleRecursive']\n        }], _toggle: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTreeNodeToggle.ngAcceptInputType_recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._recursive;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTreeNodeToggle.prototype._treeNode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n}\nCdkTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTreeModule });\nCdkTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTreeModule_Factory(t) { return new (t || CdkTreeModule)(); }, providers: [FocusMonitor, CdkTreeNodeDef] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTreeModule, { declarations: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n        CdkTreeNodeDef,\n        CdkTreeNodePadding,\n        CdkTreeNodeToggle,\n        CdkTree,\n        CdkTreeNode,\n        CdkTreeNodeOutlet] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTreeModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS,\n                providers: [FocusMonitor, CdkTreeNodeDef]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getTreeControlFunctionsMissingError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n//# sourceMappingURL=tree.js.map","<button mat-raised-button color=\"accent\" class=\"upload-button\" [disabled]=\"!(canUpload$ | async)\" [uploadButton]=\"uploadInputConfig\" (filesSelected)=\"openUploadsPanel($event)\">\n    <mat-icon svgIcon=\"cloud-upload\"></mat-icon>\n    <span trans>Upload</span>\n</button>\n\n<button mat-raised-button color=\"accent\" class=\"new-folder-button\" [disabled]=\"!(canUpload$ | async)\" (click)=\"openNewFolderDialog()\">\n    <mat-icon svgIcon=\"create-new-folder\"></mat-icon>\n</button>\n","import { CdkTreeNode, CdkTree, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport { Directive, ElementRef, Attribute, Input, IterableDiffers, ViewContainerRef, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/node.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/tree';\nconst _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\n/**\n * Wrapper for the CdkTree node with Material design styles.\n * @template T\n */\nclass MatTreeNode extends _MatTreeNodeMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, tabIndex) {\n        super(_elementRef, _tree);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this.role = 'treeitem';\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n}\nMatTreeNode.ɵfac = function MatTreeNode_Factory(t) { return new (t || MatTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNode, selectors: [[\"mat-tree-node\"]], hostAttrs: [1, \"mat-tree-node\"], hostVars: 3, hostBindings: function MatTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"aria-level\", ctx.role === \"treeitem\" ? ctx.level : null)(\"role\", ctx.role);\n    } }, inputs: { disabled: \"disabled\", tabIndex: \"tabIndex\", role: \"role\" }, exportAs: [\"matTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNode, useExisting: MatTreeNode }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatTreeNode.propDecorators = {\n    role: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-tree-node',\n                exportAs: 'matTreeNode',\n                inputs: ['disabled', 'tabIndex'],\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n                    '[attr.role]': 'role',\n                    'class': 'mat-tree-node'\n                },\n                providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { role: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTreeNode.prototype.role;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatTreeNode.prototype._tree;\n}\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * @template T\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n}\nMatTreeNodeDef.ɵfac = function MatTreeNodeDef_Factory(t) { return ɵMatTreeNodeDef_BaseFactory(t || MatTreeNodeDef); };\nMatTreeNodeDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeDef, selectors: [[\"\", \"matTreeNodeDef\", \"\"]], inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeDef.propDecorators = {\n    data: [{ type: Input, args: ['matTreeNode',] }]\n};\nconst ɵMatTreeNodeDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeDef]',\n                inputs: [\n                    'when: matTreeNodeDefWhen'\n                ],\n                providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }]\n            }]\n    }], null, { data: [{\n            type: Input,\n            args: ['matTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeDef.prototype.data;\n}\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n * @template T\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _tree\n     * @param {?} _differs\n     * @param {?} tabIndex\n     */\n    constructor(_elementRef, _tree, _differs, tabIndex) {\n        super(_elementRef, _tree, _differs);\n        this._elementRef = _elementRef;\n        this._tree = _tree;\n        this._differs = _differs;\n        this._disabled = false;\n        this.tabIndex = Number(tabIndex) || 0;\n    }\n    /**\n     * Whether the node is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Tabindex for the node.\n     * @return {?}\n     */\n    get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : 0;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\nMatNestedTreeNode.ɵfac = function MatNestedTreeNode_Factory(t) { return new (t || MatNestedTreeNode)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkTree), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatNestedTreeNode.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatNestedTreeNode, selectors: [[\"mat-nested-tree-node\"]], hostAttrs: [1, \"mat-nested-tree-node\"], hostVars: 2, hostBindings: function MatNestedTreeNode_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isExpanded)(\"role\", ctx.role);\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", node: [\"matNestedTreeNode\", \"node\"] }, exportAs: [\"matNestedTreeNode\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatNestedTreeNode.ctorParameters = () => [\n    { type: ElementRef },\n    { type: CdkTree },\n    { type: IterableDiffers },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatNestedTreeNode.propDecorators = {\n    node: [{ type: Input, args: ['matNestedTreeNode',] }],\n    disabled: [{ type: Input }],\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNestedTreeNode, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-nested-tree-node',\n                exportAs: 'matNestedTreeNode',\n                host: {\n                    '[attr.aria-expanded]': 'isExpanded',\n                    '[attr.role]': 'role',\n                    'class': 'mat-nested-tree-node'\n                },\n                providers: [\n                    { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                    { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode }\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.CdkTree }, { type: ɵngcc0.IterableDiffers }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], node: [{\n            type: Input,\n            args: ['matNestedTreeNode']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatNestedTreeNode.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatNestedTreeNode.prototype.node;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatNestedTreeNode.prototype._tabIndex;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._tree;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatNestedTreeNode.prototype._differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/padding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n * @template T\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n}\nMatTreeNodePadding.ɵfac = function MatTreeNodePadding_Factory(t) { return ɵMatTreeNodePadding_BaseFactory(t || MatTreeNodePadding); };\nMatTreeNodePadding.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodePadding, selectors: [[\"\", \"matTreeNodePadding\", \"\"]], inputs: { level: [\"matTreeNodePadding\", \"level\"], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodePadding.propDecorators = {\n    level: [{ type: Input, args: ['matTreeNodePadding',] }],\n    indent: [{ type: Input, args: ['matTreeNodePaddingIndent',] }]\n};\nconst ɵMatTreeNodePadding_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodePadding);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodePadding, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodePadding]',\n                providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }]\n            }]\n    }], null, { level: [{\n            type: Input,\n            args: ['matTreeNodePadding']\n        }], indent: [{\n            type: Input,\n            args: ['matTreeNodePaddingIndent']\n        }] }); })();\nif (false) {\n    /**\n     * The level of depth of the tree node. The padding will be `level * indent` pixels.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.level;\n    /**\n     * The indent for each level. Default number 40px from material design menu sub-menu spec.\n     * @type {?}\n     */\n    MatTreeNodePadding.prototype.indent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?=} _node\n     */\n    constructor(viewContainer, _node) {\n        this.viewContainer = viewContainer;\n        this._node = _node;\n    }\n}\nMatTreeNodeOutlet.ɵfac = function MatTreeNodeOutlet_Factory(t) { return new (t || MatTreeNodeOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_TREE_NODE_OUTLET_NODE, 8)); };\nMatTreeNodeOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeOutlet, selectors: [[\"\", \"matTreeNodeOutlet\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet\n            }])] });\n/** @nocollapse */\nMatTreeNodeOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TREE_NODE_OUTLET_NODE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeOutlet]',\n                providers: [{\n                        provide: CdkTreeNodeOutlet,\n                        useExisting: MatTreeNodeOutlet\n                    }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TREE_NODE_OUTLET_NODE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype.viewContainer;\n    /** @type {?} */\n    MatTreeNodeOutlet.prototype._node;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nclass MatTree extends CdkTree {\n}\nMatTree.ɵfac = function MatTree_Factory(t) { return ɵMatTree_BaseFactory(t || MatTree); };\nMatTree.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTree, selectors: [[\"mat-tree\"]], viewQuery: function MatTree_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatTreeNodeOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n    } }, hostAttrs: [\"role\", \"tree\", 1, \"mat-tree\"], exportAs: [\"matTree\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTree, useExisting: MatTree }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"matTreeNodeOutlet\", \"\"]], template: function MatTree_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"], encapsulation: 2 });\nMatTree.propDecorators = {\n    _nodeOutlet: [{ type: ViewChild, args: [MatTreeNodeOutlet, { static: true },] }]\n};\nconst ɵMatTree_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTree);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTree, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tree',\n                exportAs: 'matTree',\n                template: `<ng-container matTreeNodeOutlet></ng-container>`,\n                host: {\n                    'class': 'mat-tree',\n                    'role': 'tree'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTree for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CdkTree, useExisting: MatTree }],\n                styles: [\".mat-tree{display:block}.mat-tree-node{display:flex;align-items:center;min-height:48px;flex:1;word-wrap:break-word}.mat-nested-tree-node{border-bottom-width:0}\\n\"]\n            }]\n    }], null, { _nodeOutlet: [{\n            type: ViewChild,\n            args: [MatTreeNodeOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTree.prototype._nodeOutlet;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/toggle.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n * @template T\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n    }\n}\nMatTreeNodeToggle.ɵfac = function MatTreeNodeToggle_Factory(t) { return ɵMatTreeNodeToggle_BaseFactory(t || MatTreeNodeToggle); };\nMatTreeNodeToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTreeNodeToggle, selectors: [[\"\", \"matTreeNodeToggle\", \"\"]], inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTreeNodeToggle.propDecorators = {\n    recursive: [{ type: Input, args: ['matTreeNodeToggleRecursive',] }]\n};\nconst ɵMatTreeNodeToggle_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTreeNodeToggle);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeNodeToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[matTreeNodeToggle]',\n                providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }]\n            }]\n    }], null, { recursive: [{\n            type: Input,\n            args: ['matTreeNodeToggleRecursive']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTreeNodeToggle.prototype.recursive;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/tree-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet\n];\nclass MatTreeModule {\n}\nMatTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTreeModule });\nMatTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTreeModule_Factory(t) { return new (t || MatTreeModule)(); }, imports: [[CdkTreeModule, MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTreeModule, { declarations: function () { return [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; }, imports: function () { return [CdkTreeModule, MatCommonModule]; }, exports: function () { return [MatNestedTreeNode,\n        MatTreeNodeDef,\n        MatTreeNodePadding,\n        MatTreeNodeToggle,\n        MatTree,\n        MatTreeNode,\n        MatTreeNodeOutlet]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTreeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CdkTreeModule, MatCommonModule],\n                exports: MAT_TREE_DIRECTIVES,\n                declarations: MAT_TREE_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/flat-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n * @template T, F\n */\nclass MatTreeFlattener {\n    /**\n     * @param {?} transformFunction\n     * @param {?} getLevel\n     * @param {?} isExpandable\n     * @param {?} getChildren\n     */\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    /**\n     * @param {?} node\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenNode(node, level, resultNodes, parentMap) {\n        /** @type {?} */\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            /** @type {?} */\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe((/**\n                     * @param {?} children\n                     * @return {?}\n                     */\n                    children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    }));\n                }\n            }\n        }\n        return resultNodes;\n    }\n    /**\n     * @param {?} children\n     * @param {?} level\n     * @param {?} resultNodes\n     * @param {?} parentMap\n     * @return {?}\n     */\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((/**\n         * @param {?} child\n         * @param {?} index\n         * @return {?}\n         */\n        (child, index) => {\n            /** @type {?} */\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        }));\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    flattenNodes(structuredData) {\n        /** @type {?} */\n        let resultNodes = [];\n        structuredData.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => this._flattenNode(node, 0, resultNodes, [])));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     * @param {?} nodes\n     * @param {?} treeControl\n     * @return {?}\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        /** @type {?} */\n        let results = [];\n        /** @type {?} */\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            /** @type {?} */\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        }));\n        return results;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlattener.prototype.transformFunction;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getLevel;\n    /** @type {?} */\n    MatTreeFlattener.prototype.isExpandable;\n    /** @type {?} */\n    MatTreeFlattener.prototype.getChildren;\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n * @template T, F\n */\nclass MatTreeFlatDataSource extends DataSource {\n    /**\n     * @param {?} _treeControl\n     * @param {?} _treeFlattener\n     * @param {?=} initialData\n     */\n    constructor(_treeControl, _treeFlattener, initialData = []) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        this._flattenedData = new BehaviorSubject([]);\n        this._expandedData = new BehaviorSubject([]);\n        this._data = new BehaviorSubject(initialData);\n    }\n    /**\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        /** @type {?} */\n        const changes = [\n            collectionViewer.viewChange,\n            this._treeControl.expansionModel.changed,\n            this._flattenedData\n        ];\n        return merge(...changes).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._flattenedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._expandedData;\n    /** @type {?} */\n    MatTreeFlatDataSource.prototype._data;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTreeFlatDataSource.prototype._treeFlattener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/data-source/nested-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n * @template T\n */\nclass MatTreeNestedDataSource extends DataSource {\n    constructor() {\n        super(...arguments);\n        this._data = new BehaviorSubject([]);\n    }\n    /**\n     * Data for the nested tree\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set data(value) { this._data.next(value); }\n    /**\n     * @param {?} collectionViewer\n     * @return {?}\n     */\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            return this.data;\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() {\n        // no op\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTreeNestedDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tree/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n//# sourceMappingURL=tree.js.map","import {Injectable} from '@angular/core';\nimport {DriveFolder} from '../../folders/models/driveFolder';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Observable, of as observableOf} from 'rxjs';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { filter } from 'rxjs/operators';\n\n/** Flat node with expandable and level information */\nexport interface FolderFlatNode extends DriveFolder {\n    level: number;\n    expandable: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FoldersTreeService {\n    @Select(DriveState.userFolders) userFolders$: Observable<DriveFolder[]>;\n\n    public control: FlatTreeControl<FolderFlatNode>;\n\n    public flattener: MatTreeFlattener<DriveFolder, FolderFlatNode>;\n\n    public dataSource: MatTreeFlatDataSource<DriveFolder, FolderFlatNode>;\n\n    constructor() {\n        this.createTreeFlattener();\n        this.createTreeControl();\n        this.createTreeDataSource();\n        this.bindToStore();\n    }\n\n    private createTreeFlattener() {\n        this.flattener = new MatTreeFlattener(\n            this.transformer,\n            this.getLevel,\n            this.isExpandable, this.getChildren\n        );\n    }\n\n    private createTreeControl() {\n        this.control = new FlatTreeControl<FolderFlatNode>(\n            this.getLevel,\n            this.isExpandable\n        );\n    }\n\n    private createTreeDataSource() {\n        this.dataSource = new MatTreeFlatDataSource(\n            this.control,\n            this.flattener\n        );\n    }\n\n    private bindToStore() {\n        this.userFolders$\n            .pipe(filter(x => !!x))\n            .subscribe(folders => {\n                this.dataSource.data = folders;\n            });\n    }\n\n    public transformer(node: DriveFolder, level: number) {\n        const flatNode = Object.assign({}, node) as FolderFlatNode;\n        flatNode.level = level;\n        flatNode.expandable = !!node.children;\n        return flatNode;\n    }\n\n    private getLevel(node: FolderFlatNode): number {\n        return node.level;\n    }\n\n    private isExpandable(node: FolderFlatNode): boolean {\n        return node.expandable;\n    }\n\n    private getChildren(node: DriveFolder): Observable<DriveFolder[]> {\n        return observableOf(node.children);\n    }\n}\n","import {Directive, ElementRef, Inject, Input, OnInit} from '@angular/core';\r\nimport {ContextMenu} from './context-menu.service';\r\nimport { AVAILABLE_CONTEXT_MENUS } from './available-context-menus';\r\n\r\n@Directive({\r\n    selector: '[contextMenu]'\r\n})\r\nexport class ContextMenuDirective implements OnInit {\r\n    @Input('contextMenu') params: string|{type: string, [key: string]: any};\r\n    @Input('disableContextMenu') disableContextMenu = false;\r\n\r\n    public availableMenus: object = {};\r\n\r\n    constructor(\r\n        private el: ElementRef,\r\n        private contextMenu: ContextMenu,\r\n        @Inject(AVAILABLE_CONTEXT_MENUS) _availableMenus: object[]\r\n    ) {\r\n        _availableMenus.forEach(config => {\r\n            Object.assign(this.availableMenus, config);\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.el.nativeElement.addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (this.disableContextMenu) return;\r\n\r\n            this.contextMenu.open(\r\n                this.getMenuComponent(),\r\n                e,\r\n                {\r\n                    overlayX: 'start',\r\n                    overlayY: 'top',\r\n                    data: this.getMenuData()\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private getMenuComponent() {\r\n        if (typeof this.params === 'string') {\r\n            return this.availableMenus[this.params];\r\n        } else {\r\n            return this.availableMenus[this.params.type];\r\n        }\r\n    }\r\n\r\n    private getMenuData() {\r\n        return (typeof this.params === 'string') ? {type: this.params} : this.params;\r\n    }\r\n}\r\n","import {ComponentFactoryResolver, ElementRef, Injectable, Injector, NgZone} from '@angular/core';\r\nimport {NavigationStart, Router} from '@angular/router';\r\nimport {ComponentPortal, ComponentType, PortalInjector} from '@angular/cdk/portal';\r\nimport {Overlay, PositionStrategy} from '@angular/cdk/overlay';\r\nimport {filter} from 'rxjs/operators';\r\nimport {ContextMenuRef} from './context-menu-ref';\r\nimport {CONTEXT_MENU_DATA} from './context-menu-data';\r\n\r\nexport interface ContextMenuParams {\r\n    data?: { [key: string]: any };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    originX?: 'start' | 'center' | 'end';\r\n    originY?: 'top' | 'center' | 'bottom';\r\n    overlayX?: 'start' | 'center' | 'end';\r\n    overlayY?: 'top' | 'center' | 'bottom';\r\n}\r\n\r\ntype MenuOrigin = MouseEvent | EventTarget | HTMLElement;\r\n\r\nconst ORIGIN_ID = 'dynamic-context-menu-origin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContextMenu {\r\n    private lastOrigin: HTMLElement;\r\n    private openContextMenu: ContextMenuRef<any>|null;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private zone: NgZone,\r\n        private injector: Injector,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlay: Overlay,\r\n    ) {\r\n        this.router.events\r\n            .pipe(filter(e => e instanceof NavigationStart))\r\n            .subscribe(() => this.close());\r\n    }\r\n\r\n    public open<T>(component: ComponentType<T>, e: MenuOrigin, params: ContextMenuParams = {}): ContextMenuRef<T> {\r\n        this.close();\r\n\r\n        if ( ! component) {\r\n            return;\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(e, params);\r\n        this.openContextMenu = new ContextMenuRef(overlayRef);\r\n\r\n        const injector = new PortalInjector(this.injector, new WeakMap<any, any>([\r\n            [CONTEXT_MENU_DATA, params.data],\r\n            [ContextMenuRef, this.openContextMenu],\r\n        ]));\r\n\r\n        const portal = new ComponentPortal(component, null, injector);\r\n\r\n        overlayRef.attach(portal);\r\n        this.bindEventsToOverlay();\r\n\r\n        return this.openContextMenu;\r\n    }\r\n\r\n    /**\r\n     * Close currently open context menu.\r\n     */\r\n    public close() {\r\n        this.removeLastOrigin();\r\n\r\n        if (this.openContextMenu) {\r\n            this.openContextMenu.close();\r\n            this.openContextMenu = null;\r\n        }\r\n    }\r\n\r\n    private createOverlay(e: MenuOrigin, params: ContextMenuParams) {\r\n        return this.overlay.create({\r\n            positionStrategy: this.getMenuPositionStrategy(e, params),\r\n            scrollStrategy: this.overlay.scrollStrategies.close(),\r\n            hasBackdrop: true,\r\n            backdropClass: 'context-menu-backdrop',\r\n            panelClass: 'context-menu-overlay'\r\n        });\r\n    }\r\n\r\n    private bindEventsToOverlay() {\r\n        this.openContextMenu.contextMenuElement().addEventListener('click', () => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropClick().subscribe(() => {\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.backdropElement().addEventListener('contextmenu', e => {\r\n            e.preventDefault();\r\n            this.close();\r\n        });\r\n\r\n        this.openContextMenu.detachments().subscribe(() => {\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    private getMenuPositionStrategy(e: MenuOrigin, params: ContextMenuParams): PositionStrategy {\r\n        this.createOriginFromEvent(e, params);\r\n\r\n        const primary = {\r\n            originX: params.originX || 'center',\r\n            originY: params.originY || 'bottom',\r\n            overlayX: params.overlayX || 'center',\r\n            overlayY: params.overlayY || 'top',\r\n        };\r\n\r\n        return this.overlay.position().flexibleConnectedTo(new ElementRef(this.lastOrigin))\r\n            .withPositions([\r\n                primary,\r\n                {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'}\r\n            ]);\r\n    }\r\n\r\n    private createOriginFromEvent(e: MenuOrigin, params: ContextMenuParams) {\r\n        this.removeLastOrigin();\r\n\r\n        if (e instanceof HTMLElement || e instanceof EventTarget) {\r\n            this.lastOrigin = e as HTMLElement;\r\n        } else {\r\n            this.lastOrigin = document.createElement('div');\r\n            this.lastOrigin.style.position = 'fixed';\r\n            this.lastOrigin.style.top = e.clientY + (params.offsetY || 0) + 'px';\r\n            this.lastOrigin.style.left = e.clientX + (params.offsetX || 0) + 'px';\r\n            this.lastOrigin.id = ORIGIN_ID;\r\n            document.body.appendChild(this.lastOrigin);\r\n        }\r\n    }\r\n\r\n    private removeLastOrigin() {\r\n        if (this.lastOrigin && this.lastOrigin.id === ORIGIN_ID) {\r\n            this.lastOrigin.remove();\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const AVAILABLE_CONTEXT_MENUS = new InjectionToken<any>('AVAILABLE_CONTEXT_MENUS');\r\n","import {OverlayRef} from '@angular/cdk/overlay';\r\n\r\nexport class ContextMenuRef<T> {\r\n    constructor(private overlayRef: OverlayRef) {}\r\n\r\n    public close() {\r\n        if (this.overlayRef) {\r\n            this.overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    public backdropClick() {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    public attachments() {\r\n        return this.overlayRef.attachments();\r\n    }\r\n\r\n    public detachments() {\r\n        return this.overlayRef.detachments();\r\n    }\r\n\r\n    public backdropElement() {\r\n        return this.overlayRef.backdropElement;\r\n    }\r\n\r\n    public contextMenuElement() {\r\n        return this.overlayRef.overlayElement;\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CONTEXT_MENU_DATA = new InjectionToken<{ [key: string]: any }>('CONTEXT_MENU_DATA');\r\n","<div class=\"mat-tree-node root-tree-node\" *ngIf=\"showRootNode\" (click)=\"selectFolder()\" [class.active]=\"selectedFolder === 'root'\">\n    <mat-icon svgIcon=\"network-drive-custom\" class=\"folder-icon\"></mat-icon>\n    <span class=\"text\" trans>My Drive</span>\n</div>\n<mat-tree [dataSource]=\"tree.dataSource\" [treeControl]=\"tree.control\">\n    <mat-tree-node\n            *matTreeNodeDef=\"let node\"\n            matTreeNodePadding\n            [matTreeNodePaddingIndent]=\"showRootNode ? 40 : 24\"\n            [contextMenu]=\"{type: 'entry', entry: node}\"\n            [disableContextMenu]=\"disableContextMenu\"\n            [folderDropTarget]=\"node\"\n            [class.active]=\"selectedFolder === node.hash\"\n            class=\"tree-node\"\n    >\n        <mat-icon class=\"toggle-expansion-icon\"\n                  matTreeNodeToggle\n                  [class.expanded]=\"tree.control.isExpanded(node)\"\n                  svgIcon=\"arrow-drop-down\"\n        ></mat-icon>\n        <button type=\"button\" class=\"no-style folder-button\" (click)=\"selectFolder(node)\">\n            <mat-icon svgIcon=\"folder\" class=\"folder-icon\"></mat-icon>\n            <span class=\"folder-name text\">{{node.name}}</span>\n        </button>\n    </mat-tree-node>\n</mat-tree>\n","import {\n    ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation\n} from '@angular/core';\nimport { FoldersTreeService } from './folders-tree.service';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\n\n@Component({\n    selector: 'folders-tree',\n    templateUrl: './folders-tree.component.html',\n    styleUrls: ['./folders-tree.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FoldersTreeComponent {\n    @HostBinding('class.expanded') @Input() public expanded = false;\n    @Input() selectedFolder: string;\n    @Input() movingEntries: DriveEntry[] = [];\n    @Input() disableContextMenu = false;\n    @HostBinding('class.has-root-node') @Input() showRootNode = false;\n    @Output() folderSelected: EventEmitter<DriveFolder|RootFolder> = new EventEmitter();\n\n    // TODO: start trackBy function when it's fixed on angular material side\n    constructor(public tree: FoldersTreeService) {}\n\n    public selectFolder(folder?: DriveFolder|RootFolder) {\n        folder = folder || ROOT_FOLDER;\n        this.selectedFolder = folder.hash;\n        this.folderSelected.emit(folder);\n    }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n    }\n}\n","<ng-container *ngIf=\"(spaceUsedPercent$ | async) >= 0\">\r\n    <mat-progress-bar mode=\"determinate\" color=\"accent\" [value]=\"spaceUsedPercent$ | async\"></mat-progress-bar>\r\n\r\n    <div class=\"usage-info\">\r\n        {{spaceUsed$ | async | formattedFileSize}} {{'of' | trans}} {{spaceAvailable$ | async | formattedFileSize }} {{'used' | trans}}\r\n    </div>\r\n\r\n    <div class=\"upgrade-link-container\" *ngIf=\"billingEnabled()\">\r\n        <a routerLink=\"/billing/upgrade\" target=\"_blank\" trans>Upgrade Storage</a>\r\n    </div>\r\n</ng-container>\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'available-space-indicator',\n    templateUrl: './available-space-indicator.component.html',\n    styleUrls: ['./available-space-indicator.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AvailableSpaceIndicatorComponent {\n    @Select(DriveState.userSpaceUsed) spaceUsed$: Observable<number>;\n    @Select(DriveState.userSpaceAvailable) spaceAvailable$: Observable<number>;\n    @Select(DriveState.spaceUsedPercent) spaceUsedPercent$: Observable<number>;\n\n    constructor(public settings: Settings) {}\n\n    public billingEnabled() {\n        return this.settings.get('billing.enable');\n    }\n}\n","import {Component, ViewEncapsulation, ChangeDetectionStrategy} from '@angular/core';\nimport { DriveUrlsService } from '../drive-urls.service';\nimport { DriveFolder } from '../folders/models/driveFolder';\nimport { DriveState} from '../state/drive-state';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { OpenFolder } from '../state/actions/commands';\nimport { ROOT_FOLDER, RootFolder } from '../folders/root-folder';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidebarComponent {\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(\n        public urls: DriveUrlsService,\n        private store: Store\n    ) {}\n\n    public openFolder(folder: DriveFolder|RootFolder) {\n        this.store.dispatch(new OpenFolder(folder));\n    }\n\n    public getRootFolder(): RootFolder {\n        return ROOT_FOLDER;\n    }\n}\n","<sidebar-action-buttons></sidebar-action-buttons>\r\n\r\n<div class=\"drive-folders\">\r\n    <div class=\"sidebar-menu-item\" [routerLink]=\"urls.driveRoot()\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" [folderDropTarget]=\"getRootFolder()\">\r\n        <mat-icon svgIcon=\"arrow-drop-down\" class=\"toggle-expansion-icon\" [class.expanded]=\"tree.expanded\" (click)=\"tree.toggle(); $event.stopPropagation()\"></mat-icon>\r\n        <mat-icon svgIcon=\"network-drive-custom\"></mat-icon>\r\n        <span class=\"text\" trans>My Drive</span>\r\n    </div>\r\n\r\n    <folders-tree (folderSelected)=\"openFolder($event)\" [selectedFolder]=\"(activePage$ | async).folderHash\" #tree></folders-tree>\r\n</div>\r\n\r\n<custom-menu class=\"sidebar-menu\" position=\"drive-sidebar\" itemClass=\"sidebar-menu-item\"></custom-menu>\r\n\r\n<available-space-indicator></available-space-indicator>","<ng-container *ngIf=\"entry$ | async as entry\">\n    <ng-container *ngIf=\"savingDescription$ | async; else descriptionSaved\">\n        <span trans>Saving...</span>\n    </ng-container>\n    <ng-template #descriptionSaved>\n        <div class=\"input-container\" *ngIf=\"editingDescription$ | async; else descriptionEl\">\n            <label for=\"description\" class=\"hidden\" trans>Description</label>\n            <textarea\n                    rows=\"4\"\n                    id=\"description\"\n                    #textArea\n                    [value]=\"entry.description\"\n                    (enterKeybind)=\"textArea.blur()\"\n                    (blur)=\"updateDescription(entry, textArea.value)\"\n            ></textarea>\n        </div>\n        <ng-template #descriptionEl>\n            <div class=\"description-text\" (click)=\"editDescription()\">{{entry.description || ('Add a description' | trans)}}</div>\n            <button mat-icon-button (click)=\"editDescription()\" [matTooltip]=\"'Edit description' | trans\">\n                <mat-icon svgIcon=\"edit\"></mat-icon>\n            </button>\n        </ng-template>\n    </ng-template>\n</ng-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { UpdateEntryDescription } from '../../../state/actions/commands';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../../state/drive-state';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'entry-description-panel',\n    templateUrl: './entry-description-panel.component.html',\n    styleUrls: ['./entry-description-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryDescriptionPanelComponent implements AfterViewInit {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @ViewChildren('textArea') textArea: QueryList<ElementRef<HTMLTextAreaElement>>;\n    public editingDescription$ = new BehaviorSubject(false);\n    public savingDescription$ = new BehaviorSubject(false);\n\n    constructor(private store: Store) {}\n\n    public ngAfterViewInit() {\n        this.textArea.changes.subscribe(queryList => {\n            queryList.length && queryList.first.nativeElement.focus();\n        });\n    }\n\n    public editDescription() {\n        this.editingDescription$.next(true);\n    }\n\n    public updateDescription(entry: FileEntry, value: string) {\n        this.editingDescription$.next(false);\n        if (entry.description === value) return;\n        this.savingDescription$.next(true);\n        this.store.dispatch(new UpdateEntryDescription(entry, value))\n            .pipe(finalize(() => this.savingDescription$.next(false)))\n            .subscribe();\n    }\n}\n","<img [src]=\"getPreviewUrl()\"\r\n     *ngIf=\"file.type === 'image'\"\r\n     [ngClass]=\"file.type+'-file'\"\r\n     class=\"file-color\"\r\n     draggable=\"false\">\r\n\r\n<file-icon *ngIf=\"file.type !== 'image'\" [type]=\"file.type === 'folder' ? getFolderIcon() : file.type\"></file-icon>","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'file-thumbnail',\n    templateUrl: './file-thumbnail.component.html',\n    styleUrls: ['./file-thumbnail.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileThumbnailComponent {\n    @Input() file: DriveEntry;\n\n    public getPreviewUrl(): string {\n        let url = this.file.url;\n        if (this.file.thumbnail) {\n            const separator = url.includes('?') ? '&' : '?';\n            url += separator + 'thumbnail=true';\n        }\n        return url;\n    }\n\n    public getFolderIcon() {\n        if (this.file.users && this.file.users.length > 1) {\n            return 'shared-folder';\n        } else {\n            return 'folder';\n        }\n    }\n}\n","<ng-container *ngIf=\"entry$ | async as entry; else nothingSelected\">\n    <ng-container *ngIf=\"entry.updated_at; else nothingSelected\">\n        <file-thumbnail *ngIf=\"entry.type === 'image'\" class=\"preview\" [file]=\"entry\"></file-thumbnail>\n        <div class=\"users-list\">\n            <img *ngFor=\"let user of entry.users\" [src]=\"user.avatar\" [matTooltip]=\"user.display_name\">\n        </div>\n        <div class=\"details-list\">\n            <div class=\"item\">\n                <div class=\"name\" trans>Type</div>\n                <div class=\"value type-value\" trans>{{entry.type}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Size</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Storage Used</div>\n                <div class=\"value\">{{entry.file_size | formattedFileSize}}</div>\n            </div>\n            <div class=\"item location-item\">\n                <div class=\"name\" trans>Location</div>\n                <div class=\"value\" (click)=\"openLocation()\">\n                    <mat-icon svgIcon=\"folder\"></mat-icon>\n                    <span class=\"text\">{{(parent$ | async)?.name || 'My Drive'}}</span>\n                </div>\n            </div>\n            <div class=\"item\" *ngIf=\"entry.users && entry.users.length\">\n                <div class=\"name\" trans>Owner</div>\n                <div class=\"value\">{{entry.users[0].display_name}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Last Updated</div>\n                <div class=\"value\">{{entry.updated_at | formattedDate}}</div>\n            </div>\n            <div class=\"item\">\n                <div class=\"name\" trans>Created</div>\n                <div class=\"value\">{{entry.created_at | formattedDate}}</div>\n            </div>\n            <entry-description-panel></entry-description-panel>\n        </div>\n    </ng-container>\n</ng-container>\n\n<ng-template #nothingSelected>\n    <div class=\"nothing-selected\">\n        <mat-icon svgIcon=\"selection-tool-custom\" class=\"icon\"></mat-icon>\n        <div class=\"text\" trans>Select file or folder to view its details.</div>\n    </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { DriveFolder } from '../../folders/models/driveFolder';\n\n@Component({\n    selector: 'details-panel',\n    templateUrl: './details-panel.component.html',\n    styleUrls: ['./details-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsPanelComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.selectedEntryParent) parent$: Observable<DriveFolder>;\n\n    constructor(private store: Store) {}\n\n    public openLocation() {\n        const parent = this.store.selectSnapshot(DriveState.selectedEntryParent);\n        this.store.dispatch(new OpenFolder(parent));\n    }\n}\n","<div class=\"header\">\n    <div class=\"title\">\n        <ng-container *ngIf=\"entry$ | async as entry; else defaultTitle\">\n            <ng-container *ngIf=\"entry.type; else defaultTitle\">\n                <file-icon [type]=\"entry.type\"></file-icon>\n                <div class=\"name\">{{entry.name}}</div>\n            </ng-container>\n        </ng-container>\n        <ng-template #defaultTitle>\n            <file-icon type=\"folder\"></file-icon>\n            <div class=\"name\">{{ ((activePage$ | async)?.viewName) | trans }}</div>\n        </ng-template>\n        <button mat-icon-button class=\"close-button\" (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n<details-panel></details-panel>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState} from '../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { ToggleDetailsSidebar } from '../state/actions/commands';\nimport { DrivePage } from '../state/models/drive-page';\n\n@Component({\n    selector: 'details-sidebar',\n    templateUrl: './details-sidebar.component.html',\n    styleUrls: ['./details-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsSidebarComponent {\n    @Select(DriveState.selectedEntryOrActiveFolder) entry$: Observable<DriveEntry>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    constructor(private store: Store) {}\n\n    public close() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n}\n","import {\n    ContentChildren, Directive, ElementRef, NgZone, OnDestroy, OnInit, QueryList\n} from '@angular/core';\nimport { FilesGridItemComponent } from '../files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { Store } from '@ngxs/store';\nimport { EntryDoubleTapped, EntryTapped } from '../state/actions/events';\nimport { DragEntryService } from './drag-entry.service';\nimport { DeselectAllEntries, SelectEntries } from '../state/actions/commands';\nimport { DriveState } from '../state/drive-state';\nimport { DriveEntry } from '../files/models/drive-entry';\nimport { FilesDragSelectService } from './files-drag-select.service';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[driveHammerInteractions]'\n})\nexport class DriveHammerInteractionsDirective implements OnInit, OnDestroy {\n    @ContentChildren(FilesGridItemComponent, {descendants: true}) gridItems: QueryList<FilesGridItemComponent>;\n\n    private hammerManager: HammerManager;\n    private panService: FilesDragSelectService|DragEntryService|null;\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private zone: NgZone,\n        private el: ElementRef,\n        private store: Store,\n        private dragSelect: FilesDragSelectService,\n        private dragEntry: DragEntryService,\n        private domCache: DriveDomCacheService,\n    ) {}\n\n    ngOnInit() {\n        this.bindToHammer();\n\n        // disable \"pan\" on mobile as it will prevent scrolling\n        const sub = this.store.select(DriveState.isMobile).subscribe(isMobile => {\n            this.hammerManager.get('pan').set({\n                enable: !isMobile\n            });\n            this.hammerManager.get('doubletap').set({\n                enable: !isMobile\n            });\n        });\n\n        this.subscriptions.push(sub);\n    }\n\n    ngOnDestroy() {\n        this.dragSelect.removeSelectBox();\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    private bindToHammer() {\n        this.createHammerManager();\n        this.onPanStart();\n        this.onPan();\n        this.onPanEnd();\n        this.onTap();\n        this.onDoubleTap();\n    }\n\n    private createHammerManager() {\n        this.zone.runOutsideAngular(() => {\n            this.hammerManager = new Hammer.Manager(this.domCache.filesCont);\n\n            const tap = new Hammer.Tap(),\n                pan = new Hammer.Pan(),\n                doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n            this.hammerManager.add([tap, doubleTap, pan]);\n            this.hammerManager.get('doubletap').recognizeWith('tap');\n        });\n    }\n\n    private onPanStart() {\n        this.hammerManager.on('panstart', e => {\n            const gridElement = this.getEntryEl(e);\n\n            if (gridElement) {\n                this.panService = this.dragEntry;\n                const entry = this.getEntryByEl(gridElement),\n                    selectedEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n\n                // select entry, if not already selected\n                if ( ! selectedEntries.find(en => en.id === entry.id)) {\n                    this.store.dispatch(new SelectEntries([this.getEntryByEl(gridElement)]));\n                }\n            } else {\n                this.panService = this.dragSelect;\n            }\n\n            this.panService.start(e);\n        });\n    }\n\n    private onPan() {\n        this.hammerManager.on('pan', e => {\n            if (this.panService) this.panService.move(e);\n        });\n    }\n\n    private onPanEnd() {\n        this.hammerManager.on('panend', () => {\n            if (this.panService) this.panService.end();\n        });\n    }\n\n    private onTap() {\n        this.hammerManager.on('tap', e => {\n            const entryEl = this.getEntryEl(e);\n            this.dragSelect.removeSelectBox();\n\n            if (entryEl) {\n                this.store.dispatch(new EntryTapped(this.getEntryByEl(entryEl), e.srcEvent.ctrlKey));\n            } else if (e.target.closest('.files-container')) {\n                this.store.dispatch(new DeselectAllEntries());\n            }\n        });\n    }\n\n    private onDoubleTap() {\n        this.hammerManager.on('doubletap', e => {\n            const gridElement = this.getEntryEl(e);\n            if ( ! gridElement) return;\n\n            this.store.dispatch(new EntryDoubleTapped(\n                this.getEntryByEl(gridElement)\n            ));\n        });\n    }\n\n    private getEntryEl(e: HammerInput) {\n        return e.target.closest('.drive-entry') as HTMLElement;\n    }\n\n    private getEntryByEl(el: HTMLElement): DriveEntry {\n        const id = +el.dataset.id;\n        return this.store.selectSnapshot(DriveState.entries)\n            .find(curr => curr.id === +id);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DriveDomCacheService } from './drive-dom-cache.service';\nimport { Store } from '@ngxs/store';\nimport { StoppedDragging } from '../state/actions/events';\nimport { StartedDragging } from '../state/actions/events';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DragEntryService {\n    constructor(\n        private domCache: DriveDomCacheService,\n        private store: Store\n    ) {}\n\n    public start(e: HammerInput) {\n        this.store.dispatch(new StartedDragging());\n    }\n\n    public move(e: HammerInput) {\n        this.domCache.dragPreview.style.top = e.center.y + 'px';\n        this.domCache.dragPreview.style.left = e.center.x + 'px';\n    }\n\n    public end() {\n        this.store.dispatch(new StoppedDragging());\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { EntriesSelectedViaDrag } from '../state/actions/events';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveDomCacheService } from './drive-dom-cache.service';\r\nimport { DriveState } from '../state/drive-state';\r\n\r\nconst GRID_ITEM_SELECTOR = 'files-grid-item';\r\n\r\ntype AreaEdge = 'top'|'left'|'right'|'bottom'|false;\r\n\r\ninterface SelectorRect extends ClientRect {\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilesDragSelectService {\r\n    private selectBox: HTMLDivElement;\r\n    private initial = {x: 0, y: 0, scrollTop: 0};\r\n    private lastPanEvent: HammerInput|null;\r\n    private scrollListener: EventListener;\r\n\r\n    constructor(\r\n        private store: Store,\r\n        private cache: DriveDomCacheService,\r\n    ) {}\r\n\r\n    public start(e: HammerInput) {\r\n        this.cacheClientRects();\r\n        this.createSelectBox();\r\n        this.bindScroll();\r\n\r\n        this.initial = {\r\n            ...this.hammerToRelative(e),\r\n            scrollTop: this.cache.scrollCont.scrollTop,\r\n        };\r\n\r\n        this.selectBox.style.top = this.initial.y + 'px';\r\n        this.selectBox.style.left = this.initial.x + 'px';\r\n\r\n\r\n    }\r\n\r\n    public move(e: HammerInput) {\r\n        this.lastPanEvent = e;\r\n        this.resizeBox(e);\r\n    }\r\n\r\n    public end() {\r\n        this.removeSelectBox();\r\n        this.dispatchSelectedAction();\r\n        this.unbindScroll();\r\n    }\r\n\r\n    public resizeBox(e?: HammerInput|null) {\r\n        if ( ! e) e = this.lastPanEvent;\r\n        if ( ! e || ! this.selectBox) return;\r\n        const newPos = this.getNewSelectorPosition(e);\r\n        this.scrollAndRepositionSelector(newPos);\r\n        this.selectIntersectingElements();\r\n    }\r\n\r\n    /**\r\n     * Calculate new position of selector box.\r\n     */\r\n    private getNewSelectorPosition(e: HammerInput): SelectorRect {\r\n        const current = this.hammerToRelative(e);\r\n\r\n        let tmp,\r\n            x1 = this.initial.x,\r\n            y1 = this.initial.y,\r\n            x2 = current.x,\r\n            y2 = current.y;\r\n\r\n        if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }\r\n        if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }\r\n\r\n        return {\r\n            width: x2 - x1,\r\n            height: y2 - y1,\r\n            top: y1,\r\n            right: x1 + (x2 - x1), // left + width\r\n            bottom: y1 + (y2 - y1), // top + height\r\n            left: x1,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if specified position intersects any container edge.\r\n     */\r\n    private reachedAreaEdge(newPos: ClientRect): AreaEdge {\r\n        const area = this.rectToRelative(this.cache.filesContRect);\r\n\r\n        if (newPos.left <= area.left) {\r\n            return 'left';\r\n        } else if (newPos.top <= area.top) {\r\n            return 'top';\r\n        } else if (newPos.right >= area.right) {\r\n            return 'right';\r\n        } else if (newPos.bottom >= area.bottom) {\r\n            return 'bottom';\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto scroll container (if needed) and reposition selector box.\r\n     */\r\n    private scrollAndRepositionSelector(newPos: SelectorRect) {\r\n        const area = this.cache.scrollCont,\r\n            edge = this.reachedAreaEdge(newPos);\r\n\r\n        // make sure top always starts at the same coordinates\r\n        // regardless of any scrolling done during dragging\r\n        newPos.top += this.initial.scrollTop;\r\n\r\n        // auto scroll when cursor reaches container edge\r\n        if (edge === 'bottom') {\r\n            area.scrollBy({top: 4});\r\n        } else if (edge === 'top') {\r\n            area.scrollBy({top: -4});\r\n        }\r\n\r\n        // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n        const scrollDiff = this.cache.scrollCont.scrollTop - this.initial.scrollTop,\r\n            scrollValue = Math.abs(scrollDiff);\r\n\r\n        // top needs to be changed only if scroll direction is top\r\n        if (scrollDiff < 0) {\r\n            newPos.top -= scrollValue;\r\n        }\r\n\r\n        // height needs to be changed regardless of direction and method\r\n        newPos.height += scrollValue;\r\n\r\n        // check if we have reached bottom edge again, after scroll values are applied\r\n        const reachedBottom = (newPos.top + newPos.height) >= this.cache.scrollCont.scrollHeight;\r\n\r\n        // if any select area edge is reached, bail\r\n        if (edge === 'left' || edge === 'right' || reachedBottom) return;\r\n\r\n        // finally, reposition select box with scroll values applied\r\n        this.applyPosition(newPos);\r\n    }\r\n\r\n    /**\r\n     * Apply specified position to selector box.\r\n     */\r\n    private applyPosition(newPos: ClientRect) {\r\n        this.selectBox.style.width = newPos.width + 'px';\r\n        this.selectBox.style.height = newPos.height + 'px';\r\n        this.selectBox.style.left = newPos.left + 'px';\r\n        this.selectBox.style.top = newPos.top + 'px';\r\n    }\r\n\r\n    private selectIntersectingElements() {\r\n        const selectedBoxRect = this.selectBox.getBoundingClientRect();\r\n\r\n        this.getGridElements().forEach((gridItem: HTMLElement) => {\r\n            const rect = gridItem.getBoundingClientRect();\r\n\r\n            // item intersects the select box\r\n            if (rect.top + rect.height > selectedBoxRect.top\r\n                && rect.left + rect.width > selectedBoxRect.left\r\n                && rect.bottom - rect.height < selectedBoxRect.bottom\r\n                && rect.right - rect.width < selectedBoxRect.right) {\r\n                gridItem.classList.add('selected');\r\n            } else {\r\n                gridItem.classList.remove('selected');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform absolute container client rect into relative.\r\n     */\r\n    private rectToRelative(rect: ClientRect): ClientRect {\r\n        return {\r\n            width: rect.width,\r\n            height: rect.height,\r\n            left: rect.left - this.cache.filesContRect.left,\r\n            top: rect.top - this.cache.filesContRect.top,\r\n            right: rect.right - this.cache.filesContRect.left,\r\n            bottom: rect.bottom - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Transform hammer absolute event to relative coordinates.\r\n     */\r\n    private hammerToRelative(e: HammerInput) {\r\n        return {\r\n            x: e.center.x - this.cache.filesContRect.left,\r\n            y: e.center.y - this.cache.filesContRect.top\r\n        };\r\n    }\r\n\r\n    private dispatchSelectedAction() {\r\n        const ids = this.getGridElements()\r\n            .filter(el => el.classList.contains('selected'))\r\n            .map(el => +el.dataset.id);\r\n\r\n        const entries = this.store.selectSnapshot(DriveState.entries)\r\n            .filter(entry => ids.indexOf(entry.id) > -1);\r\n\r\n        this.store.dispatch(new EntriesSelectedViaDrag(entries));\r\n    }\r\n\r\n    private createSelectBox() {\r\n        this.selectBox = document.createElement('div');\r\n        this.selectBox.classList.add('files-select-box');\r\n        this.cache.filesCont.appendChild(this.selectBox);\r\n    }\r\n\r\n    public removeSelectBox() {\r\n        if ( ! this.selectBox) return;\r\n        this.selectBox.remove();\r\n        this.selectBox = null;\r\n    }\r\n\r\n    private cacheClientRects() {\r\n        this.cache.filesContRect = this.cache.filesCont.getBoundingClientRect();\r\n        this.cache.scrollContRect = this.cache.scrollCont.getBoundingClientRect();\r\n    }\r\n\r\n    private getGridElements(): HTMLElement[] {\r\n        return Array.from(this.cache.filesCont.querySelectorAll(GRID_ITEM_SELECTOR));\r\n    }\r\n\r\n    private bindScroll() {\r\n        this.scrollListener = () => this.resizeBox();\r\n        this.cache.scrollCont.addEventListener('scroll', this.scrollListener);\r\n    }\r\n\r\n    private unbindScroll() {\r\n        this.cache.scrollCont.removeEventListener('scroll', this.scrollListener);\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, HostBinding } from '@angular/core';\nimport { DriveEntry } from '../../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid-item',\n    templateUrl: './files-grid-item.component.html',\n    styleUrls: ['./files-grid-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridItemComponent {\n    @HostBinding('class.drive-entry') driveEntry = true;\n    @Input() entry: DriveEntry;\n\n    @HostBinding('attr.data-id') get fileId() {\n        return this.entry.id;\n    }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { DriveEntry } from '../../../files/models/drive-entry';\r\nimport { CONTEXT_MENU_DATA } from 'common/core/ui/context-menu/context-menu-data';\r\nimport { EntryContextMenuOpened } from '../../../state/actions/events';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { DeselectAllEntries } from '../../../state/actions/commands';\r\n\r\nexport interface FileContextMenuData {\r\n    entry: DriveEntry;\r\n}\r\n\r\n@Component({\r\n    selector: 'drive-context-menu',\r\n    templateUrl: './drive-context-menu.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DriveContextMenuComponent {\r\n    @HostBinding('class.context-menu') contextMenu = true;\r\n\r\n    constructor(\r\n        @Optional() @Inject(CONTEXT_MENU_DATA) public data: FileContextMenuData,\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser\r\n    ) {\r\n        if (this.data && this.data.entry) {\r\n            this.store.dispatch(new EntryContextMenuOpened(this.data.entry));\r\n        } else {\r\n            this.store.dispatch(new DeselectAllEntries());\r\n        }\r\n    }\r\n}\r\n","<div class=\"preview-container\">\n    <file-thumbnail class=\"preview\" [file]=\"entry\"></file-thumbnail>\n</div>\n<figcaption class=\"files-grid-item-footer\">\n    <file-icon [type]=\"entry.type\"></file-icon>\n    <div class=\"text\">{{entry.name}}</div>\n</figcaption>\n","<context-actions-container></context-actions-container>","<ng-container *ngFor=\"let item of breadcrumb | async; last as last; first as first;\">\r\n    <div class=\"breadcrumb-item\" (click)=\"last ? openContextMenu(item, button) : openPage(item)\" [class.no-action]=\"!item.hasActions\" #button>\r\n        <span class=\"name\">{{first ? (item.viewName | trans) : item.viewName}}</span>\r\n        <mat-icon svgIcon=\"arrow-drop-down\" *ngIf=\"last && item.hasActions\"></mat-icon>\r\n    </div>\r\n    <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n</ng-container>","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { Store } from '@ngxs/store';\nimport { DriveState} from '../../state/drive-state';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { Translations } from 'common/core/translations/translations.service';\nimport { ContextMenu, ContextMenuParams } from 'common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { OpenFolder } from '../../state/actions/commands';\nimport { ROOT_FOLDER } from '../../folders/root-folder';\nimport { DriveFolderPage, DrivePage, ROOT_FOLDER_PAGE, SHARES_PAGE } from '../../state/models/drive-page';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Navigate } from '@ngxs/router-plugin';\n\n@Component({\n    selector: 'entry-breadcrumbs',\n    templateUrl: './entry-breadcrumbs.component.html',\n    styleUrls: ['./entry-breadcrumbs.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EntryBreadcrumbsComponent implements OnInit {\n    public breadcrumb: BehaviorSubject<DrivePage[]> = new BehaviorSubject([]);\n\n    constructor(\n        private entriesApi: DriveEntryApiService,\n        private i18n: Translations,\n        private contextMenu: ContextMenu,\n        private store: Store\n    ) {}\n\n    ngOnInit() {\n        // wait until entries and user folders are loaded\n        const sub = combineLatest(\n            this.store.select(DriveState.meta),\n            this.store.select(DriveState.userFoldersLoaded),\n        ).subscribe(combined => {\n            if (combined[0].currentPage && combined[1]) {\n                this.bindToActivePage();\n                sub && sub.unsubscribe();\n            }\n        });\n    }\n\n    public openPage(page: DrivePage) {\n        if (page.folder) {\n            this.store.dispatch(new OpenFolder(page.folder));\n        } else {\n            this.store.dispatch(new Navigate(['/drive/shares']));\n        }\n    }\n\n    public openContextMenu(item: DrivePage, origin: HTMLElement) {\n        let params = {originX: 'start', overlayX: 'start'} as ContextMenuParams;\n\n        switch (item.name) {\n            case 'trash':\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case 'root':\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n            case 'folder':\n                params = {data: {entry: this.store.selectSnapshot(DriveState.activeFolder)}, ...params};\n                return this.contextMenu.open(DriveContextMenuComponent, origin, params);\n        }\n    }\n\n    private generateBreadCrumb(page: DrivePage, folders?: {[key: number]: DriveFolder}) {\n        const breadcrumbs = [page.name === 'folder' ? this.getFolderRootBreadcrumb(page) : page];\n\n        if (page.folder && page.folder !== ROOT_FOLDER) {\n            const folderPath = this.getBreadcrumbForFolder(page.folder, folders);\n            breadcrumbs.push(...folderPath);\n        }\n\n        this.breadcrumb.next(breadcrumbs);\n    }\n\n    private getBreadcrumbForFolder(folder: DriveEntry, allFolders: {[key: number]: DriveEntry}) {\n        return folder.path.split('/').map(id => {\n            const pathFolder = folder.id === +id ? folder : allFolders[id];\n            return pathFolder && new DriveFolderPage(pathFolder);\n        }).filter(f => !!f);\n    }\n\n    private getFolderRootBreadcrumb(page: DriveFolderPage) {\n        const userOwnsFolder = this.store.selectSnapshot(DriveState.userOwnsActiveFolder);\n\n        if ( ! page.folder || userOwnsFolder) {\n            return ROOT_FOLDER_PAGE;\n        } else {\n            return SHARES_PAGE;\n        }\n    }\n\n    private bindToActivePage() {\n        combineLatest(\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.flatFolders)\n        ).pipe(\n            distinctUntilChanged(),\n            filter(combined => {\n                // wait until folder data is fully loaded\n                return ! combined[0].folderHash || combined[0].folder;\n            })\n        ).subscribe(combined => {\n            this.generateBreadCrumb(combined[0], combined[1]);\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'drive-toolbar',\n    templateUrl: './drive-toolbar.component.html',\n    styleUrls: ['./drive-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveToolbarComponent {\n}\n","<entry-breadcrumbs></entry-breadcrumbs>\r\n","export const AVAILABLE_SORTS: DriveSortOption[] = [\r\n    {name: 'file_size', viewName: 'Size'},\r\n    {name: 'name', viewName: 'Name'},\r\n    {name: 'updated_at', viewName: 'Last Modified'},\r\n    {name: 'created_at', viewName: 'Upload Date'},\r\n    {name: 'type', viewName: 'Type'},\r\n    {name: 'extension', viewName: 'Extension'},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n    name: SortColumn;\r\n    viewName: string;\r\n}\r\n\r\nexport type SortColumn = 'file_size' | 'name' | 'updated_at' | 'created_at' | 'type' | 'extension';\r\nexport type SortDirection = 'desc'|'asc';\r\n\r\nexport interface SortValue {\r\n    column: SortColumn;\r\n    direction: SortDirection;\r\n}\r\n","<ng-container *ngIf=\"sort$ | async as sortValue\">\n    <span class=\"label\" trans>Sort by</span>\n    <button class=\"no-style\" [matMenuTriggerFor]=\"menu\" [disabled]=\"btnDisabled\">\n        <span class=\"sort-button-content\">\n            <span>{{getSortViewName(sortValue.column) | trans}}</span>\n            <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"arrow-icon\"></mat-icon>\n        </span>\n        <mat-icon svgIcon=\"sort\" class=\"mobile-sort-button-content\"></mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"drive-sort-menu\">\n        <div class=\"title\" trans>Direction</div>\n        <button mat-menu-item (click)=\"changeDirection('asc')\" [class.active]=\"sortValue.direction === 'asc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Ascending</span>\n        </button>\n        <button mat-menu-item (click)=\"changeDirection('desc')\" [class.active]=\"sortValue.direction === 'desc'\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>Descending</span>\n        </button>\n        <div class=\"separator\"></div>\n        <div class=\"title\" trans>Sort By</div>\n        <button mat-menu-item *ngFor=\"let sort of availableSorts\" (click)=\"changeSort(sort)\" [class.active]=\"sortValue.column === sort.name\">\n            <mat-icon svgIcon=\"check\"></mat-icon>\n            <span trans>{{sort.viewName}}</span>\n        </button>\n    </mat-menu>\n</ng-container>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { AVAILABLE_SORTS, DriveSortOption, SortColumn, SortDirection, SortValue } from '../../entries/available-sorts';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nconst DEFAULT_VALUE: SortValue = {column: 'updated_at', direction: 'desc'};\n\n@Component({\n    selector: 'entries-sort-button',\n    templateUrl: './entries-sort-button.component.html',\n    styleUrls: ['./entries-sort-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: EntriesSortButtonComponent,\n        multi: true,\n    }]\n})\nexport class EntriesSortButtonComponent implements ControlValueAccessor {\n    @Input() btnDisabled = false;\n    public availableSorts = AVAILABLE_SORTS;\n    public propagateChange: Function;\n\n    public sort$: BehaviorSubject<SortValue> = new BehaviorSubject(DEFAULT_VALUE);\n\n    public changeSort(column: DriveSortOption) {\n        this.sort$.next({...this.sort$.value, column: column.name});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public changeDirection(direction: SortDirection) {\n        this.sort$.next({...this.sort$.value, direction});\n        this.propagateChange(this.sort$.value);\n    }\n\n    public getSortViewName(column: SortColumn): string {\n        return this.availableSorts.find(sort => sort.name === column).viewName;\n    }\n\n    public writeValue(value: SortValue) {\n        this.sort$.next(value || DEFAULT_VALUE);\n    }\n\n    public registerOnChange(fn: Function) {\n        this.propagateChange = fn;\n    }\n\n    public registerOnTouched() {}\n}\n","import { Store } from '@ngxs/store';\r\nimport { DriveState } from '../state/drive-state';\r\nimport { DriveContextAction } from './types/drive-context-action';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport abstract class DriveContextActions {\r\n    protected multipleEntriesSelected: boolean;\r\n    protected allStarred: boolean;\r\n    protected onlyFoldersSelected: boolean;\r\n\r\n    protected abstract actions: DriveContextAction[];\r\n\r\n    constructor(protected store: Store) {}\r\n\r\n    public getActions() {\r\n        this.updateStatus();\r\n        return this.actions;\r\n    }\r\n\r\n    protected getSelectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n\r\n    protected updateStatus() {\r\n        this.multipleEntriesSelected = this.store.selectSnapshot(DriveState.multipleEntriesSelected);\r\n        this.allStarred = this.store.selectSnapshot(DriveState.allSelectedEntriesStarred);\r\n        this.onlyFoldersSelected = this.store.selectSnapshot(DriveState.onlyFoldersSelected);\r\n    }\r\n}\r\n","import { DeleteTrashedEntriesForever, OpenConfirmDialog, RestoreTrashedEntries, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Restore',\r\n            icon: 'restore',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new RestoreTrashedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Delete Forever',\r\n            icon: 'delete-forever',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.deleteForever();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public deleteForever() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Delete Forever',\r\n            body: 'This will permanently delete selected items.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Delete Forever',\r\n        }, new DeleteTrashedEntriesForever()));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { ShareableLink } from './models/shareable-link';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { ShareableLinkOptions } from './models/shareable-link-options';\nimport { User } from '@common/core/types/models/User';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\nexport interface GetLinkData {\n    link: ShareableLink;\n    folderChildren: PaginationResponse<FileEntry>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ShareableLinksApiService {\n    constructor(private http: AppHttpClient) {}\n\n    public findByEntryId(entryId: number, params: {autoCreate?: boolean}): BackendResponse<{ link: ShareableLink }> {\n        return this.http.get(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public findByHash(hash: string, params?: {withEntries?: boolean, page?: number, order?: string}): BackendResponse<GetLinkData> {\n        return this.http.get(`drive/shareable-links/${hash}`, params);\n    }\n\n    public create(entryId: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.post(`drive/entries/${entryId}/shareable-link`, params);\n    }\n\n    public update(id: number, params: Partial<ShareableLinkOptions>): BackendResponse<{ link: ShareableLink }> {\n        return this.http.put(`drive/shareable-links/${id}`, params);\n    }\n\n    public delete(id: number): BackendResponse<void> {\n        return this.http.delete(`drive/shareable-links/${id})`);\n    }\n\n    public checkPassword(linkId: number, password: string): BackendResponse<{matches: boolean}> {\n        return this.http.post(`drive/shareable-links/${linkId}/check-password`, {password});\n    }\n\n    /**\n     * Import shareable link entry into current user's drive.\n     */\n    public importEntry(linkId: number, password?: string): BackendResponse<{users: User[]}> {\n        return this.http.post(`drive/shareable-links/${linkId}/import`, {password});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { ShareableLinkOptions } from './models/shareable-link-options';\r\nimport { ShareableLinksApiService } from './shareable-links-api.service';\r\nimport { ShareableLink } from './models/shareable-link';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { Settings } from 'common/core/config/settings.service';\r\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport interface ShareLinkStateModel {\r\n    cache: {[key: number]: ShareableLink};\r\n    backendErrors: BackendErrorMessages;\r\n    link: ShareableLink;\r\n    loading: boolean;\r\n    linkOptions: ShareableLinkOptions;\r\n    optionsPanelVisible: boolean;\r\n}\r\n\r\nexport class LoadShareableLink {\r\n    static readonly type = '[Shareable Link] Load From Backend';\r\n    constructor(public options: {autoCreate?: boolean} = {}) {}\r\n}\r\n\r\nexport class UpdateShareableLink {\r\n    static readonly type = '[Shareable Link] Update';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class CreateShareableLink {\r\n    static readonly type = '[Shareable Link] Create';\r\n    constructor(public options: ShareableLinkOptions) {}\r\n}\r\n\r\nexport class DeleteShareableLink {\r\n    static readonly type = '[Shareable Link] Delete';\r\n}\r\n\r\nexport class ToggleOptionsPanel {\r\n    static readonly type = '[Shareable Link] Toggle Options Panel Visibility';\r\n}\r\n\r\nexport class LinkCopySuccess {\r\n    static readonly type = '[Shareable Link] Copy To Clipboard Success';\r\n}\r\n\r\nexport class ResetShareLinkState {\r\n    static readonly type = '[Shareable Link] Reset State';\r\n}\r\n\r\nconst defaultState = {\r\n    link: null,\r\n    loading: false,\r\n    optionsPanelVisible: true,\r\n    backendErrors: {},\r\n    cache: {},\r\n    linkOptions: {\r\n        allowDownload: false,\r\n        allowEdit: false,\r\n        expiresAt: null,\r\n        password: null,\r\n    }\r\n};\r\n\r\n@State<ShareLinkStateModel>({\r\n    name: 'shareLink',\r\n    defaults: defaultState\r\n})\r\n@Injectable()\r\nexport class ShareLinkState {\r\n    constructor(\r\n        private store: Store,\r\n        private settings: Settings,\r\n        private linksApi: ShareableLinksApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static loading(state: ShareLinkStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Selector()\r\n    static link(state: ShareLinkStateModel) {\r\n        return state.link;\r\n    }\r\n\r\n    @Selector()\r\n    static optionsVisible(state: ShareLinkStateModel) {\r\n        return ! state.loading && state.optionsPanelVisible;\r\n    }\r\n\r\n    @Selector()\r\n    static backendErrors(state: ShareLinkStateModel) {\r\n        return state.backendErrors;\r\n    }\r\n\r\n    @Action(CreateShareableLink)\r\n    createShareableLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0];\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.create(entryId, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => {\r\n                    const link = response.link;\r\n                    ctx.patchState({\r\n                        cache: {...ctx.getState().cache, [link.entry_id]: link},\r\n                        link: response.link,\r\n                        optionsPanelVisible: false\r\n                    });\r\n                }, errorResponse => {\r\n                    ctx.patchState({backendErrors: errorResponse.messages});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(UpdateShareableLink)\r\n    updateLink(ctx: StateContext<ShareLinkStateModel>, action: UpdateShareableLink) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.update(link.id, action.options)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false, backendErrors: {}})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    cache: {...ctx.getState().cache, [link.entry_id]: response.link},\r\n                    optionsPanelVisible: false\r\n                }), errorResponse => {\r\n                    ctx.patchState({backendErrors: errorResponse.messages});\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(LoadShareableLink)\r\n    loadShareableLink(ctx: StateContext<ShareLinkStateModel>, action: LoadShareableLink) {\r\n        const entryId = this.store.selectSnapshot(DriveState.selectedEntryIds)[0],\r\n            cachedLink = ctx.getState().cache[entryId];\r\n\r\n        if (cachedLink) {\r\n            return ctx.patchState({link: cachedLink, optionsPanelVisible: false});\r\n        }\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.findByEntryId(entryId, {autoCreate: action.options.autoCreate})\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => ctx.patchState({\r\n                    link: response.link,\r\n                    optionsPanelVisible: false,\r\n                    cache: {...ctx.getState().cache, [response.link.entry_id]: response.link},\r\n                }), () => {})\r\n            );\r\n    }\r\n\r\n    @Action(DeleteShareableLink)\r\n    deleteShareableLink(ctx: StateContext<ShareLinkStateModel>) {\r\n        const link = ctx.getState().link;\r\n\r\n        ctx.patchState({loading: true});\r\n\r\n        return this.linksApi.delete(link.id)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(() => {\r\n                    const cache = ctx.getState().cache;\r\n                    delete cache[link.entry_id];\r\n\r\n                    ctx.patchState({\r\n                        link: null,\r\n                        cache: cache,\r\n                    });\r\n                })\r\n            );\r\n    }\r\n\r\n    @Action(ToggleOptionsPanel)\r\n    toggleOptionsPanel(ctx: StateContext<ShareLinkStateModel>) {\r\n        ctx.patchState({\r\n           optionsPanelVisible: !ctx.getState().optionsPanelVisible\r\n        });\r\n    }\r\n\r\n    @Action(ResetShareLinkState, {cancelUncompleted: true})\r\n    resetShareLinkState(ctx: StateContext<ShareLinkStateModel>) {\r\n        return ctx.patchState({...ctx.getState(), ...defaultState});\r\n    }\r\n}\r\n","<form class=\"update-link-panel\" [formGroup]=\"form\" (ngSubmit)=\"saveChanges()\">\n    <div class=\"link-options\">\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Link expiration</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"expirationVisible\" trans>Link is valid until:</mat-checkbox>\n                <div class=\"input-container expiration-input-container\" formGroupName=\"expiresAt\"  [class.hidden]=\"!expirationVisible.value\">\n                    <div class=\"date-input-container\">\n                        <input type=\"date\" formControlName=\"date\" class=\"date-input\" placeholder=\"Expiration date...\" trans-placeholder [min]=\"getMinDate()\">\n                    </div>\n                    <input type=\"time\" class=\"time-input\" formControlName=\"time\" placeholder=\"Expiration time...\" trans-placeholder>\n                </div>\n                <div class=\"error\" *ngIf=\"(backendErrors$ | async)?.expiresAt as error\">{{error}}</div>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Password Protect</div>\n            <div class=\"content\">\n                <mat-checkbox color=\"accent\" [formControl]=\"passwordVisible\" trans>Require password:</mat-checkbox>\n                <ng-container *ngIf=\"passwordVisible.value\">\n                    <div class=\"input-container password-input-container\">\n                        <input type=\"password\" formControlName=\"password\" placeholder=\"Enter new password...\" trans-placeholder>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow editing</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowEdit\" trans>Users with link can modify this item.</mat-checkbox>\n        </div>\n        <div class=\"link-option\">\n            <div class=\"label\" trans>Allow download</div>\n            <mat-checkbox color=\"accent\" formControlName=\"allowDownload\" trans>Users with link can download this item.</mat-checkbox>\n        </div>\n    </div>\n\n    <button type=\"button\" (click)=\"toggleOptionsPanel()\" mat-button trans>Cancel</button>\n\n    <button type=\"submit\" class=\"update-button\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">\n        {{ ((link$ | async) ? 'Update Link' : 'Create Link') | trans }}\n    </button>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { CreateShareableLink, ShareLinkState, ToggleOptionsPanel, UpdateShareableLink } from '../share-link.state';\nimport { Observable } from 'rxjs';\nimport { ShareableLink } from '../models/shareable-link';\nimport { filter } from 'rxjs/operators';\nimport { ShareableLinkOptions } from '../models/shareable-link-options';\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\n\n@Component({\n    selector: 'link-options',\n    templateUrl: './link-options.component.html',\n    styleUrls: ['./link-options.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkOptionsComponent implements OnInit {\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.backendErrors) backendErrors$: Observable<BackendErrorMessages>;\n\n    public form = new FormGroup({\n        password: new FormControl(),\n        expiresAt: new FormGroup({\n            date: new FormControl(),\n            time: new FormControl(),\n        }),\n        allowEdit: new FormControl(false),\n        allowDownload: new FormControl(true)\n    });\n\n    public passwordVisible = new FormControl(false);\n    public expirationVisible = new FormControl(false);\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.bindToLinkChange();\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public saveChanges() {\n        if (this.store.selectSnapshot(ShareLinkState.link)) {\n            this.store.dispatch(new UpdateShareableLink(this.getPayload()));\n        } else {\n            this.store.dispatch(new CreateShareableLink(this.getPayload()));\n        }\n    }\n\n    private getPayload() {\n        const payload = {\n            allowEdit: this.form.get('allowEdit').value,\n            allowDownload: this.form.get('allowDownload').value,\n        } as ShareableLinkOptions;\n\n        if (this.expirationVisible.value) {\n            payload.expiresAt = this.form.get('expiresAt.date').value;\n            if (this.form.get('expiresAt.time').value) {\n                payload.expiresAt += ' ' + this.form.get('expiresAt.time').value;\n            }\n        }\n\n        // not sending \"password\" with request will remove it from link\n        if (this.passwordVisible.value) {\n            payload.password = this.form.get('password').value;\n        }\n\n        return payload;\n    }\n\n    private bindToLinkChange() {\n        this.link$.pipe(filter(link => !!link))\n            .subscribe(link => {\n                this.hydrateExpirationForm(link);\n\n                // show or hide password form field\n                this.passwordVisible.setValue(!!link.password);\n                this.expirationVisible.setValue(!!link.expires_at);\n\n                this.form.patchValue({\n                    allowEdit: link.allow_edit,\n                    allowDownload: link.allow_download\n                });\n            });\n    }\n\n    private hydrateExpirationForm(link: ShareableLink) {\n        if ( ! link || ! link.expires_at) return;\n\n        const parts = link.expires_at.split(' ');\n\n        this.form.get('expiresAt').setValue({\n            date: parts[0],\n            time: parts[1]\n        });\n    }\n\n    public getMinDate(): string {\n        return new Date().toJSON().split('T')[0];\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Shareable link</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"link$ | async\">\n        <div class=\"title\">\n            <div class=\"left\">\n                {{ 'Link sharing is' | trans}} <span class=\"state on\"><button class=\"on-text text no-style\" (click)=\"deleteLink()\" trans>on</button></span>\n            </div>\n            <div class=\"right\">\n                <button type=\"button\" mat-icon-button (click)=\"deleteLink()\">\n                    <mat-icon svgIcon=\"delete\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button (click)=\"toggleOptionsPanel()\">\n                    <mat-icon svgIcon=\"settings\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <div class=\"link-container\">\n            <div class=\"link-input-container input-container\">\n                <input type=\"text\" id=\"link-input\" readonly (click)=\"focusInput()\" (change)=\"focusInput()\" [value]=\"shareableLink$ | async\" tabindex=\"1\">\n                <button mat-flat-button color=\"accent\" (click)=\"copyLinkToClipboard()\" trans>Copy</button>\n            </div>\n            <div class=\"social-icons\">\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style facebook\" (click)=\"shareLink('facebook')\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style twitter\" (click)=\"shareLink('twitter')\">\n                    <mat-icon svgIcon=\"twitter\"></mat-icon>\n                </button>\n                <button type=\"button\" mat-icon-button class=\"social-icon no-style mail\" (click)=\"shareLink('mail')\">\n                    <mat-icon svgIcon=\"mail\"></mat-icon>\n                </button>\n            </div>\n        </div>\n    </ng-container>\n\n    <link-options [@visibility]=\"optionsVisible$ | async\"></link-options>\n    <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay-transparent\"></loading-indicator>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button class=\"submit-button\" (click)=\"close()\" [disabled]=\"loading$ | async\" trans>Close</button>\n</mat-dialog-actions>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport {\n    DeleteShareableLink,\n    LinkCopySuccess,\n    LoadShareableLink, ResetShareLinkState,\n    ShareLinkState,\n    ToggleOptionsPanel\n} from '../links/share-link.state';\nimport { Settings } from 'common/core/config/settings.service';\nimport { ShareableLink } from '../links/models/shareable-link';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport copy from 'copy-to-clipboard';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { ShareableNetworks, shareLinkSocially } from '@common/core/utils/share-link-socially';\n\n@Component({\n    selector: 'share-link-dialog',\n    templateUrl: './share-link-dialog.component.html',\n    styleUrls: ['./share-link-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('visibility', [\n            state('true', style({\n                height: '*',\n                padding: '*',\n                opacity: '1',\n                overflow: '*',\n            })),\n            state('false', style({\n                height: '0',\n                padding: '0',\n                opacity: '0',\n                overflow: 'hidden',\n            })),\n            transition('true <=> false', animate('225ms cubic-bezier(.4,0,.2,1)'))\n        ]),\n    ],\n})\nexport class ShareLinkDialogComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Select(ShareLinkState.loading) loading$: Observable<boolean>;\n    @Select(ShareLinkState.link) link$: Observable<ShareableLink>;\n    @Select(ShareLinkState.optionsVisible) optionsVisible$: Observable<boolean>;\n    public shareableLink$ = new BehaviorSubject(null);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected store: Store,\n        protected toast: Toast,\n        protected actions$: Actions,\n        protected settings: Settings,\n        protected dialogRef: MatDialogRef<ShareLinkDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.store.dispatch(new LoadShareableLink());\n        this.bindToOptionsPanelToggle();\n    }\n\n    ngAfterViewInit() {\n        this.bindToLinkChange();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetShareLinkState());\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public toggleOptionsPanel() {\n        this.store.dispatch(new ToggleOptionsPanel());\n    }\n\n    public deleteLink() {\n        this.store.dispatch(new DeleteShareableLink()).subscribe(() => {\n            this.toast.open('Link deleted.');\n            this.dialogRef.close();\n        });\n    }\n\n    public copyLinkToClipboard() {\n        this.focusInput();\n        const success = copy(this.shareableLink$.value);\n\n        if (success) {\n            this.store.dispatch(new LinkCopySuccess());\n        }\n    }\n\n    private bindToLinkChange() {\n        this.link$.subscribe(link => {\n            if ( ! link) return;\n            this.shareableLink$.next(this.settings.getBaseUrl() + 'drive/s/' + link.hash);\n            setTimeout(() => this.focusInput());\n        });\n    }\n\n    private bindToOptionsPanelToggle() {\n        const sub = this.actions$.pipe(ofActionDispatched(ToggleOptionsPanel))\n            .subscribe(() => {\n                // close dialog if user canceled link creation\n                if ( ! this.store.selectSnapshot(ShareLinkState.optionsVisible) && ! this.shareableLink$.value) {\n                    this.close();\n                }\n            });\n        this.subscriptions.push(sub);\n    }\n\n    public shareLink(network: ShareableNetworks) {\n        shareLinkSocially(network, this.shareableLink$.value);\n    }\n\n    public focusInput() {\n        const input = document.getElementById('link-input') as HTMLInputElement;\n        input.focus();\n        input.select();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppHttpClient } from 'common/core/http/app-http-client.service';\nimport { DriveEntryUser } from '../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../permissions/drive-entry-permissions';\nimport { BackendResponse } from 'common/core/types/backend-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\n\ninterface UserChangeParams {\n    users: {id: number, permissions: DriveEntryPermissions}[];\n    entries: number[];\n}\n\nexport interface DriveEntryApiParams {\n    entries: FileEntry[];\n    emails: string[];\n    permissions: DriveEntryPermissions;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharesApiService {\n    constructor(private http: AppHttpClient) {}\n\n    /**\n     * Update users and permissions on specified entries.\n     */\n    public updateUsers(params: UserChangeParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.put('drive/shares/update-users', params);\n    }\n\n    /**\n     * Attach specified users to entries.\n     */\n    public shareEntries(params: DriveEntryApiParams): BackendResponse<{users: DriveEntryUser[]}> {\n        return this.http.post('drive/shares/add-users', {\n            ...params,\n            entries: params.entries.map(entry => entry.id)\n        });\n    }\n\n    /**\n     * Detach specified user from entries.\n     */\n    public detachUser(userId: number, entryIds: number[]): BackendResponse<void> {\n        return this.http.delete('drive/shares/remove-user/' + userId, {entries: entryIds});\n    }\n}\n","import { Action, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { DriveState } from '../../state/drive-state';\r\nimport { DriveEntryUser } from '../../files/models/drive-entry';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { SharesApiService } from '../shares-api.service';\r\nimport isEqual from 'lodash/isEqual';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\r\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\r\nimport { UpdateEntries } from '../../state/actions/commands';\r\nimport { Inject, Injectable } from '@angular/core';\r\n\r\nexport class SetInitialUsers {\r\n    static readonly type = '[ShareDialog] Set Initial Users';\r\n}\r\n\r\nexport class UpdateUserPermissions {\r\n    static readonly type = '[ShareDialog] Update User Permissions';\r\n    constructor(public user: DriveEntryUser, public permissions: DriveEntryPermissions) {}\r\n}\r\n\r\nexport class RemoveUser {\r\n    static readonly type = '[ShareDialog] Remove User';\r\n    constructor(public user: DriveEntryUser) {}\r\n}\r\n\r\nexport class SetUsers {\r\n    static readonly type = '[ShareDialog] Set Users';\r\n    constructor(public users: DriveEntryUser[]) {}\r\n}\r\n\r\nexport class SaveChanges {\r\n    static readonly type = '[ShareDialog] Save Changes';\r\n}\r\n\r\nexport class ResetState {\r\n    static readonly type = '[ShareDialog] Reset';\r\n}\r\n\r\nexport class ShareEntries {\r\n    static readonly type = '[ShareDialog] Share Entries';\r\n    constructor(public payload: {emails: string[], permissions: DriveEntryPermissions}) {}\r\n}\r\n\r\nexport class ShareEntriesFailed {\r\n    static readonly type = '[ShareDialog] Share Entries Failed';\r\n    constructor(public messages: BackendErrorMessages) {}\r\n}\r\n\r\nexport interface ShareDialogEntryUser extends DriveEntryUser {\r\n    removed?: boolean;\r\n    entry_permissions: ShareDialogEntryPermissions;\r\n}\r\n\r\nexport interface ShareDialogStateModel {\r\n    loading: boolean;\r\n    original: ShareDialogEntryUser[];\r\n    usersWithAccess: ShareDialogEntryUser[];\r\n}\r\n\r\n@State<ShareDialogStateModel>({\r\n    name: 'shareDialog',\r\n    defaults: {\r\n        usersWithAccess: [],\r\n        original: [],\r\n        loading: false,\r\n    }\r\n})\r\n@Injectable()\r\nexport class ShareDialogState {\r\n    constructor(\r\n        private store: Store,\r\n        private sharesApi: SharesApiService\r\n    ) {}\r\n\r\n    @Selector()\r\n    static usersWithAccess(state: ShareDialogStateModel) {\r\n        return state.usersWithAccess;\r\n    }\r\n\r\n    @Selector()\r\n    static dirty(state: ShareDialogStateModel) {\r\n        return !isEqual(state.original, state.usersWithAccess);\r\n    }\r\n\r\n    @Selector()\r\n    static loading(state: ShareDialogStateModel) {\r\n        return state.loading;\r\n    }\r\n\r\n    @Action(SetInitialUsers)\r\n    setInitialUsers(ctx: StateContext<ShareDialogStateModel>) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        let users = entries\r\n            .map(entry => entry.users)\r\n            .reduce((all, curr) => all.concat(curr), []);\r\n\r\n        // make sure we don't override anything in main drive store\r\n        users = cloneDeep(users);\r\n        users = users.filter(user => !!user);\r\n\r\n        // multiple entries might contain same users\r\n        const uniqueUsers = uniqBy(users, user => user.id) as ShareDialogEntryUser[];\r\n\r\n        // if permissions for same user are not same on\r\n        // all selected entries, show \"varies\" permission\r\n        if (entries.length > 1) {\r\n            uniqueUsers.forEach(user => {\r\n                const permissions = entries\r\n                    .map(entry => entry.users.find(u => u.id === user.id))\r\n                    .filter(u => !!u)\r\n                    .map(u => Object.assign({}, u.entry_permissions));\r\n\r\n                if (entries.length !== permissions.length || permissions.some(p => !isEqual(p, permissions[0]))) {\r\n                    user.entry_permissions = {varies: true};\r\n                }\r\n            });\r\n        }\r\n\r\n        ctx.patchState({\r\n            usersWithAccess: cloneDeep(uniqueUsers),\r\n            original: uniqueUsers,\r\n        });\r\n    }\r\n\r\n    @Action(SetUsers)\r\n    setUsers(ctx: StateContext<ShareDialogStateModel>, action: SetUsers) {\r\n        ctx.patchState({\r\n            usersWithAccess: action.users,\r\n            original: cloneDeep(action.users)\r\n        });\r\n    }\r\n\r\n    @Action(UpdateUserPermissions)\r\n    updateUserPermissions(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // update user permissions\r\n        users.find(curr => curr.id === action.user.id).entry_permissions = action.permissions;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(RemoveUser)\r\n    removeUser(ctx: StateContext<ShareDialogStateModel>, action: UpdateUserPermissions) {\r\n        const users = ctx.getState().usersWithAccess;\r\n\r\n        // mark user as \"removed\"\r\n        users.find(curr => curr.id === action.user.id).removed = true;\r\n\r\n        ctx.patchState({usersWithAccess: users});\r\n    }\r\n\r\n    @Action(ResetState)\r\n    resetState(ctx: StateContext<ShareDialogStateModel>) {\r\n       ctx.setState({\r\n           loading: false,\r\n           usersWithAccess: [],\r\n           original: [],\r\n       });\r\n    }\r\n\r\n    @Action(SaveChanges, {cancelUncompleted: true})\r\n    saveChanges(ctx: StateContext<ShareDialogStateModel>) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const state = ctx.getState();\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        const users = state.usersWithAccess\r\n            // filter out entry owner\r\n            .filter(user => !user.owns_entry)\r\n            // filter out users if they do not have same permissions for\r\n            // all selected entries (except for users that are being removed)\r\n            .filter(user => !user.entry_permissions.varies || user.removed)\r\n            .map(user => {\r\n                return {id: user.id, removed: user.removed, permissions: user.entry_permissions};\r\n            });\r\n\r\n        return this.sharesApi.updateUsers({entries: entries.map(e => e.id), users}).pipe(\r\n            finalize(() => ctx.patchState({loading: false})),\r\n            tap(response => {\r\n                const newUsers = response.users;\r\n\r\n                // update permissions in share dialog store\r\n                ctx.patchState({\r\n                    usersWithAccess: newUsers,\r\n                    original: cloneDeep(newUsers),\r\n                });\r\n\r\n                this.updateEntriesInDriveStore(newUsers);\r\n            }\r\n        ));\r\n    }\r\n\r\n    @Action(ShareEntries, {cancelUncompleted: true})\r\n    shareEntries(ctx: StateContext<ShareDialogStateModel>, action: ShareEntries) {\r\n        ctx.patchState({loading: true});\r\n\r\n        const payload = {\r\n            ...action.payload,\r\n            entries: this.store.selectSnapshot(DriveState.selectedEntries)\r\n        };\r\n\r\n        return this.sharesApi.shareEntries(payload)\r\n            .pipe(\r\n                finalize(() => ctx.patchState({loading: false})),\r\n                tap(response => {\r\n                    ctx.dispatch(new SetUsers(response.users));\r\n                    this.updateEntriesInDriveStore(response.users);\r\n                }, errorResponse => {\r\n                    ctx.dispatch(new ShareEntriesFailed(errorResponse.messages));\r\n                })\r\n            );\r\n    }\r\n\r\n    private updateEntriesInDriveStore(newUsers: DriveEntryUser[]) {\r\n        const entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n\r\n        // update permissions in main drive store, otherwise we'll get old\r\n        // permissions if user re-opens share dialog without page reload\r\n        const updatedEntries = entries.map(entry => {\r\n            entry.users = newUsers;\r\n            return entry;\r\n        });\r\n\r\n        this.store.dispatch(new UpdateEntries(updatedEntries));\r\n    }\r\n}\r\n","export type ShareableNetworks = 'facebook'|'twitter'|'pinterest'|'tumblr'|'blogger'|'mail';\r\n\r\nexport function shareLinkSocially(network: ShareableNetworks, link: string, name?: string, image?: string) {\r\n    const url = generateShareUrl(network, link, name, image);\r\n\r\n    if (network === 'mail') {\r\n        window.location.href = url;\r\n    } else {\r\n        openNewWindow(url);\r\n    }\r\n}\r\n\r\nfunction openNewWindow(url: string) {\r\n    const width  = 575,\r\n        height = 400,\r\n        left   = (window.innerWidth  - width)  / 2,\r\n        top    = (window.innerHeight - height) / 2,\r\n        opts   = 'status=1, scrollbars=1' + ',width=' + width + ',height=' + height + ',top=' + top + ',left=' + left;\r\n\r\n    window.open(url, 'share', opts);\r\n}\r\n\r\nfunction generateShareUrl(type: string, link: string, name?: string, image?: string) {\r\n    switch (type) {\r\n        case 'facebook':\r\n            return 'https://www.facebook.com/sharer/sharer.php?u=' + link ;\r\n        case 'twitter':\r\n            return `https://twitter.com/intent/tweet?text=${name} - ${link}`;\r\n        case 'google-plus':\r\n            return 'https://plus.google.com/share?url=' + link ;\r\n        case 'pinterest':\r\n            return 'https://pinterest.com/pin/create/button/?url=' + link + '&media=' + image;\r\n        case 'tumblr':\r\n            const base = 'https://www.tumblr.com/widgets/share/tool?shareSource=legacy&canonicalUrl=&posttype=photo&title=&caption=';\r\n            return base + this.mediaItem.name + '&content=' + image + '&url=' + link ;\r\n        case 'blogger':\r\n            return 'https://www.blogger.com/blog_this.pyra?t&u=' + link + '&n=' + name;\r\n        case 'mail':\r\n            return `mailto:?subject=Check out this link.&body=${link}`;\r\n    }\r\n}\r\n","export interface DriveEntryPermissions {\r\n    edit?: boolean;\r\n    view?: boolean;\r\n    download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n    edit: true,\r\n    view: true,\r\n    download: true,\r\n};\r\n","<button mat-flat-button color=\"gray\" [matMenuTriggerFor]=\"shareMenu\">\n    <ng-container *ngIf=\"overallPermission() === 'varies'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"priority-high\"></mat-icon>\n        <span class=\"button-text\" trans>Varies</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'edit'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"edit\"></mat-icon>\n        <span class=\"button-text\" trans>Can edit</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'view'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"remove-red-eye\"></mat-icon>\n        <span class=\"button-text\" trans>Can View</span>\n    </ng-container>\n\n    <ng-container *ngIf=\"overallPermission() === 'download'\">\n        <mat-icon class=\"button-icon\" svgIcon=\"file-download\"></mat-icon>\n        <span class=\"button-text\" trans>Can Download</span>\n    </ng-container>\n\n    <mat-icon class=\"dropdown-icon\" svgIcon=\"arrow-drop-down\"></mat-icon>\n</button>\n\n<mat-menu #shareMenu=\"matMenu\" classList=\"mat-menu-with-description\">\n    <div mat-menu-item (click)=\"selectPermission('edit')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'edit'\"></mat-icon>\n        <div>\n            <div trans>Can edit</div>\n            <div class=\"description\" trans>People can edit, delete and copy the item to their own drive.</div>\n        </div>\n    </div>\n    <div mat-menu-item (click)=\"selectPermission('download')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'download'\"></mat-icon>\n        <div>\n            <div trans>Can download</div>\n            <div class=\"description\" trans>People can view and download the item.</div>\n        </div>\n    </div>\n\n    <div mat-menu-item (click)=\"selectPermission('view')\">\n        <mat-icon class=\"mat-icon\" svgIcon=\"check\" [class.visually-hidden]=\"overallPermission() !== 'view'\"></mat-icon>\n        <div>\n            <div trans>Can view</div>\n            <div class=\"description\" trans>People can view the item.</div>\n        </div>\n    </div>\n</mat-menu>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryPermissions } from '../share-dialog/types/ShareDialogEntryPermissions';\n\n@Component({\n    selector: 'sharing-permissions-button',\n    templateUrl: './sharing-permissions-button.component.html',\n    styleUrls: ['./sharing-permissions-button.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SharingPermissionsButtonComponent {\n    @Input() permissions: ShareDialogEntryPermissions = DRIVE_ENTRY_FULL_PERMISSIONS;\n    @Output() change: EventEmitter<DriveEntryPermissions> = new EventEmitter();\n    @Input() @HostBinding('class.compact') compact = false;\n\n    public overallPermission(): keyof ShareDialogEntryPermissions {\n        if (this.permissions.varies) {\n            return 'varies';\n        } else if (this.permissions.edit) {\n            return 'edit';\n        } else if (this.permissions.download) {\n            return 'download';\n        } {\n            return 'view';\n        }\n    }\n\n    public selectPermission(permission: keyof ShareDialogEntryPermissions) {\n        if (permission === 'edit') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS};\n        } else if (permission === 'download') {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false};\n        } else {\n            this.permissions = {...DRIVE_ENTRY_FULL_PERMISSIONS, edit: false, download: false};\n        }\n\n        this.change.emit(this.permissions);\n    }\n}\n","<div class=\"header\" trans>Who has access</div>\n<div class=\"users-list\">\n    <div class=\"list-item\" *ngFor=\"let user of users | async; trackBy: trackByUser\" [class.removed]=\"user.removed\" [@flyInOut]=\"'in'\">\n        <img [src]=\"user.avatar\">\n        <div class=\"text\">\n            <div class=\"display_name\">{{user.display_name}}</div>\n            <div class=\"email\">{{user.email}}</div>\n        </div>\n        <div class=\"actions\">\n            <span class=\"owner-label\" *ngIf=\"user.owns_entry || (currentUser.getModel().id === user.id); else permissionSelector\" trans>\n                {{ user.owns_entry ? 'Owner' : 'You' }}\n            </span>\n\n            <ng-template #permissionSelector>\n                <sharing-permissions-button [permissions]=\"user.entry_permissions\" (change)=\"updateUserPermissions(user, $event)\"></sharing-permissions-button>\n                <button mat-icon-button [disabled]=\"loading$ | async\" (click)=\"removeUser(user)\">\n                    <mat-icon svgIcon=\"close\"></mat-icon>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>\n<div class=\"actions\">\n    <button mat-flat-button color=\"accent\" (click)=\"saveChanges()\" [disabled]=\"loading$ | async\" [class.visually-hidden]=\"!(dirty | async)\" trans>Save Changes</button>\n</div>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { DriveEntryUser } from '../../files/models/drive-entry';\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ShareDialogEntryUser, RemoveUser, SaveChanges, ShareDialogState, UpdateUserPermissions } from '../state/share-dialog.state';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { CurrentUser } from '../../../../common/auth/current-user';\n\n@Component({\n    selector: 'entries-access-table',\n    templateUrl: './entries-access-table.component.html',\n    styleUrls: ['./entries-access-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('flyInOut', [\n            state('in', style({transform: 'translateX(0)'})),\n            transition('void => *', [\n                style({transform: 'translateX(-100%)'}),\n                animate(100)\n            ]),\n            transition('* => void', [\n                animate(100, style({transform: 'translateX(100%)'}))\n            ])\n        ])\n    ]\n})\nexport class EntriesAccessTableComponent {\n    @Select(ShareDialogState.usersWithAccess) users: Observable<ShareDialogEntryUser[]>;\n    @Select(ShareDialogState.dirty) dirty: Observable<boolean>;\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    constructor(\n        private store: Store,\n        public currentUser: CurrentUser,\n    ) {}\n\n    public updateUserPermissions(user: DriveEntryUser, newPermissions: DriveEntryPermissions) {\n        this.store.dispatch(new UpdateUserPermissions(user, newPermissions));\n    }\n\n    public removeUser(user: DriveEntryUser) {\n        this.store.dispatch(new RemoveUser(user));\n    }\n\n    public saveChanges() {\n        this.store.dispatch(new SaveChanges());\n    }\n\n    trackByUser(index: number, user: DriveEntryUser): number { return user.id; }\n}\n","<div class=\"modal-header\">\r\n    <h2 mat-dialog-title trans>Add people</h2>\r\n    <button type=\"button\" mat-icon-button (click)=\"dialogRef.close()\" class=\"close-button\" tabindex=\"-1\">\r\n        <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n    <div class=\"emails-container\">\r\n        <chip-input [formControl]=\"shareModel.emails\" [suggestFn]=\"settings.get('share.suggest_emails') ? suggestUserEmails : null\" placeholder=\"Enter email addresses...\" email required></chip-input>\r\n        <sharing-permissions-button [compact]=\"true\" (change)=\"shareModel.permissions = $event\"></sharing-permissions-button>\r\n    </div>\r\n\r\n    <div class=\"errors\">\r\n        <div class=\"error\" *ngFor=\"let error of errors | async | keyvalue\">{{error.value}}</div>\r\n    </div>\r\n\r\n    <entries-access-table></entries-access-table>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n    <button type=\"button\" mat-button (click)=\"dialogRef.close()\" [disabled]=\"loading$ | async\" trans>Close</button>\r\n    <button type=\"submit\" mat-raised-button color=\"accent\" (click)=\"share()\" [disabled]=\"(loading$ | async)\" *ngIf=\"shareModel.emails.value?.length\" trans>Share</button>\r\n</mat-dialog-actions>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofActionDispatched, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS, DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\nimport { ResetState, SetInitialUsers, ShareDialogState, ShareEntries, ShareEntriesFailed } from '../state/share-dialog.state';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorMessages } from 'common/core/types/backend-error-response';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Users } from '@common/auth/users.service';\nimport { Settings } from '@common/core/config/settings.service';\n\n@Component({\n    selector: 'share-dialog',\n    templateUrl: './share-dialog.component.html',\n    styleUrls: ['./share-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareDialogComponent implements OnDestroy {\n    @Select(ShareDialogState.loading) loading$: Observable<boolean>;\n\n    private destroyed$ = new Subject();\n    public errors: BehaviorSubject<BackendErrorMessages> = new BehaviorSubject({});\n    public shareModel: { emails: FormControl, permissions: DriveEntryPermissions};\n\n    constructor(\n        public dialogRef: MatDialogRef<ShareDialogComponent>,\n        public settings: Settings,\n        private store: Store,\n        private actions$: Actions,\n        private users: Users,\n    ) {\n        this.resetModel();\n        this.store.dispatch(new SetInitialUsers());\n\n        this.bindToShareError();\n        this.bindToShareModel();\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(new ResetState());\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    public share() {\n        const payload = {\n            emails: this.shareModel.emails.value,\n            permissions: this.shareModel.permissions,\n        };\n\n        this.store.dispatch(new ShareEntries(payload)).subscribe(() => {\n            this.setErrorMessages();\n            this.resetModel();\n        });\n    }\n\n    private resetModel() {\n        this.shareModel = {\n            emails: new FormControl([]),\n            permissions: DRIVE_ENTRY_FULL_PERMISSIONS\n        };\n    }\n\n    private setErrorMessages(messages?: BackendErrorMessages) {\n        this.errors.next(messages || {});\n    }\n\n    private bindToShareModel() {\n        this.shareModel.emails.valueChanges\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe(() => this.setErrorMessages());\n    }\n\n    private bindToShareError() {\n        this.actions$.pipe(\n            takeUntil(this.destroyed$),\n            ofActionDispatched(ShareEntriesFailed)\n        ).subscribe((action: ShareEntriesFailed) => {\n            this.setErrorMessages(action.messages);\n        });\n    }\n\n    suggestUserEmails = (query: string): Observable<string[]> => {\n        return this.users.getAll({query, per_page: 7})\n            .pipe(map(users => users.map(u => u.email)));\n    }\n}\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Rename</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content class=\"many-inputs\">\n        <div class=\"input-container\">\n            <input type=\"text\" [formControl]=\"entryName\" placeholder=\"Enter a name...\" trans-placeholder required min=\"3\">\n            <div class=\"error\" *ngIf=\"errors.name\">{{errors.name}}</div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"loading | async\" trans>Rename</button>\n    </mat-dialog-actions>\n</form>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { BackendErrorResponse } from 'common/core/types/backend-error-response';\nimport { DriveState } from '../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { finalize } from 'rxjs/operators';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { DriveEntryApiService } from '../../drive-entry-api.service';\nimport { EntryRenamed } from '../../state/actions/events';\n\nexport interface RenameEntryDialogErrors {\n    name?: string;\n}\n\n@Component({\n    selector: 'rename-entry-dialog',\n    templateUrl: './rename-entry-dialog.component.html',\n    styleUrls: ['./rename-entry-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RenameEntryDialogComponent implements OnInit {\n    public entryName = new FormControl();\n    public loading = new BehaviorSubject(false);\n    public errors: RenameEntryDialogErrors = {};\n    public entry: DriveEntry;\n\n    constructor(\n        private dialogRef: MatDialogRef<RenameEntryDialogComponent>,\n        private store: Store,\n        private toast: Toast,\n        private entriesApi: DriveEntryApiService,\n        private changeDetection: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.entry = this.store.selectSnapshot(DriveState.selectedEntries)[0];\n        this.entryName.setValue(this.entry.name);\n    }\n\n    public confirm() {\n        const newName = this.entryName.value;\n\n        // entry name was not changed\n        if (newName === this.entry.name) {\n            return this.close();\n        }\n\n        this.loading.next(true);\n\n        return this.entriesApi.update(this.entry.id, {name: newName})\n            .pipe(finalize(() => this.loading.next(false)))\n            .subscribe(() => {\n                this.setErrors();\n                this.store.dispatch(new EntryRenamed(this.entry, newName));\n                this.close();\n            }, response => this.setErrors(response));\n    }\n\n    public setErrors(response?: BackendErrorResponse<RenameEntryDialogErrors>) {\n        this.loading.next(false);\n        this.errors = response ? response.messages : {};\n        this.changeDetection.detectChanges();\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import {\r\n    CopySelectedEntries, DeleteSelectedEntries, DownloadEntries, OpenDialog, OpenFilePreview, RemoveEntries,\r\n} from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { Store } from '@ngxs/store';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { SharesApiService } from '../../sharing/shares-api.service';\r\nimport { DriveEntryPermissions } from '../../permissions/drive-entry-permissions';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharesActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent, null, 'share-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('edit');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.userHasPermission('edit');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent, null, 'rename-entry-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                return !this.multipleEntriesSelected && this.userHasPermission('edit');\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Add to my drive',\r\n            icon: 'add-box',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: () => {\r\n                return this.userHasPermission('download');\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Remove',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.delete();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    constructor(\r\n        protected store: Store,\r\n        protected currentUser: CurrentUser,\r\n        protected shares: SharesApiService,\r\n    ) {\r\n        super(store);\r\n    }\r\n\r\n    protected userHasPermission(permission: keyof DriveEntryPermissions) {\r\n        return this.getSelectedEntries().every(entry => {\r\n            if ( ! entry.users) entry.users = [];\r\n            const user = entry.users.find(u => u.id === this.currentUser.get('id'));\r\n            return user && (user.owns_entry || user.entry_permissions[permission]);\r\n        });\r\n    }\r\n\r\n    public delete() {\r\n        const entries = this.getSelectedEntries();\r\n\r\n        // if user owns or can edit selected entries, delete them\r\n        if (this.store.selectSnapshot(DriveState.userCanEditSelectedEntries)) {\r\n            this.store.dispatch(new DeleteSelectedEntries());\r\n\r\n        // otherwise, just remove entries from user's \"shared with me\" page\r\n        } else {\r\n            this.shares.detachUser(\r\n                this.currentUser.get('id'),\r\n                entries.map(e => e.id),\r\n            ).subscribe(() => {\r\n                this.store.dispatch(new RemoveEntries(entries));\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, OpenDialog, OpenUploadWindow, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FolderActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(\r\n                    CrupdateFolderDialogComponent,\r\n                    null,\r\n                    'crupdate-folder-dialog-container')\r\n                );\r\n            },\r\n            visible: noopTrue,\r\n            separatorAfter: true,\r\n        },\r\n        {\r\n            viewName: 'Upload Files',\r\n            icon: 'cloud-upload',\r\n            execute: () => {\r\n                this.openUploadWindow('file');\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Upload Folder',\r\n            icon: 'upload-folder-custom',\r\n            execute: () => {\r\n                this.openUploadWindow('directory');\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public openUploadWindow(type: 'file'|'directory') {\r\n        this.store.dispatch(new OpenUploadWindow(type));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Actions, ofAction, Select, Store } from '@ngxs/store';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveFolder } from '../../folders/models/driveFolder';\nimport { take } from 'rxjs/operators';\nimport { FoldersTreeService } from '../../sidebar/folders-tree/folders-tree.service';\nimport { MoveEntries } from '../../state/actions/commands';\nimport { MoveEntriesFailed, MoveEntriesSuccess } from '../../state/actions/events';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { ROOT_FOLDER, RootFolder } from '../../folders/root-folder';\n\n@Component({\n    selector: 'move-entries-dialog',\n    templateUrl: './move-entries-dialog.component.html',\n    styleUrls: ['./move-entries-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [FoldersTreeService],\n})\nexport class MoveEntriesDialogComponent implements OnInit, OnDestroy {\n    public selectedFolder: DriveFolder|RootFolder = ROOT_FOLDER;\n    @Select(DriveState.selectedEntries) selectedEntries$: Observable<DriveEntry[]>;\n    public loading$ = new BehaviorSubject<boolean>(false);\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        protected dialogRef: MatDialogRef<MoveEntriesDialogComponent>,\n        protected store: Store,\n        protected actions: Actions,\n    ) {}\n\n    ngOnInit() {\n        const failure = this.actions.pipe(ofAction(MoveEntriesFailed)).subscribe(() => {\n            this.loading$.next(false);\n        });\n\n        const success = this.actions.pipe(ofAction(MoveEntriesSuccess), take(1))\n            .subscribe(() => {\n                this.selectedFolder = null;\n                this.close();\n            });\n\n        this.subscriptions.push(...[success, failure]);\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n\n    public confirm() {\n        this.loading$.next(true);\n        this.store.dispatch(new MoveEntries(this.selectedFolder))\n            .subscribe(() => {\n                this.loading$.next(false);\n            });\n    }\n\n    public getRootFolder() {\n        return ROOT_FOLDER;\n    }\n\n    public canMove(): boolean {\n        const folder = this.selectedFolder,\n            movingEntries = this.store.selectSnapshot(DriveState.selectedEntries);\n        return DriveState.canMoveEntriesTo(movingEntries, folder);\n    }\n\n    public close() {\n        this.dialogRef.close();\n    }\n}\n","import {\r\n    AddStar,\r\n    CopySelectedEntries, DeleteSelectedEntries,\r\n    DownloadEntries,\r\n    OpenDialog,\r\n    OpenFilePreview,\r\n    RemoveStar\r\n} from '../../state/actions/commands';\r\nimport { ShareDialogComponent } from '../../sharing/share-dialog/share-dialog.component';\r\nimport { ShareLinkDialogComponent } from '../../sharing/share-link-dialog/share-link-dialog.component';\r\nimport { CrupdateFolderDialogComponent } from '../../folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { MoveEntriesDialogComponent } from '../../entries/move-entries-dialog/move-entries-dialog.component';\r\nimport { RenameEntryDialogComponent } from '../../entries/rename-entry-dialog/rename-entry-dialog.component';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\nimport { DriveState } from '../../state/drive-state';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntryActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Preview',\r\n            icon: 'visibility',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenFilePreview());\r\n            },\r\n            visible: () => {\r\n                return !this.onlyFoldersSelected;\r\n            },\r\n        },\r\n        {\r\n            viewName: 'Manage People',\r\n            icon: 'person-add',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareDialogComponent, null, 'share-dialog-container'));\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Get shareable link',\r\n            icon: 'link',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(ShareLinkDialogComponent, null, {\r\n                    panelClass: 'share-link-dialog-container',\r\n                    autoFocus: false,\r\n                }));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected\r\n        },\r\n        {\r\n            viewName: 'Add a star',\r\n            icon: 'star',\r\n            execute: () => {\r\n                this.store.dispatch(new AddStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => !this.allStarred\r\n        },\r\n        {\r\n            viewName: 'Remove star',\r\n            icon: 'star-border',\r\n            execute: () => {\r\n                this.store.dispatch(new RemoveStar(this.getSelectedEntries()));\r\n            },\r\n            visible: () => this.allStarred\r\n        },\r\n        {\r\n            viewName: 'New Folder',\r\n            icon: 'create-new-folder',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(CrupdateFolderDialogComponent, null, 'crupdate-folder-dialog-container'));\r\n            },\r\n            visible: () => {\r\n                const folderIsSelected = this.store.selectSnapshot(DriveState.selectedFolderId);\r\n                return !this.multipleEntriesSelected && !!folderIsSelected;\r\n            }\r\n        },\r\n        {\r\n            viewName: 'Move to',\r\n            icon: 'subdirectory-arrow-right',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(MoveEntriesDialogComponent, null, 'move-entries-dialog-container'));\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Rename',\r\n            icon: 'edit',\r\n            execute: () => {\r\n                this.store.dispatch(new OpenDialog(RenameEntryDialogComponent, null, 'rename-entry-dialog-container'));\r\n            },\r\n            visible: () => !this.multipleEntriesSelected\r\n        },\r\n        {\r\n            viewName: 'Make a copy',\r\n            icon: 'file-copy',\r\n            execute: () => {\r\n                this.store.dispatch(new CopySelectedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Download',\r\n            icon: 'file-download',\r\n            separatorAfter: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DownloadEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n        {\r\n            viewName: 'Delete',\r\n            icon: 'delete',\r\n            showInCompact: true,\r\n            execute: () => {\r\n                this.store.dispatch(new DeleteSelectedEntries());\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n}\r\n","import { EmptyTrash, OpenConfirmDialog, } from '../../state/actions/commands';\r\nimport { Injectable } from '@angular/core';\r\nimport { DriveContextActions } from '../drive-context-actions';\r\n\r\nconst noopTrue = () => true;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TrashPageActions extends DriveContextActions {\r\n    protected actions = [\r\n        {\r\n            viewName: 'Empty Trash',\r\n            icon: 'delete-forever',\r\n            execute: () => {\r\n                this.emptyTrash();\r\n            },\r\n            visible: noopTrue,\r\n        },\r\n    ];\r\n\r\n    public emptyTrash() {\r\n        this.store.dispatch(new OpenConfirmDialog({\r\n            title: 'Empty Trash',\r\n            body: 'All files and folders in your trash will be permanently deleted.',\r\n            bodyBold: 'This action can not be undone.',\r\n            ok: 'Empty Trash'\r\n        }, new EmptyTrash()));\r\n    }\r\n}\r\n","<div class=\"modal-header\">\n    <h2 mat-dialog-title trans>Move items</h2>\n    <button type=\"button\" mat-icon-button (click)=\"close()\" class=\"close-button\" tabindex=\"-1\">\n        <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n</div>\n\n<form ngNativeValidate (ngSubmit)=\"confirm()\">\n    <mat-dialog-content>\n        <folders-tree\n            [expanded]=\"true\"\n            [movingEntries]=\"selectedEntries$ | async\"\n            [disableContextMenu]=\"true\"\n            [selectedFolder]=\"getRootFolder().hash\"\n            [showRootNode]=\"true\"\n            (folderSelected)=\"selectedFolder = $event\"\n        ></folders-tree>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <button (click)=\"close()\" type=\"button\" mat-button class=\"cancel-button\" trans>Cancel</button>\n        <button type=\"submit\" mat-raised-button color=\"accent\" class=\"submit-button\" [disabled]=\"!canMove() || (loading$ | async)\" trans>Move</button>\n    </mat-dialog-actions>\n</form>\n","<ng-container *ngFor=\"let action of actions$ | async\">\n    <ng-container *ngIf=\"action.visible()\">\n        <button class=\"context-menu-item\" *ngIf=\"!compact\" (click)=\"action.execute()\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n            <span trans>{{action.viewName}}</span>\n        </button>\n\n        <button mat-icon-button (click)=\"action.execute()\" [matTooltip]=\"action.viewName | trans\" *ngIf=\"compact && action.showInCompact\">\n            <mat-icon [svgIcon]=\"action.icon\"></mat-icon>\n        </button>\n\n        <div class=\"separator\" *ngIf=\"!compact && action.separatorAfter\"></div>\n    </ng-container>\n</ng-container>\n\n<button mat-icon-button (click)=\"openMoreActionsMenu()\" [matTooltip]=\"'More actions' | trans\" #moreActionsButton *ngIf=\"compact && hasMoreActions$ | async\">\n    <mat-icon svgIcon=\"more-vert\"></mat-icon>\n</button>","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    Input,\n    HostBinding,\n    Injector,\n    ViewChild,\n    ElementRef, OnDestroy\n} from '@angular/core';\nimport { DriveState } from '../../../state/drive-state';\nimport { Store } from '@ngxs/store';\nimport { DriveContextAction } from '../../types/drive-context-action';\nimport { TrashActions } from '../../actions/trash-actions';\nimport { SharesActions } from '../../actions/shares-actions';\nimport { FolderActions } from '../../actions/folder-actions';\nimport { EntryActions } from '../../actions/entry-actions';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\nimport { DrivePage } from '../../../state/models/drive-page';\nimport { DriveContextMenuComponent } from '../drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { TrashPageActions } from '../../actions/trash-page-actions';\nimport { DriveEntry } from '../../../files/models/drive-entry';\nimport { RootFolder } from '../../../folders/root-folder';\n\n@Component({\n    selector: 'context-actions-container',\n    templateUrl: './context-actions-container.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextActionsContainerComponent implements OnDestroy {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Input() @HostBinding('class.compact') compact = false;\n\n    // whether there are more actions to display in \"compact\" mode\n    public hasMoreActions$ = new BehaviorSubject(false);\n    public actions$: BehaviorSubject<DriveContextAction[]> = new BehaviorSubject([]);\n    private subscription: Subscription;\n\n    constructor(\n        private store: Store,\n        private injector: Injector,\n        private contextMenu: ContextMenu,\n    ) {\n        this.subscription = combineLatest([\n            this.store.select(DriveState.activePage),\n            this.store.select(DriveState.selectedEntry),\n        ]).subscribe(combined => {\n            this.setActions(combined[0], combined[1]);\n            this.hasMoreActions$.next(this.actions$.value.some(action => !action.showInCompact));\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntryOrActiveFolder);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n\n    private setActions(activePage: DrivePage, selectedEntry: DriveEntry|RootFolder) {\n        // user clicked on \"trash\" page name in breadcrumb\n        if (activePage.name === 'trash' && ! selectedEntry) {\n            this.actions$.next(this.injector.get(TrashPageActions).getActions());\n\n        // context menu opened for selected entries while in \"trash\" or \"shares\" page\n        } else if (activePage.name === 'trash' && selectedEntry) {\n            this.actions$.next(this.injector.get(TrashActions).getActions());\n        } else if (activePage.name === 'shares' && selectedEntry) {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n\n        // context menu opened by clicking on empty space in folder view\n        } else if (activePage.folder && ! selectedEntry) {\n            this.actions$.next(this.injector.get(FolderActions).getActions());\n\n        // show entries context menu for \"starred\" page\n        } else if (activePage.name === 'starred' || activePage.name === 'recent') {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n\n        // default to entry actions if can't match to anything else\n        } else if (selectedEntry && selectedEntry.id !== 'root') {\n            this.setActionsForEntry();\n        } else {\n            this.actions$.next([]);\n        }\n    }\n\n    private setActionsForEntry() {\n        if (this.store.selectSnapshot(DriveState.userOwnsActiveFolder)) {\n            this.actions$.next(this.injector.get(EntryActions).getActions());\n        } else {\n            this.actions$.next(this.injector.get(SharesActions).getActions());\n        }\n    }\n}\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: '[toggleSelectedClass]'\n})\nexport class ToggleSelectedClassDirective implements AfterViewInit {\n    @Select(DriveState.selectedEntryIds) selectedEntryIds: Observable<number[]>;\n\n    constructor(private el: ElementRef) {}\n\n    ngAfterViewInit() {\n        this.selectedEntryIds.subscribe(ids => {\n            const els = this.el.nativeElement.querySelectorAll('.drive-entry');\n            if ( ! els.length) return;\n\n            Array.from(els).forEach((el: HTMLElement) => {\n                const selected = ids.indexOf(parseInt(el.dataset.id, 10)) > -1;\n\n                if (selected) {\n                    el.classList.add('selected');\n                } else {\n                    el.classList.remove('selected');\n                }\n            });\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../state/actions/commands';\nimport { SortColumn, SortValue } from '../../entries/available-sorts';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { DrivePage } from '../../state/models/drive-page';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'file-list-header',\n    templateUrl: './file-list-header.component.html',\n    styleUrls: ['./file-list-header.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListHeaderComponent implements OnInit {\n    @Select(DriveState.sortColumn) sortColumn$: Observable<SortColumn>;\n    @Select(DriveState.activePage) activePage$: Observable<DrivePage>;\n\n    public sortFormControl = new FormControl({\n        column: this.store.selectSnapshot(DriveState.sortColumn),\n        direction: this.store.selectSnapshot(DriveState.sortDirection),\n    });\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        this.activePage$.subscribe(activePage => {\n            this.sortFormControl.setValue({\n                column: activePage.sortColumn,\n                direction: activePage.sortDirection\n            }, {emitEvent: false});\n        });\n\n        this.sortFormControl.valueChanges.subscribe((sort: SortValue) => {\n            this.store.dispatch(new ReloadPageEntries(\n                {orderBy: sort.column, orderDir: sort.direction}\n            ));\n        });\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { Observable } from 'rxjs';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ToggleDetailsSidebar, SetViewMode } from '../../state/actions/commands';\n\n@Component({\n    selector: 'toolbar-actions',\n    templateUrl: './toolbar-actions.component.html',\n    styleUrls: ['./toolbar-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarActionsComponent {\n    @ViewChild('moreActionsButton', { read: ElementRef }) moreActionsButton: ElementRef;\n    @Select(DriveState.anythingSelected) anythingSelected: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode: Observable<'list'|'grid'>;\n    @Select(DriveState.detailsOpen) activityOpen: Observable<boolean>;\n    @Select(DriveState.multipleEntriesSelected) multipleEntriesSelected$: Observable<boolean>;\n\n    constructor(\n        protected store: Store,\n        protected contextMenu: ContextMenu,\n    ) {}\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    public ToggleDetails() {\n        this.store.dispatch(new ToggleDetailsSidebar());\n    }\n\n    public openMoreActionsMenu() {\n        const entry = this.store.selectSnapshot(DriveState.selectedEntry);\n        this.contextMenu.open(\n            DriveContextMenuComponent,\n            this.moreActionsButton.nativeElement,\n            {data: {entry}}\n        );\n    }\n}\n","<context-actions-container [compact]=\"true\"></context-actions-container>\n\n<div class=\"always-visible-actions\">\n    <button mat-icon-button (click)=\"toggleViewMode()\">\n        <mat-icon [svgIcon]=\"(viewMode | async) === 'list' ? 'view-list' : 'view-module'\"></mat-icon>\n    </button>\n    <button mat-icon-button (click)=\"ToggleDetails()\" [class.active]=\"activityOpen | async\">\n        <mat-icon svgIcon=\"info\"></mat-icon>\n    </button>\n</div>\n\n","<div class=\"sort-header\">\r\n   <entries-sort-button [btnDisabled]=\"(activePage$ | async)?.disableSort\" [formControl]=\"sortFormControl\"></entries-sort-button>\r\n</div>\r\n<toolbar-actions></toolbar-actions>","import { UploadedFile } from '../uploaded-file';\r\n\r\nexport async function readUploadedFolders(entries: WebKitEntry[]): Promise<UploadedFile[]> {\r\n    let files = [];\r\n\r\n    for (const key in entries) {\r\n        const entry = entries[key];\r\n\r\n        if ( ! entry.isDirectory) {\r\n            files.push(await transformFileEntry(entry as WebKitFileEntry));\r\n        } else {\r\n            files = files.concat(await readDirRecursive(entry as WebKitDirectoryEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nasync function readDirRecursive(entry: WebKitDirectoryEntry, files = []) {\r\n    const entries = await readEntries(entry);\r\n\r\n    for (const key in entries) {\r\n        const childEntry = entries[key];\r\n\r\n        if (childEntry.isDirectory) {\r\n            await readDirRecursive(childEntry as WebKitDirectoryEntry, files);\r\n        } else {\r\n            files.push(await transformFileEntry(childEntry as WebKitFileEntry));\r\n        }\r\n    }\r\n\r\n    return files;\r\n}\r\n\r\nfunction readEntries(dir: WebKitDirectoryEntry): Promise<WebKitEntry[]> {\r\n    return new Promise(resolve => {\r\n        const reader = dir.createReader();\r\n        reader.readEntries(entries => resolve(entries as any));\r\n    });\r\n}\r\n\r\nfunction transformFileEntry(entry: WebKitFileEntry) {\r\n    return new Promise(resolve => {\r\n        entry.file((file: any) => {\r\n            resolve(new UploadedFile(file as File, entry.fullPath));\r\n        });\r\n    });\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { openUploadWindow } from '../utils/open-upload-window';\r\nimport { UploadedFile } from '../uploaded-file';\r\nimport { readUploadedFolders } from '../utils/read-uploaded-folders';\r\nimport { UploadInputConfig } from '@common/uploads/upload-input-config';\r\n\r\n@Directive({\r\n    selector: '[fileDropzone]',\r\n})\r\nexport class UploadDropzoneDirective implements OnInit, OnDestroy {\r\n    @Input() disableDropzoneClick = false;\r\n    @Input() disableDropzone = false;\r\n    @Input() clickButton: ElementRef;\r\n    @Input('fileDropzone') uploadConfig: UploadInputConfig = {};\r\n    @Output() filesDropped: EventEmitter<UploadedFile[]> = new EventEmitter();\r\n\r\n    constructor(protected el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        const el = this.el.nativeElement;\r\n        el.addEventListener('dragenter', (e) => this.handleDragEnter(e));\r\n        el.addEventListener('dragover', (e) => this.handleDragOver(e));\r\n        el.addEventListener('dragleave', (e) => this.handleDragLeave(e));\r\n        el.addEventListener('drop', (e) => this.handleDrop(e));\r\n\r\n        if ( ! this.disableDropzoneClick) {\r\n            const trigger = this.clickButton ? this.clickButton.nativeElement : el;\r\n            trigger.addEventListener('click', () => this.handleClick());\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    protected handleClick() {\r\n        if (this.disableDropzone) return;\r\n        openUploadWindow(this.uploadConfig).then(files => {\r\n            this.emitUploadEvent(files);\r\n        });\r\n    }\r\n\r\n    public handleDragEnter(e) {\r\n        if (this.dropzoneDisabled(e)) return;\r\n        this.el.nativeElement.classList.add('file-over-dropzone');\r\n    }\r\n\r\n    public handleDragOver(e) {\r\n        if (e.preventDefault) e.preventDefault();\r\n        e.dataTransfer.dropEffect = this.dropzoneDisabled(e) ? 'none' : 'move';\r\n        return false;\r\n    }\r\n\r\n    public handleDragLeave(e: MouseEvent) {\r\n        const newEl = document.elementFromPoint(e.clientX, e.clientY);\r\n        if (this.el.nativeElement.contains(newEl)) return;\r\n        this.removeClassesFromDropzone();\r\n    }\r\n\r\n    public async handleDrop(e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.removeClassesFromDropzone();\r\n        if (this.dropzoneDisabled(e) || !e.dataTransfer.items) return;\r\n\r\n        const items = Array.from(e.dataTransfer.items)\r\n            .filter((item: DataTransferItem) => item.kind === 'file')\r\n            .map((item: DataTransferItem) => {\r\n                return item.webkitGetAsEntry();\r\n            });\r\n\r\n        if (items.length) {\r\n            this.emitUploadEvent(await readUploadedFolders(items));\r\n        }\r\n    }\r\n\r\n    protected emitUploadEvent(files: UploadedFile[]) {\r\n        this.filesDropped.emit(files);\r\n    }\r\n\r\n    protected removeClassesFromDropzone() {\r\n        this.el.nativeElement.classList.remove('file-over-dropzone');\r\n    }\r\n\r\n    protected dropzoneDisabled(e: DragEvent) {\r\n        const hasFiles = e.dataTransfer.types.find(type => type.toLowerCase() === 'files');\r\n        return this.disableDropzone || ! hasFiles;\r\n    }\r\n}\r\n","import { Directive, ElementRef, NgZone } from '@angular/core';\nimport { LoadMoreEntries } from '../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { DriveState } from '../state/drive-state';\nimport { InfiniteScroll } from 'common/core/ui/infinite-scroll/infinite.scroll';\n\n@Directive({\n    selector: '[driveInfiniteScroll]'\n})\nexport class DriveInfiniteScrollDirective extends InfiniteScroll {\n    constructor(\n        protected el: ElementRef,\n        protected store: Store,\n        protected zone: NgZone,\n    ) {\n        super();\n    }\n\n    protected loadMoreItems() {\n        const page = this.store.selectSnapshot(DriveState.currentPage) + 1;\n        this.store.dispatch(new LoadMoreEntries({page}));\n    }\n\n    protected isLoading(): boolean {\n        return this.store.selectSnapshot(DriveState.loading);\n    }\n\n    protected canLoadMore(): boolean {\n        return this.store.selectSnapshot(DriveState.canLoadMoreEntries);\n    }\n}\n","import { Input, ElementRef, OnInit, OnDestroy, NgZone, Directive } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive()\r\nexport abstract class InfiniteScroll implements OnInit, OnDestroy {\r\n    protected scrollSub: Subscription;\r\n    protected el: ElementRef<HTMLElement>;\r\n    protected abstract zone: NgZone;\r\n\r\n    @Input() threshold: number | string = 50;\r\n\r\n    ngOnInit() {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.scrollSub = fromEvent(this.getScrollContainer(), 'scroll', {capture: true, passive: true})\r\n                .pipe(debounceTime(20))\r\n                .subscribe((e: Event) => this.onScroll(e.target as HTMLElement));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.scrollSub && this.scrollSub.unsubscribe();\r\n    }\r\n\r\n    protected getScrollContainer() {\r\n        return this.el ? this.el.nativeElement : document;\r\n    }\r\n\r\n    protected onScroll(target: HTMLElement) {\r\n        if ( ! target || (this.el && target !== this.el.nativeElement) || ! this.canLoadMore() || this.isLoading()) return;\r\n\r\n        const offset = parseInt(this.threshold as string);\r\n\r\n        const currentScroll = this.el ?\r\n            target.scrollTop + target.offsetHeight :\r\n            window.scrollY + window.innerHeight;\r\n\r\n\r\n        const heightWithoutOffset = this.el ?\r\n            target.scrollHeight - offset :\r\n            document.documentElement.scrollHeight - offset;\r\n\r\n        if (currentScroll >= heightWithoutOffset) {\r\n            this.zone.run(() => {\r\n                this.loadMoreItems();\r\n            });\r\n        }\r\n    }\r\n\r\n    protected abstract loadMoreItems();\r\n    protected abstract canLoadMore(): boolean;\r\n    protected abstract isLoading(): boolean;\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from './state/drive-state';\nimport { DriveDomCacheService } from './interactions/drive-dom-cache.service';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n    LoadUserFolders,\n    LoadUserSpaceUsage,\n    ResetState,\n    SetCurrentUser,\n    SetViewMode,\n    ToggleSidebar,\n    UploadFiles\n} from './state/actions/commands';\nimport { UploadedFile } from 'common/uploads/uploaded-file';\nimport { Settings } from 'common/core/config/settings.service';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { BreakpointChanged } from './state/actions/events';\nimport { VIEW_MODE_KEY } from './state/models/drive-state-model';\nimport { LocalStorage } from 'common/core/services/local-storage.service';\nimport { User } from '@common/core/types/models/User';\n\n@Component({\n    selector: 'drive',\n    templateUrl: './drive.component.html',\n    styleUrls: ['./drive.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DriveComponent implements OnInit, OnDestroy {\n    @ViewChild('scrollContainer', { read: ElementRef, static: true }) scrollContainer: ElementRef;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef;\n    @ViewChild(EntryDragPreviewComponent, { read: ElementRef, static: true }) dragPreview: ElementRef;\n    @Select(DriveState.dragging) dragging: Observable<boolean>;\n    @Select(DriveState.detailsOpen) activityOpen$: Observable<boolean>;\n    @Select(DriveState.sidebarOpen) sidebarOpen$: Observable<boolean>;\n    @Select(DriveState.loading) loading$: Observable<boolean>;\n    @Select(DriveState.isMobile) isMobile$: Observable<boolean>;\n    @Select(DriveState.canUpload) canUpload$: Observable<boolean>;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private currentUser: CurrentUser,\n        private localStorage: LocalStorage,\n        private domCache: DriveDomCacheService,\n        private breakpoints: BreakpointObserver,\n        public settings: Settings,\n    ) {}\n\n    ngOnInit() {\n        this.setViewMode();\n        this.cacheDemoElements();\n        this.observeBreakpointChanges();\n        this.store.dispatch(new LoadUserFolders());\n        this.store.dispatch(new LoadUserSpaceUsage());\n\n        // TODO: refactor this once auth is moved to it's own store\n        this.store.dispatch(new SetCurrentUser(this.currentUser.getModel() as User));\n        this.currentUser.model$.subscribe(user => {\n            this.store.dispatch(new SetCurrentUser(user as User));\n        });\n    }\n\n    ngOnDestroy() {\n        this.store.dispatch(ResetState);\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    public uploadFiles(files: UploadedFile[]) {\n        this.store.dispatch(new UploadFiles(files));\n    }\n\n    public toggleSidebar() {\n        this.store.dispatch(new ToggleSidebar());\n    }\n\n    private cacheDemoElements() {\n        this.domCache.filesCont = this.filesContainer.nativeElement;\n        this.domCache.scrollCont = this.scrollContainer.nativeElement;\n        this.domCache.dragPreview = this.dragPreview.nativeElement;\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n\n    private observeBreakpointChanges() {\n        const sub = this.breakpoints.observe('(max-width: 1100px)').subscribe(result => {\n            this.store.dispatch(new BreakpointChanged({isMobile: result.matches}));\n        });\n        this.subscriptions.push(sub);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Keycodes } from './keycodes.enum';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { DELETE } from '@angular/cdk/keycodes';\r\n\r\ninterface ParsedKeybind {\r\n    ctrl: boolean;\r\n    shift: boolean;\r\n    key: string;\r\n}\r\n\r\n// TODO: refactor so keybinds are stored for a specific \"listenOn\" element instead of globally\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Keybinds {\r\n    private bindings = [];\r\n\r\n    public add(keybind: string, callback: (e: KeyboardEvent) => void) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback});\r\n    }\r\n\r\n    public addWithPreventDefault(keybind: string, callback: Function) {\r\n        this.bindings.push({keybind: this.parseKeybindString(keybind), keybindString: keybind, callback, preventDefault: true});\r\n    }\r\n\r\n    public listenOn(el: HTMLElement): Subscription {\r\n        return fromEvent(el, 'keydown').subscribe((e: KeyboardEvent) => {\r\n            this.executeBindings(e);\r\n        });\r\n    }\r\n\r\n    private executeBindings(e: KeyboardEvent) {\r\n        this.bindings.forEach(binding => {\r\n            if ( ! this.bindingMatches(binding.keybind, e)) return;\r\n            if (binding.preventDefault && e.preventDefault) e.preventDefault();\r\n            binding.callback(e);\r\n        });\r\n    }\r\n\r\n    private bindingMatches(keybind: ParsedKeybind, e: KeyboardEvent) {\r\n        return Keycodes[keybind.key.toUpperCase()] === e.keyCode && e.ctrlKey === keybind.ctrl && e.shiftKey === keybind.shift;\r\n    }\r\n\r\n    /**\r\n     * Parse keybind string into object.\r\n     */\r\n    private parseKeybindString(keybind: string): ParsedKeybind {\r\n        const parts = keybind.trim().split('+');\r\n        const parsed = {ctrl: false, shift: false, key: ''};\r\n\r\n        parts.forEach(part => {\r\n            part = part.trim().toLowerCase();\r\n\r\n            if (part === 'ctrl') {\r\n                parsed.ctrl = true;\r\n            } else if (part === 'shift') {\r\n                parsed.shift = true;\r\n            } else {\r\n                parsed.key = part;\r\n            }\r\n        });\r\n\r\n        return parsed;\r\n    }\r\n}\r\n","<material-navbar [showToggleButton]=\"(isMobile$ | async)\" (toggleButtonClick)=\"toggleSidebar()\" menuPosition=\"drive-navbar\">\n    <main-searchbar class=\"nav-searchbar\"></main-searchbar>\n</material-navbar>\n<mat-sidenav-container>\n    <mat-sidenav [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" [opened]=\"sidebarOpen$ | async\" class=\"left-sidebar\">\n        <sidebar></sidebar>\n    </mat-sidenav>\n    <mat-sidenav [opened]=\"activityOpen$ | async\" [mode]=\"(isMobile$ | async) ? 'over' : 'side'\" position=\"end\" class=\"right-sidebar\">\n        <details-sidebar></details-sidebar>\n    </mat-sidenav>\n    <mat-sidenav-content driveHammerInteractions [class.has-rek]=\"settings.has('ads.drive')\">\n        <ad-host slot=\"ads.drive\"></ad-host>\n        <drive-toolbar></drive-toolbar>\n        <file-list-header></file-list-header>\n        <div class=\"loading-overlay-container\">\n            <div\n                class=\"files-container\"\n                #filesContainer\n                #scrollContainer\n                toggleSelectedClass\n                [class.dragging]=\"dragging | async\"\n                contextMenu=\"entry\"\n                [disableContextMenu]=\"!(canUpload$ | async)\"\n                fileDropzone\n                [disableDropzoneClick]=\"true\"\n                [disableDropzone]=\"!(canUpload$ | async)\"\n                driveInfiniteScroll\n                (filesDropped)=\"uploadFiles($event)\"\n            >\n                <router-outlet></router-outlet>\n            </div>\n            <loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n<entry-drag-preview></entry-drag-preview>\n","export enum Keycodes {\r\n    ENTER = 13,\r\n    SPACE = 32,\r\n    ESCAPE = 27,\r\n    DELETE = 46,\r\n    ARROW_UP = 38,\r\n    ARROW_RIGHT = 39,\r\n    ARROW_DOWN = 40,\r\n    ARROW_LEFT = 37,\r\n    S = 83,\r\n    N = 78,\r\n    A = 65,\r\n    T = 84,\r\n    B = 66,\r\n    C = 67,\r\n    O = 79,\r\n    P = 80,\r\n    R = 82,\r\n    F = 70,\r\n    Y = 89,\r\n    Z = 90,\r\n}\r\n","<files-grid-item\r\n        *ngFor=\"let entry of entries; trackBy: trackById\"\r\n        [entry]=\"entry\"\r\n        [contextMenu]=\"{type: 'entry', entry: entry}\"\r\n        [disableContextMenu]=\"disableInteractions\"\r\n        [folderDropTarget]=\"entry\"\r\n></files-grid-item>","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\n\n@Component({\n    selector: 'files-grid',\n    templateUrl: './files-grid.component.html',\n    styleUrls: ['./files-grid.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesGridComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","<table mat-table [dataSource]=\"entries\" matSort [matSortDisabled]=\"disableInteractions\" (matSortChange)=\"sortChange($event)\" [trackBy]=\"trackById\">\n  <!-- Image Column -->\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef> </th>\n    <td mat-cell *matCellDef=\"let entry\"> <file-thumbnail [file]=\"entry\"></file-thumbnail> </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header trans>Name</th>\n    <td mat-cell *matCellDef=\"let entry\">\n      <span class=\"entry-name\">{{entry.name}}</span>\n      <mat-icon class=\"star-icon\" svgIcon=\"star\" *ngIf=\"isStarred(entry)\" [matTooltip]=\"'Starred' | trans\"></mat-icon>\n    </td>\n  </ng-container>\n\n  <!-- Updated_at Column -->\n  <ng-container matColumnDef=\"updated\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"updated_at\" trans>Updated</th>\n    <td mat-cell *matCellDef=\"let entry\"> {{entry.updated_at | formattedDate }} </td>\n  </ng-container>\n\n  <!-- File Size Column -->\n  <ng-container matColumnDef=\"size\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"file_size\" trans>Size</th>\n    <td mat-cell *matCellDef=\"let entry\"> {{entry.file_size | formattedFileSize}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"['image', 'name', 'updated', 'size']\"></tr>\n  <tr\n      class=\"drive-entry\"\n      mat-row\n      *matRowDef=\"let row; columns: ['image', 'name', 'updated', 'size'];\"\n      [contextMenu]=\"{type: 'entry', entry: row}\"\n      [disableContextMenu]=\"disableInteractions\"\n      [attr.data-id]=\"row.id\"\n      [folderDropTarget]=\"row\"\n  ></tr>\n</table>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-search-entries',\n    templateUrl: './no-search-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSearchEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-shared-entries',\n    templateUrl: './no-shared-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoSharedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-starred-entries',\n    templateUrl: './no-starred-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoStarredEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-trashed-entries',\n    templateUrl: './no-trashed-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoTrashedEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-recent-entries',\n    templateUrl: './no-recent-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoRecentEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input} from '@angular/core';\nimport { DriveEntry } from '../../models/drive-entry';\nimport { Sort } from '@angular/material/sort';\nimport { Store } from '@ngxs/store';\nimport { ReloadPageEntries } from '../../../state/actions/commands';\nimport { SortColumn, SortDirection } from '../../../entries/available-sorts';\n\n@Component({\n    selector: 'files-list',\n    templateUrl: './files-list.component.html',\n    styleUrls: ['./files-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilesListComponent {\n    @Input() entries: DriveEntry[];\n    @Input() disableInteractions = false;\n\n    constructor(private store: Store) {}\n\n    public sortChange(e: Sort) {\n        const params = {\n            orderBy: e.active as SortColumn,\n            orderDir: e.direction as SortDirection\n        };\n\n        if ( ! this.disableInteractions) {\n            this.store.dispatch(new ReloadPageEntries(params));\n        }\n    }\n\n    public isStarred(entry: DriveEntry): boolean {\n        if ( ! entry.tags) return false;\n        return !!entry.tags.find(tag => tag.name === 'starred');\n    }\n\n    public trackById(index: number, entry: DriveEntry): number {\n        return entry.id;\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'no-folder-entries',\n    templateUrl: './no-folder-entries.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoFolderEntriesComponent {\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, ElementRef, AfterViewInit, Inject } from '@angular/core';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from '../../upload-input-config';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { Store } from '@ngxs/store';\nimport { UploadFiles } from '../../state/actions/commands';\nimport { openUploadWindow } from '@common/uploads/utils/open-upload-window';\n\n@Component({\n    selector: 'upload-dropzone',\n    templateUrl: './upload-dropzone.component.html',\n    styleUrls: ['./upload-dropzone.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadDropzoneComponent implements AfterViewInit {\n    @ViewChild('clickTarget', { static: true }) clickTarget: ElementRef;\n\n    constructor (\n        private store: Store,\n        @Inject(DRIVE_UPLOAD_INPUT_CONFIG) private uploadConfig: UploadInputConfig,\n    ) {}\n\n    ngAfterViewInit() {\n        this.clickTarget.nativeElement.addEventListener('click', () => {\n            openUploadWindow(this.uploadConfig).then(files => {\n                this.store.dispatch(new UploadFiles(files));\n            });\n        });\n    }\n}\n","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>No recent entries.</div>\r\n    <div class=\"secondary\" trans>You have not uploaded any files or folders yet.</div>\r\n    <mat-icon svgIcon=\"recent-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Trash is empty.</div>\r\n    <div class=\"secondary\" trans>There are no files or folders in your trash currently.</div>\r\n    <mat-icon svgIcon=\"trash-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>Nothing is starred.</div>\n    <div class=\"secondary\" trans>Add stars to files and folders that you want to easily find later.</div>\n    <mat-icon svgIcon=\"add-star-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"no-results-message\">\r\n    <div class=\"main\" trans>Shared with me.</div>\r\n    <div class=\"secondary\" trans>Files and folders other people have shared with you.</div>\r\n    <mat-icon svgIcon=\"share-custom\" class=\"icon\"></mat-icon>\r\n</div>","<div class=\"no-results-message\">\n    <div class=\"main\" trans>No matches found.</div>\n    <div class=\"secondary\" trans>Try another search with different query or file type.</div>\n    <mat-icon svgIcon=\"search-custom\" class=\"icon\"></mat-icon>\n</div>","<div class=\"animation-circle\"></div>\n<div class=\"content-circle\" #clickTarget>\n    <mat-icon class=\"main-icon\" svgIcon=\"upload-custom\"></mat-icon>\n    <div class=\"text initial-text\">\n        <div class=\"primary\" trans>Drop files or folders here</div>\n        <div class=\"secondary\" trans>or click to upload.</div>\n    </div>\n</div>","<upload-dropzone></upload-dropzone>","<files-grid [entries]=\"entries$ | async\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n<ng-template #filesList>\r\n    <files-list [entries]=\"entries$ | async\"></files-list>\r\n</ng-template>\r\n\r\n<ng-container [ngSwitch]=\"activePageName$ | async\" *ngIf=\"noEntries | async\">\r\n    <no-recent-entries *ngSwitchCase=\"'recent'\"></no-recent-entries>\r\n    <no-trashed-entries *ngSwitchCase=\"'trash'\"></no-trashed-entries>\r\n    <no-starred-entries *ngSwitchCase=\"'starred'\"></no-starred-entries>\r\n    <no-shared-entries *ngSwitchCase=\"'shares'\"></no-shared-entries>\r\n    <no-search-entries *ngSwitchCase=\"'search'\"></no-search-entries>\r\n    <no-folder-entries *ngSwitchDefault></no-folder-entries>\r\n</ng-container>","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    HostBinding,\n    OnInit,\n    ElementRef, OnDestroy\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DriveState } from '../../state/drive-state';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { Observable, Subscription } from 'rxjs';\nimport { DrivePageType } from '../../state/models/available-pages';\nimport { Keybinds } from 'common/core/keybinds/keybinds.service';\nimport { DeleteSelectedEntries, SelectAllEntries } from '../../state/actions/commands';\nimport { EntryDoubleTapped } from '../../state/actions/events';\n\n@Component({\n    selector: 'entries-container',\n    templateUrl: './entries-container.component.html',\n    styleUrls: ['./entries-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [Keybinds],\n})\nexport class EntriesContainerComponent implements OnInit, OnDestroy {\n    @HostBinding('attr.tabindex') tabindex = 0;\n    @Select(DriveState.entries) entries$: Observable<DriveEntry[]>;\n    @Select(DriveState.entriesEmpty) noEntries: Observable<boolean>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n    @Select(DriveState.activePageName) activePageName$: Observable<DrivePageType>;\n    private keybindSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private keybinds: Keybinds,\n    ) {}\n\n    ngOnInit() {\n        this.keybindSub = this.keybinds.listenOn(this.el.nativeElement);\n        this.keybinds.addWithPreventDefault('ctrl+a', () => {\n            this.store.dispatch(new SelectAllEntries());\n        });\n        this.keybinds.addWithPreventDefault('delete', () => {\n            this.store.dispatch(new DeleteSelectedEntries());\n        });\n        this.keybinds.addWithPreventDefault('enter', () => {\n            this.store.dispatch(new EntryDoubleTapped(this.store.selectSnapshot(DriveState.selectedEntry)));\n        });\n    }\n\n    ngOnDestroy() {\n        this.keybindSub.unsubscribe();\n    }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'default-preview',\r\n    templateUrl: './default-preview.component.html',\r\n    styleUrls: ['./default-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DefaultPreviewComponent extends BaseFilePreview {\r\n    @Input() message: string;\r\n\r\n    public getMessage() {\r\n        return this.message || 'No file preview available.';\r\n    }\r\n}\r\n","import { EventEmitter, HostBinding, Inject, Directive } from '@angular/core';\r\nimport { CURRENT_PREVIEW_FILE } from './current-preview-file';\r\nimport { FileEntry } from '../uploads/types/file-entry';\r\nimport { PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer } from './preview-url-transformer';\r\nimport { Settings } from '../core/config/settings.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AppHttpClient } from '../core/http/app-http-client.service';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { CurrentUser } from '../auth/current-user';\r\n\r\n@Directive()\nexport abstract class BaseFilePreview {\r\n    @HostBinding('class.file-preview-wrapper') filePreviewWrapper = true;\r\n    public download = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(CURRENT_PREVIEW_FILE) protected file: FileEntry,\r\n        @Inject(PREVIEW_URL_TRANSFORMER) protected transformer: PreviewUrlTransformer,\r\n        protected settings: Settings,\r\n        protected http: AppHttpClient,\r\n        protected sanitizer: DomSanitizer,\r\n        protected currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    public getSrc(): string {\r\n        return this.transformer(this.file);\r\n    }\r\n\r\n    public getSafeSrc(): SafeResourceUrl {\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(this.getSrc());\r\n    }\r\n\r\n    public getContents(): Observable<string> {\r\n        return this.http.get(this.getSrc(), null, {responseType: 'text'});\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const CURRENT_PREVIEW_FILE = new InjectionToken<any>('CURRENT_PREVIEW_FILE');\r\n","import { InjectionToken } from '@angular/core';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\n\r\nexport type PreviewUrlTransformer = (entry: FileEntry) => string;\r\n\r\nexport const PREVIEW_URL_TRANSFORMER = new InjectionToken<PreviewUrlTransformer>('PREVIEW_URL_TRANSFORMER', {\r\n    factory: () => {\r\n        return entry => entry.url;\r\n    },\r\n    providedIn: 'root',\r\n});\r\n","<div class=\"panel preview-object\">\r\n    <div class=\"message\" trans>{{getMessage()}}</div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"download.emit()\" trans>Download</button>\r\n</div>","<default-preview *ngIf=\"fileTooLarge$ | async; else textPreview\" message=\"This file is too large to preview.\"></default-preview>\r\n<ng-template #textPreview>\r\n    <div class=\"text-wrapper preview-object\">\r\n        <pre>{{ content$ | async }}</pre>\r\n    </div>\r\n</ng-template>","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\nconst FIVE_MB = 5242880;\r\n\r\n@Component({\r\n    selector: 'text-preview',\r\n    templateUrl: './text-preview.component.html',\r\n    styleUrls: ['./text-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextPreviewComponent extends BaseFilePreview implements OnInit {\r\n    public content$ = new BehaviorSubject('');\r\n    public fileTooLarge$ = new BehaviorSubject(false);\r\n\r\n    ngOnInit() {\r\n        if (this.file.file_size > FIVE_MB) {\r\n            this.fileTooLarge$.next(true);\r\n        } else {\r\n            this.loadFileContents();\r\n        }\r\n    }\r\n\r\n    private loadFileContents() {\r\n        this.getContents()\r\n            .subscribe(content => {\r\n                this.content$.next(content);\r\n            });\r\n    }\r\n}\r\n","<audio #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></audio>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'audio-preview',\r\n    templateUrl: './audio-preview.component.html',\r\n    styleUrls: ['./audio-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AudioPreviewComponent extends BaseFilePreview implements OnInit {\r\n    @ViewChild('playerEl', { static: true }) playerEl: ElementRef;\r\n    public invalidMedia = false;\r\n\r\n    ngOnInit() {\r\n        this.invalidMedia = !this.canPlayVideo();\r\n\r\n        if ( ! this.invalidMedia) {\r\n            this.player().src = this.getSrc();\r\n            this.player().play();\r\n        }\r\n    }\r\n\r\n    protected canPlayVideo(): boolean {\r\n        return !!this.player().canPlayType(this.file.mime);\r\n    }\r\n\r\n    protected player() {\r\n        return this.playerEl.nativeElement as HTMLVideoElement|HTMLAudioElement;\r\n    }\r\n}\r\n","<video #playerEl controls=\"controls\" class=\"preview-object\" [class.hidden]=\"invalidMedia\" controlsList=\"nodownload noremoteplayback\"></video>\r\n\r\n<default-preview *ngIf=\"invalidMedia\"></default-preview>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {AudioPreviewComponent} from '../audio-preview/audio-preview.component';\r\n\r\n@Component({\r\n    selector: 'video-preview',\r\n    templateUrl: './video-preview.component.html',\r\n    styleUrls: ['./video-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoPreviewComponent extends AudioPreviewComponent {\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n    selector: 'image-preview',\r\n    templateUrl: './image-preview.component.html',\r\n    styleUrls: ['./image-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ImagePreviewComponent extends BaseFilePreview {}\r\n","import {ChangeDetectionStrategy, Component, HostBinding,} from '@angular/core';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\n\r\n@Component({\r\n  selector: 'pdf-preview',\r\n  templateUrl: './pdf-preview.component.html',\r\n  styleUrls: ['./pdf-preview.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PdfPreviewComponent extends BaseFilePreview {\r\n    @HostBinding('class') className = 'preview-object';\r\n\r\n    public getSrc() {\r\n        return super.getSrc() + '#toolbar=0';\r\n    }\r\n}\r\n","<img [src]=\"getSafeSrc()\" class=\"preview-object\">","<iframe [src]=\"getSafeSrc()\"></iframe>","<ng-container *ngIf=\"!(showDefaultPreview$ | async); else defaultPreview\">\r\n    <iframe class=\"preview-object\" #iframe></iframe>\r\n    <div class=\"pop-out-block\" (click)=\"openInNewWindow()\"></div>\r\n</ng-container>\r\n<ng-template #defaultPreview>\r\n    <default-preview></default-preview>\r\n</ng-template>\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\nimport { BaseFilePreview } from '../base-file-preview';\nimport { BehaviorSubject } from 'rxjs';\nimport { GenericBackendResponse } from '@common/core/types/backend-response';\nimport { isAbsoluteUrl } from '@common/core/utils/is-absolute-url';\n\n@Component({\n    selector: 'google-docs-viewer',\n    templateUrl: './google-docs-viewer.component.html',\n    styleUrls: ['./google-docs-viewer.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GoogleDocsViewerComponent extends BaseFilePreview implements AfterViewInit {\n    @ViewChild('iframe') iframe: ElementRef<HTMLIFrameElement>;\n    public loading$ = new BehaviorSubject(true);\n    public showDefaultPreview$ = new BehaviorSubject(false);\n    private timeoutRef: number;\n\n    ngAfterViewInit() {\n        // google docs viewer only supports file up to 25MB\n        if (this.file.file_size > 25000000) {\n            return this.showDefaultPreview();\n        }\n\n        this.iframe.nativeElement.onload = () => {\n            clearTimeout(this.timeoutRef);\n            this.stopLoading();\n        };\n\n        this.getIframeSrc().then(url => {\n            this.iframe.nativeElement.src = url;\n        }).catch(() => {\n            this.showDefaultPreview();\n        });\n\n        // if google docs preview iframe is not loaded\n        // after 6 seconds, bail and show default preview\n        this.timeoutRef = setTimeout(() => {\n            this.showDefaultPreview();\n        }, 5000);\n    }\n\n    public stopLoading() {\n        this.loading$.next(false);\n    }\n\n    public showDefaultPreview() {\n        this.stopLoading();\n        this.showDefaultPreview$.next(true);\n    }\n\n    public openInNewWindow() {\n        window.open(window.location.href, '_blank');\n    }\n\n    private getIframeSrc(): Promise<string> {\n        return new Promise((resolve, reject) => {\n            let previewUrl = this.getSrc();\n\n            // if we're not trying to preview shareable link we will need to generate\n            // preview token, otherwise google won't be able to access this file\n            if (previewUrl.indexOf('shareable_link') === -1) {\n                this.http.post<GenericBackendResponse<{preview_token: string}>>(`uploads/${this.file.id}/add-preview-token`).subscribe(response => {\n                    previewUrl += `?preview_token=${response.preview_token}`;\n                    resolve(this.getGoogleDocsUrl(previewUrl));\n                }, () => reject);\n            } else {\n                resolve(this.getGoogleDocsUrl(previewUrl));\n            }\n        });\n    }\n\n    private getGoogleDocsUrl(previewUrl: string) {\n        previewUrl = isAbsoluteUrl(previewUrl) ? previewUrl : this.settings.getBaseUrl() + previewUrl;\n        return 'https://docs.google.com/gview?embedded=true&url=' + encodeURIComponent(previewUrl);\n    }\n}\n","import {Inject, Injectable, Injector} from '@angular/core';\r\nimport {FileEntry} from '../uploads/types/file-entry';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\r\nimport {CURRENT_PREVIEW_FILE} from './current-preview-file';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {filter} from 'rxjs/operators';\r\nimport {PREVIEW_URL_TRANSFORMER, PreviewUrlTransformer} from './preview-url-transformer';\r\n\r\ninterface PreviewFilesMeta {\r\n    entry?: FileEntry;\r\n    pointer?: number;\r\n    total?: number;\r\n    haveNext?: boolean;\r\n    havePrevious?: boolean;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PreviewFilesService {\r\n    private files: FileEntry[] = [];\r\n    private portal = new BehaviorSubject(null);\r\n    private meta: BehaviorSubject<PreviewFilesMeta> = new BehaviorSubject({});\r\n    private previewUriTransformer: PreviewUrlTransformer|null = null;\r\n    public download = new Subject();\r\n\r\n    constructor(\r\n        @Inject(AVAILABLE_PREVIEWS) private availablePreviews: DefaultPreviews,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    public pagination(): Observable<PreviewFilesMeta> {\r\n        return this.meta\r\n            .pipe(filter(data => data && !!data.entry));\r\n    }\r\n\r\n    public getCurrent(): FileEntry {\r\n        return this.meta.value.entry;\r\n    }\r\n\r\n    public getAllEntries() {\r\n        return this.files;\r\n    }\r\n\r\n    public getPortal(): Observable<ComponentPortal<any>> {\r\n        return this.portal.asObservable();\r\n    }\r\n\r\n    public showNext() {\r\n        if ( ! this.meta.value.haveNext) return;\r\n        this.updateMeta('next');\r\n        this.updatePortal();\r\n    }\r\n\r\n    public showPrevious() {\r\n        if ( ! this.meta.value.havePrevious) return;\r\n        this.updateMeta('previous');\r\n        this.updatePortal();\r\n    }\r\n\r\n    private updateMeta(dir?: 'next'|'previous'|number) {\r\n        let newPointer = 0;\r\n\r\n        if (typeof dir === 'string') {\r\n            const oldPointer = this.meta.value.pointer;\r\n            newPointer = dir === 'next' ? oldPointer + 1 : oldPointer - 1;\r\n        } else if (typeof dir === 'number') {\r\n            newPointer = dir;\r\n        }\r\n\r\n        this.meta.next({\r\n            pointer: newPointer,\r\n            entry: this.files[newPointer],\r\n            total: this.files.length,\r\n            haveNext: (newPointer + 1) < this.files.length,\r\n            havePrevious: (newPointer - 1) > -1,\r\n        });\r\n    }\r\n\r\n    private updatePortal() {\r\n        const current = this.getCurrent();\r\n        const comp = (current && this.availablePreviews[current.type]) || DefaultPreviewComponent;\r\n        this.portal.next(new ComponentPortal(comp, null, this.createInjector()));\r\n    }\r\n\r\n    public set(files: FileEntry[], activeFile?: number) {\r\n        if ( ! files || files.length === 0) return;\r\n        this.files = files.filter(entry => entry.type !== 'folder');\r\n        this.updateMeta(activeFile);\r\n        this.updatePortal();\r\n    }\r\n\r\n    private createInjector(): PortalInjector {\r\n        const injectionTokens = new WeakMap();\r\n\r\n        // set currently active preview file\r\n        injectionTokens.set(CURRENT_PREVIEW_FILE, this.getCurrent());\r\n\r\n        // override preview backend uri, if specified\r\n        if (this.previewUriTransformer) {\r\n            injectionTokens.set(PREVIEW_URL_TRANSFORMER, this.previewUriTransformer);\r\n        }\r\n\r\n        return new PortalInjector(this.injector, injectionTokens);\r\n    }\r\n\r\n    public destroy() {\r\n        this.meta.next({});\r\n        this.files = null;\r\n        this.portal.next(null);\r\n    }\r\n\r\n    /**\r\n     * Provide transformer function for preview file backend url.\r\n     * (for changing base uri, adding url params etc)\r\n     */\r\n    public setPreviewUriTransformer(transformer: PreviewUrlTransformer) {\r\n        this.previewUriTransformer = transformer;\r\n    }\r\n}\r\n","import { InjectionToken, Injectable } from '@angular/core';\r\nimport { TextPreviewComponent } from './text-preview/text-preview.component';\r\nimport { VideoPreviewComponent } from './video-preview/video-preview.component';\r\nimport { ImagePreviewComponent } from './image-preview/image-preview.component';\r\nimport { PdfPreviewComponent } from './pdf-preview/pdf-preview.component';\r\nimport { AudioPreviewComponent } from './audio-preview/audio-preview.component';\r\nimport { GoogleDocsViewerComponent } from './google-docs-viewer/google-docs-viewer.component';\r\n\r\nexport const AVAILABLE_PREVIEWS = new InjectionToken<any>('AVAILABLE_PREVIEWS');\r\n\r\n@Injectable()\nexport class DefaultPreviews {\r\n    text = TextPreviewComponent;\r\n    video = VideoPreviewComponent;\r\n    audio = AudioPreviewComponent;\r\n    image = ImagePreviewComponent;\r\n    pdf = PdfPreviewComponent;\r\n    spreadsheet = GoogleDocsViewerComponent;\r\n    powerPoint = GoogleDocsViewerComponent;\r\n    word = GoogleDocsViewerComponent;\r\n}\r\n\r\n","<mat-icon svgIcon=\"password-custom\"></mat-icon>\n<form class=\"content\" (ngSubmit)=\"submitPassword()\" ngNativeValidate>\n    <div class=\"message\" trans>The link you are trying to access is password protected.</div>\n    <div class=\"input-container\">\n        <label for=\"password\" class=\"hidden\" trans>Password</label>\n        <input type=\"password\" id=\"password\" placeholder=\"Password\" [formControl]=\"passwordControl\" trans-placeholder required>\n    </div>\n    <div class=\"button-container\">\n        <div class=\"error\" *ngIf=\"passwordError$ | async\" trans>Password does not match.</div>\n        <button type=\"submit\" mat-raised-button color=\"accent\" trans>Enter</button>\n    </div>\n</form>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { ShareableLinksApiService } from '../../../sharing/links/shareable-links-api.service';\nimport { ShareableLink } from '../../../sharing/links/models/shareable-link';\n\n@Component({\n    selector: 'link-preview-password-panel',\n    templateUrl: './link-preview-password-panel.component.html',\n    styleUrls: ['./link-preview-password-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinkPreviewPasswordPanelComponent {\n    public passwordControl = new FormControl();\n    public passwordError$ = new BehaviorSubject(false);\n\n    @Input() link: ShareableLink;\n    @Output() passwordValid = new EventEmitter(null);\n\n    constructor(private links: ShareableLinksApiService) {}\n\n    public submitPassword() {\n        this.links.checkPassword(this.link.id, this.passwordControl.value)\n            .subscribe(response => {\n               this.handlePasswordCheck(response.matches);\n            }, () => {});\n    }\n\n    private handlePasswordCheck(matches: boolean) {\n        this.passwordError$.next(!matches);\n\n        if (matches) {\n            this.passwordValid.emit(this.passwordControl.value);\n        }\n    }\n}\n","<button mat-icon-button class=\"back-button\" (click)=\"closed.emit(true)\" *ngIf=\"showCloseButton\">\r\n    <mat-icon svgIcon=\"arrow-back\"></mat-icon>\r\n</button>\r\n<ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n    <div class=\"entry-name\">\r\n        <file-icon [type]=\"pagination.entry.type\"></file-icon>\r\n        {{pagination.entry.name}}\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"previewFiles.pagination() | async as pagination\">\r\n        <div class=\"navigation\">\r\n            <button mat-icon-button class=\"previous\" [disabled]=\"!pagination.havePrevious\" (click)=\"previewFiles.showPrevious()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-left\"></mat-icon>\r\n            </button>\r\n\r\n            <span class=\"meta\">{{pagination.pointer + 1}} {{'of' | trans}} {{pagination.total}}</span>\r\n\r\n            <button mat-icon-button class=\"next\" [disabled]=\"!pagination.haveNext\" (click)=\"previewFiles.showNext()\">\r\n                <mat-icon svgIcon=\"keyboard-arrow-right\"></mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <div class=\"actions\">\r\n        <button mat-icon-button (click)=\"downloadFiles()\" [disabled]=\"disableDownload\">\r\n            <mat-icon svgIcon=\"file-download\"></mat-icon>\r\n        </button>\r\n        <ng-content></ng-content>\r\n    </div>\r\n</ng-container>\r\n<a routerLink=\"/drive\" class=\"logo\" *ngIf=\"showLogo && settings.has('branding.logo_light')\">\r\n    <img *ngIf=\"showLogo && settings.get('branding.logo_light')\" [src]=\"settings.get('branding.logo_light')\">\r\n</a>\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { Settings } from 'common/core/config/settings.service';\n\n@Component({\n    selector: 'file-preview-toolbar',\n    templateUrl: './file-preview-toolbar.component.html',\n    styleUrls: ['./file-preview-toolbar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewToolbarComponent {\n    @Input() showLogo = false;\n    @Input() disableDownload = false;\n    @Input() showCloseButton = false;\n\n    @Output() closed = new EventEmitter();\n\n    constructor(\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n    ) {}\n\n    public downloadFiles() {\n        this.previewFiles.download.next();\n    }\n}\n","<ng-container *ngIf=\"previewFiles.getPortal() | async as portal\">\r\n    <ng-template [cdkPortalOutlet]=\"portal\" (attached)=\"listenForDownloadClick($event)\"></ng-template>\r\n</ng-container>\r\n","import {ChangeDetectionStrategy, Component, ComponentRef, Input, OnChanges, OnDestroy} from '@angular/core';\r\nimport {FileEntry} from '../../uploads/types/file-entry';\r\nimport {PreviewFilesService} from '../preview-files.service';\r\nimport {BaseFilePreview} from '../base-file-preview';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'preview-container',\r\n    templateUrl: './preview-container.component.html',\r\n    styleUrls: ['./preview-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PreviewContainerComponent implements OnChanges, OnDestroy {\r\n    @Input() files: FileEntry[];\r\n    @Input() activeFile: number;\r\n    private downloadSub: Subscription;\r\n\r\n    constructor(public previewFiles: PreviewFilesService) {}\r\n\r\n    ngOnChanges(changes) {\r\n        this.previewFiles.set(this.files, this.activeFile);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.previewFiles.destroy();\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n    }\r\n\r\n    public listenForDownloadClick(comp: ComponentRef<BaseFilePreview>) {\r\n        if (this.downloadSub) this.downloadSub.unsubscribe();\r\n        this.downloadSub = comp.instance.download.subscribe(() => {\r\n            this.previewFiles.download.next();\r\n        });\r\n    }\r\n}\r\n","<file-preview-toolbar [showCloseButton]=\"true\" (closed)=\"closeOverlay()\" [disableDownload]=\"!canDownload()\">\r\n    <button mat-icon-button (click)=\"openContextMenu()\" #moreOptionsButton *ngIf=\"!data.hideMoreOptionsBtn\">\r\n        <mat-icon svgIcon=\"more-vert\"></mat-icon>\r\n    </button>\r\n</file-preview-toolbar>\r\n<preview-container [files]=\"data.entries\" [activeFile]=\"data.activeEntry\" #previewContainer></preview-container>","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Inject, OnDestroy, ViewChild, } from '@angular/core';\nimport { DriveEntry } from '../../files/models/drive-entry';\nimport { OverlayPanelRef } from 'common/core/ui/overlay-panel/overlay-panel-ref';\nimport { OVERLAY_PANEL_DATA } from 'common/core/ui/overlay-panel/overlay-panel-data';\nimport { DriveContextMenuComponent } from '../../context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { DownloadEntries } from '../../state/actions/commands';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\nimport { CurrentUser } from '@common/auth/current-user';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\n\nexport interface FilePreviewOverlayData {\n    entries: DriveEntry[];\n    activeEntry?: number;\n    shareableLink?: ShareableLink;\n    password?: string;\n    hideMoreOptionsBtn?: boolean;\n}\n\n@Component({\n    selector: 'file-preview-overlay',\n    templateUrl: './file-preview-overlay.component.html',\n    styleUrls: ['./file-preview-overlay.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilePreviewOverlayComponent implements AfterViewInit, OnDestroy {\n    @ViewChild('previewContainer', { read: ElementRef, static: true }) previewContainer: ElementRef;\n    @ViewChild('moreOptionsButton', { read: ElementRef }) optionsButton: ElementRef;\n    private downloadSub: Subscription;\n\n    constructor(\n        private store: Store,\n        private el: ElementRef,\n        private contextMenu: ContextMenu,\n        private overlayRef: OverlayPanelRef,\n        private previewFiles: PreviewFilesService,\n        private currentUser: CurrentUser,\n        @Inject(OVERLAY_PANEL_DATA) public data: FilePreviewOverlayData\n    ) {}\n\n    ngAfterViewInit() {\n        this.bindToDownload();\n        // prevent ghost click from closing preview overlay\n        // when on mobile and single tap opens preview\n        setTimeout(() => {\n            this.previewContainer.nativeElement.addEventListener('click', e => {\n                if ( ! e.target.closest('.preview-object')) {\n                    this.overlayRef.close();\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public openContextMenu() {\n        const origin = this.optionsButton.nativeElement;\n        this.contextMenu.open(DriveContextMenuComponent, origin, {data: {entry: this.previewFiles.getCurrent()}});\n    }\n\n    public closeOverlay() {\n        this.overlayRef.close();\n    }\n\n    public canDownload() {\n        return this.data.entries.every(entry => {\n            if ( ! entry.users) entry.users = [];\n            const user = entry.users && entry.users.find(u => u.id === this.currentUser.get('id'));\n            const userHasDownloadPermission = user && (user.owns_entry || user.entry_permissions.download);\n            return this.data.shareableLink || userHasDownloadPermission;\n        });\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const entries = this.previewFiles.getCurrent();\n            this.store.dispatch(new DownloadEntries([entries], this.data.shareableLink, this.data.password));\n        });\n    }\n}\n","<material-navbar></material-navbar>\r\n\r\n<div class=\"toolbar\">\r\n    <div class=\"breadcrumb\">\r\n        <button mat-icon-button *ngIf=\"isSubFolder()\" (click)=\"openFolder()\" class=\"home-button\">\r\n            <mat-icon svgIcon=\"home\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n        <ng-container *ngFor=\"let folder of breadcrumb$ | async; last as last;\">\r\n            <div class=\"breadcrumb-item\" (click)=\"openFolder(folder)\">{{folder.name}}</div>\r\n            <mat-icon class=\"separator\" svgIcon=\"keyboard-arrow-right\" *ngIf=\"!last\"></mat-icon>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n        <entries-sort-button [formControl]=\"sortFormControl\"></entries-sort-button>\r\n\r\n        <span class=\"action-separator\"></span>\r\n\r\n        <ng-container *ngIf=\"viewMode$ | async as viewMode\">\r\n            <button mat-icon-button (click)=\"toggleViewMode()\" class=\"view-toggle-button\" [matTooltip]=\"(viewMode === 'list' ? 'Grid view' : 'List view') | trans\">\r\n                <mat-icon [svgIcon]=\"viewMode === 'list' ? 'view-list' : 'view-module'\" class=\"action-icon\"></mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-icon-button (click)=\"download()\" *ngIf=\"data.link.allow_download\" [matTooltip]=\"'Download all' | trans\">\r\n            <mat-icon svgIcon=\"file-download\" class=\"action-icon\"></mat-icon>\r\n        </button>\r\n\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n\r\n<ad-host slot=\"ads.file-preview\" class=\"folder-preview-vert-host\"></ad-host>\r\n\r\n<div class=\"files-container\" #filesContainer (click)=\"onClick($event)\">\r\n   <ng-container *ngIf=\"pagination$ | async as pagination\">\r\n       <files-grid [entries]=\"pagination.data\" [disableInteractions]=\"true\" *ngIf=\"(viewMode$ | async) === 'grid'; else filesList\"></files-grid>\r\n       <ng-template #filesList>\r\n           <files-list [entries]=\"pagination.data\" [disableInteractions]=\"true\"></files-list>\r\n       </ng-template>\r\n       <no-results-message *ngIf=\"!pagination.data.length\">\r\n           <span primary-text trans>Folder Is Empty</span>\r\n           <span secondary-text trans>No files have been uploaded to this folder yet.</span>\r\n       </no-results-message>\r\n   </ng-container>\r\n</div>\r\n\r\n<loading-indicator [isVisible]=\"loading$ | async\" class=\"overlay\"></loading-indicator>\r\n","import {\n    Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ElementRef, OnInit, OnChanges, NgZone,\n} from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FilePreviewOverlayComponent } from '../file-preview-overlay/file-preview-overlay.component';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { SortValue } from '../../entries/available-sorts';\nimport { InfiniteScroll } from '@common/core/ui/infinite-scroll/infinite.scroll';\nimport { PaginationResponse } from '@common/core/types/pagination/pagination-response';\nimport { FileEntry } from '@common/uploads/types/file-entry';\nimport { OverlayPanel } from '@common/core/ui/overlay-panel/overlay-panel.service';\nimport { DriveState } from '../../state/drive-state';\n\n@Component({\n    selector: 'folder-preview',\n    templateUrl: './folder-preview.component.html',\n    styleUrls: ['./folder-preview.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FolderPreviewComponent extends InfiniteScroll implements OnChanges, OnInit {\n    @Input() data: GetLinkData;\n    @Input() password: string;\n    @ViewChild('filesContainer', { static: true }) filesContainer: ElementRef<HTMLDivElement>;\n    @Select(DriveState.viewMode) viewMode$: Observable<'list'|'grid'>;\n\n    get folder() {\n        return this.data.link.entry;\n    }\n\n    get children() {\n        return this.pagination$.value.data;\n    }\n\n    public loading$ = new BehaviorSubject(false);\n    public breadcrumb$: BehaviorSubject<FileEntry[]> = new BehaviorSubject([]);\n    public pagination$: BehaviorSubject<PaginationResponse<FileEntry>> = new BehaviorSubject(null);\n    private allFolders = {};\n    public sortFormControl = new FormControl({\n        column: 'updated_at',\n        direction: 'desc',\n    });\n\n    constructor(\n        private store: Store,\n        private overlay: OverlayPanel,\n        private router: Router,\n        private linkApi: ShareableLinksApiService,\n        protected zone: NgZone,\n        protected el: ElementRef,\n    ) {\n        super();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.sortFormControl.valueChanges.subscribe((value: SortValue) => {\n            if (value) {\n                this.loadChildren({}, true);\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.allFolders[this.folder.id] = this.folder;\n        this.generateBreadcrumb(this.folder);\n        this.setPagination(this.data.folderChildren);\n        this.loading$.next(false);\n    }\n\n    public download() {\n        this.store.dispatch(new DownloadEntries([this.folder], this.data.link, this.password));\n    }\n\n    public toggleViewMode() {\n        const current = this.store.selectSnapshot(DriveState.viewMode);\n        this.store.dispatch(new SetViewMode(current === 'list' ? 'grid' : 'list'));\n    }\n\n    private openPreviewOverlay(entry: FileEntry) {\n        const entries = this.children.filter(ent => ent.type !== 'folder'),\n            activeEntry = entries.findIndex(e => e.id === entry.id);\n\n        this.overlay.open(FilePreviewOverlayComponent, {\n            position: 'center',\n            origin: 'global',\n            panelClass: 'file-preview-overlay-container',\n            data: {\n                entries: entries.slice(),\n                activeEntry,\n                shareableLink: this.data.link,\n                password: this.password,\n                hideMoreOptionsBtn: true,\n            }\n        });\n    }\n\n    private getEntry(e: MouseEvent): FileEntry {\n        const node = (e.target as HTMLElement).closest('.drive-entry') as HTMLElement;\n        if (node) {\n            return this.children.find(entry => entry.id === +node.dataset.id);\n        }\n    }\n\n    public onClick(e: MouseEvent) {\n        const entry = this.getEntry(e);\n        if ( ! entry) return;\n\n        if (entry.type === 'folder') {\n            this.openFolder(entry);\n        } else {\n            this.openPreviewOverlay(entry);\n        }\n    }\n\n    public isSubFolder() {\n        return this.router.url.indexOf(':') > -1;\n    }\n\n    public openFolder(folder?: FileEntry) {\n        if (folder && this.folder.id === folder.id) return;\n        this.loading$.next(true);\n        this.router.navigate(['/drive/s', this.makeLinkHash(folder)]).then(() => {\n            // reset sort to default, as there's no good way to\n            // pass current sort to parent link preview component\n            this.sortFormControl.reset();\n        });\n    }\n\n    private generateBreadcrumb(folder: FileEntry) {\n        this.breadcrumb$.next(folder.path.split('/').map(folderId => {\n            return this.allFolders[+folderId];\n        }).filter(subFolder => !!subFolder));\n    }\n\n    private loadChildren(params: {page?: number}, replaceChildren = false) {\n        this.loading$.next(true);\n        const order = `${this.sortFormControl.value.column}:${this.sortFormControl.value.direction}`;\n        const page = params.page || this.pagination$.value.current_page;\n        this.linkApi.findByHash(this.makeLinkHash(this.folder), {page, order, withEntries: true})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                const oldChildren = this.children;\n                const pagination = response.folderChildren;\n                if ( ! replaceChildren) {\n                    pagination.data = [...oldChildren, ...pagination.data];\n                }\n                this.setPagination(pagination);\n            });\n    }\n\n    private makeLinkHash(folder?: FileEntry) {\n        let hash = this.data.link.hash;\n        if (folder) hash += ':' + folder.hash;\n        return hash;\n    }\n\n    private setPagination(pagination: PaginationResponse<FileEntry>) {\n        // add shareable link hash to all entries url to avoid permission errors\n        pagination.data = pagination.data.map(entry => {\n            entry.url += `?shareable_link=${this.data.link.id}`;\n            if (this.password) {\n                entry.url += `&password=${this.password}`;\n            }\n            return entry;\n        });\n        this.pagination$.next(pagination);\n    }\n\n    protected loadMoreItems() {\n        const page = this.pagination$.value.current_page + 1;\n        this.loadChildren({page}, false);\n    }\n\n    protected canLoadMore() {\n        return this.pagination$.value.current_page < this.pagination$.value.last_page;\n    }\n\n    protected isLoading() {\n        return this.loading$.value;\n    }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n    <link-preview-password-panel *ngIf=\"passwordPanelVisible$ | async; else filePreview\" [link]=\"data.link\" (passwordValid)=\"setValidPassword($event)\"></link-preview-password-panel>\n\n    <ng-template #filePreview>\n        <ng-container *ngIf=\"data.link.entry.type === 'folder'\">\n            <folder-preview [data]=\"data\" [password]=\"this.password\">\n                <ng-container *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\">\n                    <span class=\"action-separator\"></span>\n                    <button\n                            mat-flat-button\n                            color=\"accent\"\n                            (click)=\"import()\"\n                            trans\n                    >Import</button>\n                </ng-container>\n            </folder-preview>\n        </ng-container>\n\n        <ng-container *ngIf=\"data.link.entry.type !== 'folder'\">\n            <file-preview-toolbar [showLogo]=\"true\" [disableDownload]=\"!data.link.allow_download\">\n                <a mat-flat-button color=\"accent\" routerLink=\"/login\" *ngIf=\"!currentUser.isLoggedIn()\" trans>Sign In</a>\n                <button\n                        mat-flat-button\n                        color=\"accent\"\n                        (click)=\"import()\"\n                        *ngIf=\"!(entryAlreadyImported$ | async) && currentUser.isLoggedIn()\"\n                        trans\n                >Import</button>\n            </file-preview-toolbar>\n            <ad-host slot=\"ads.file-preview\" class=\"file-preview-vert-host\"></ad-host>\n            <preview-container [files]=\"[data.link.entry]\" [class.has-rek]=\"settings.has('ads.file-preview')\"></preview-container>\n        </ng-container>\n    </ng-template>\n</ng-container>\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy, OnDestroy, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetLinkData, ShareableLinksApiService } from '../../sharing/links/shareable-links-api.service';\nimport { BehaviorSubject, fromEvent, Observable, Subscription } from 'rxjs';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { Settings } from 'common/core/config/settings.service';\nimport { CurrentUser } from 'common/auth/current-user';\nimport { filter, map } from 'rxjs/operators';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { Store } from '@ngxs/store';\nimport { DownloadEntries, SetViewMode } from '../../state/actions/commands';\nimport { ShareableLink } from '../../sharing/links/models/shareable-link';\nimport { VIEW_MODE_KEY } from '../../state/models/drive-state-model';\nimport { LocalStorage } from '@common/core/services/local-storage.service';\n\n@Component({\n    selector: 'link-preview-container',\n    templateUrl: './link-preview-container.component.html',\n    styleUrls: ['./link-preview-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PreviewFilesService,\n    ]\n})\nexport class LinkPreviewContainerComponent implements OnInit, OnDestroy {\n    public data$: BehaviorSubject<GetLinkData> = new BehaviorSubject(null);\n    public passwordPanelVisible$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public password: string;\n    private downloadSub: Subscription;\n\n    /**\n     * Check if current user owns this entry or\n     * already has it imported into their drive.\n     */\n    public get entryAlreadyImported$(): Observable<boolean> {\n        const userId = this.currentUser.get('id');\n        return this.data$.pipe(\n            map(data => data.link),\n            filter(link => !!link && !!link.entry && !!link.entry.users),\n            map(link => link.entry),\n            map(entry => !!entry.users.find(user => user.id === userId))\n        );\n    }\n\n    constructor(\n        private store: Store,\n        private route: ActivatedRoute,\n        private links: ShareableLinksApiService,\n        public previewFiles: PreviewFilesService,\n        public settings: Settings,\n        public currentUser: CurrentUser,\n        private router: Router,\n        private toast: Toast,\n        private el: ElementRef<HTMLElement>,\n        private localStorage: LocalStorage,\n    ) {}\n\n    ngOnInit() {\n        this.bindToDownload();\n        this.disableContextMenu();\n        this.setViewMode();\n        this.route.params.subscribe(params => {\n            this.links.findByHash(params.hash, {withEntries: true}).subscribe(response => {\n                const linkChanged = response.link.id !== (this.data$.value && this.data$.value.link.id);\n                this.data$.next(response);\n                this.setBackgroundClass(response.link);\n\n                // prevent asking password for nested folders, if user already entered password\n                if (response.link.password && (linkChanged || !this.password)) {\n                    this.togglePasswordPanel(true);\n                } else {\n                    this.togglePasswordPanel(false);\n                    this.showPreview();\n                }\n            }, () => {\n                this.router.navigate(['/404']);\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.downloadSub.unsubscribe();\n    }\n\n    public import() {\n        this.links.importEntry(this.data$.value.link.id, this.password)\n            .subscribe(response => {\n                const link = this.data$.value.link;\n                link.entry.users = response.users;\n                this.data$.next({...this.data$.value, link});\n                this.toast.open({\n                    message: `\":name\" imported into your drive.`,\n                    replacements: {name: link.entry.name},\n                });\n            });\n    }\n\n    public togglePasswordPanel(value: boolean) {\n        this.passwordPanelVisible$.next(value);\n    }\n\n    private bindToDownload() {\n        this.downloadSub = this.previewFiles.download.subscribe(() => {\n            const link = this.data$.value.link;\n            this.store.dispatch(new DownloadEntries([link.entry], link, this.password));\n        });\n    }\n\n    /**\n     * Show preview for shareable link files.\n     */\n    private showPreview() {\n        const data = this.data$.value;\n        data.link.entry.url += `?shareable_link=${data.link.id}`;\n        if (this.password) {\n            data.link.entry.url += `&password=${this.password}`;\n        }\n        this.data$.next({...data});\n    }\n\n    public setValidPassword(password: string) {\n        this.password = password;\n        this.showPreview();\n        this.togglePasswordPanel(false);\n    }\n\n    private setBackgroundClass(link: ShareableLink) {\n        const className = link.entry.type === 'folder' ? 'folder-link' : 'file-link';\n        this.el.nativeElement.classList.add(className);\n    }\n\n    private disableContextMenu() {\n        fromEvent(this.el.nativeElement, 'contextmenu')\n            .subscribe(e => {\n                e.preventDefault();\n            });\n    }\n\n    private setViewMode() {\n        this.store.dispatch(new SetViewMode(\n            this.localStorage.get(VIEW_MODE_KEY, this.settings.get('drive.default_view', 'grid')))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriveComponent } from './drive.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { AuthGuard } from 'common/guards/auth-guard.service';\n\nconst dashboardRoutes: Routes = [\n    // shareable links can be accessed by guests\n    {\n        path: 's/:hash',\n        component: LinkPreviewContainerComponent,\n    },\n\n    // main drive routes can only be accessed by logged in users\n    {\n        path: '',\n        component: DriveComponent,\n        canActivate: [AuthGuard],\n        children: [\n            { path: '', component: EntriesContainerComponent},\n            { path: 'shares', component: EntriesContainerComponent},\n            { path: 'search', component: EntriesContainerComponent},\n            { path: 'recent', component: EntriesContainerComponent},\n            { path: 'starred', component: EntriesContainerComponent},\n            { path: 'trash', component: EntriesContainerComponent},\n            { path: 'folders/:hash', component: EntriesContainerComponent},\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(dashboardRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n})\nexport class DriveRoutingModule {}\n","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r2.diameter)(\"stroke-dashoffset\", ctx_r2._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r2._strokeCircumference, \"px\")(\"stroke-width\", ctx_r2._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r2._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r3._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r3._strokeCircumference, \"px\")(\"stroke-width\", ctx_r3._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r3._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { DriveContextMenuComponent } from './components/drive-context-menu/drive-context-menu.component';\r\n\r\nexport const DRIVE_CONTEXT_MENUS = {\r\n    entry: DriveContextMenuComponent,\r\n};\r\n","<file-icon [mime]=\"upload.uploadedFile.mime\"></file-icon>\n<div class=\"content\">\n    <div class=\"meta\">\n        <div class=\"name\" [matTooltip]=\"upload.uploadedFile.name\">{{upload.uploadedFile.name}}</div>\n        <div class=\"time-left\" *ngIf=\"progress.percentage && progress.percentage < 100 && !upload.error$.value\">\n            {{progress.eta}}\n            <span trans>left</span>\n        </div>\n        <div class=\"actions\">\n            <mat-icon\n                    svgIcon=\"error\"\n                    *ngIf=\"upload.error$ | async as error; else noError\"\n                    class=\"error-icon\"\n                    [matTooltip]=\"error | trans\"\n                    matTooltipPosition=\"left\"\n            ></mat-icon>\n            <ng-template #noError>\n                <mat-icon svgIcon=\"check-circle\" *ngIf=\"upload.completed\" class=\"completed-icon\"></mat-icon>\n                <span class=\"cancel-button\" *ngIf=\"!upload.completed\" (click)=\"cancelUpload(upload)\" trans>Cancel</span>\n            </ng-template>\n        </div>\n    </div>\n    <mat-progress-bar mode=\"determinate\" [value]=\"progress.percentage\" color=\"accent\"></mat-progress-bar>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueItem, UploadQueueItemProgress } from 'common/uploads/upload-queue/upload-queue-item';\nimport { UploadQueueService } from '@common/uploads/upload-queue/upload-queue.service';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../../state/actions/commands';\nimport { throttleTime } from 'rxjs/operators';\nimport { animationFrameScheduler, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel-item',\n    templateUrl: './uploads-panel-item.component.html',\n    styleUrls: ['./uploads-panel-item.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelItemComponent implements OnInit, OnDestroy {\n    @Input() upload: UploadQueueItem;\n    public progress: UploadQueueItemProgress = {};\n    private subscription: Subscription;\n\n    constructor(\n        private uploadQueue: UploadQueueService,\n        private store: Store,\n        private cd: ChangeDetectorRef,\n    ) {}\n\n    ngOnInit() {\n        this.subscription = this.upload.progress$.pipe(\n            // material progress bar animation lasts 250ms\n            throttleTime(260, animationFrameScheduler, {leading: true, trailing: true}),\n        ).subscribe(progress => {\n            this.progress = progress;\n            this.cd.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    public cancelUpload(upload: UploadQueueItem) {\n        this.uploadQueue.remove(upload.id);\n        if (this.uploadQueue.isEmpty()) {\n            this.store.dispatch(new CloseUploadsPanel());\n        }\n    }\n}\n","<div class=\"header\">\n    <div class=\"info\">\n        <ng-container *ngIf=\"activeUploads.count$ | async as count\">\n            <ng-container *ngIf=\"count.pending > 0\">\n                {{ 'Uploading' | trans }} {{count.pending}} {{(count.pending > 1 ? 'Items' : 'Item') | trans}}\n            </ng-container>\n            <ng-container *ngIf=\"count.pending === 0\">\n                {{count.completed}} {{'items uploaded' | trans}}\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"actions\">\n        <button mat-icon-button (click)=\"toggleMinimized()\">\n            <mat-icon svgIcon=\"keyboard-arrow-up\" *ngIf=\"minimized$ | async; else notMinimized\" class=\"minimize-icon\"></mat-icon>\n            <ng-template #notMinimized>\n                <mat-icon svgIcon=\"keyboard-arrow-down\" class=\"minimize-icon\"></mat-icon>\n            </ng-template>\n        </button>\n        <button mat-icon-button (click)=\"close()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n        </button>\n    </div>\n</div>\n\n<div class=\"uploads-list\" [class.hidden]=\"minimized$ | async\">\n    <uploads-panel-item *ngFor=\"let upload of activeUploads.uploads$ | async; trackBy: trackById\" [upload]=\"upload\"></uploads-panel-item>\n</div>\n","import { ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { UploadQueueService } from 'common/uploads/upload-queue/upload-queue.service';\nimport { UploadQueueItem } from 'common/uploads/upload-queue/upload-queue-item';\nimport { Store } from '@ngxs/store';\nimport { CloseUploadsPanel } from '../../state/actions/commands';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'uploads-panel',\n    templateUrl: './uploads-panel.component.html',\n    styleUrls: ['./uploads-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadsPanelComponent implements OnDestroy {\n    public minimized$ = new BehaviorSubject(false);\n\n    constructor(\n        private store: Store,\n        public activeUploads: UploadQueueService,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.activeUploads.reset();\n    }\n\n    public toggleMinimized() {\n        this.minimized$.next(!this.minimized$.value);\n    }\n\n    public close() {\n        this.store.dispatch(new CloseUploadsPanel());\n    }\n\n    public trackById(index: number, upload: UploadQueueItem) {\n        return upload.id;\n    }\n}\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { DownloadEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { downloadFileFromUrl } from 'common/uploads/utils/download-file-from-url';\r\nimport { Settings } from 'common/core/config/settings.service';\r\nimport { FileEntry } from '@common/uploads/types/file-entry';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DownloadHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private settings: Settings,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(DownloadEntries))\r\n            .subscribe((action: DownloadEntries) => {\r\n                downloadFileFromUrl(this.getDownloadUrl(action));\r\n            });\r\n    }\r\n\r\n    private getDownloadUrl(action: DownloadEntries): string {\r\n        const hashes = this.getEntryHashes(action.entries);\r\n        let base = `${this.settings.getBaseUrl()}secure/uploads/download?hashes=${hashes}`;\r\n        if (action.link) base += `&shareable_link=${action.link.id}`;\r\n        if (action.password) base += `&password=${action.password}`;\r\n        return base;\r\n    }\r\n\r\n    /**\r\n     * Get hashes string for specified entries or for currently selected entries.\r\n     */\r\n    private getEntryHashes(entries?: FileEntry[]): string {\r\n        if ( ! entries) {\r\n            entries = this.store.selectSnapshot(DriveState.selectedEntries);\r\n        }\r\n\r\n        return entries.map(entry => entry.hash).join(',');\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OpenFilePreview } from '../actions/commands';\r\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { FilePreviewOverlayComponent } from '../../preview/file-preview-overlay/file-preview-overlay.component';\r\nimport { DriveState } from '../drive-state';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class OverlayHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private overlay: OverlayPanel,\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(OpenFilePreview))\r\n            .subscribe((action: OpenFilePreview) => {\r\n                const entries = action.entries || this.selectedEntries();\r\n                this.overlay.open(FilePreviewOverlayComponent, {\r\n                    position: 'center',\r\n                    origin: 'global',\r\n                    panelClass: 'file-preview-overlay-container',\r\n                    data: {entries: entries.slice()},\r\n                });\r\n            });\r\n    }\r\n\r\n    private selectedEntries() {\r\n        return this.store.selectSnapshot(DriveState.selectedEntries);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TextPreviewComponent} from './text-preview/text-preview.component';\r\nimport {AVAILABLE_PREVIEWS, DefaultPreviews} from './available-previews';\r\nimport {PreviewContainerComponent} from './preview-container/preview-container.component';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {VideoPreviewComponent} from './video-preview/video-preview.component';\r\nimport {ImagePreviewComponent} from './image-preview/image-preview.component';\r\nimport {PdfPreviewComponent} from './pdf-preview/pdf-preview.component';\r\nimport {DefaultPreviewComponent} from './default-preview/default-preview.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {AudioPreviewComponent} from './audio-preview/audio-preview.component';\r\nimport {GoogleDocsViewerComponent} from './google-docs-viewer/google-docs-viewer.component';\r\nimport {LoadingIndicatorModule} from '@common/core/ui/loading-indicator/loading-indicator.module';\r\nimport {OverlayPanel} from '@common/core/ui/overlay-panel/overlay-panel.service';\r\nimport {PreviewFilesService} from '@common/file-preview/preview-files.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        // material\r\n        PortalModule,\r\n        MatButtonModule,\r\n        LoadingIndicatorModule,\r\n    ],\r\n    exports: [\r\n        PreviewContainerComponent,\r\n    ],\r\n    declarations: [\r\n        PreviewContainerComponent,\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent\r\n    ],\r\n    entryComponents: [\r\n        TextPreviewComponent,\r\n        VideoPreviewComponent,\r\n        ImagePreviewComponent,\r\n        PdfPreviewComponent,\r\n        DefaultPreviewComponent,\r\n        AudioPreviewComponent,\r\n        GoogleDocsViewerComponent,\r\n    ],\r\n    providers: [\r\n        OverlayPanel,\r\n        PreviewFilesService,\r\n        {provide: AVAILABLE_PREVIEWS, useClass: DefaultPreviews},\r\n    ]\r\n})\r\nexport class FilePreviewModule {\r\n}\r\n","import { Actions, ofAction, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { AddStar, HideLoadingToast, RemoveStar, RestoreTrashedEntries, ShowLoadingToast } from '../actions/commands';\r\nimport {\r\n    EntryRenamed,\r\n    FileDeleteSuccess,\r\n    MoveEntriesFailed,\r\n    MoveEntriesSuccess,\r\n    NewFolderCreated, NotEnoughSpaceError,\r\n    TrashedEntriesDeleteSuccess,\r\n    TrashedEntriesRestoreSuccess\r\n} from '../actions/events';\r\nimport { Toast } from 'common/core/ui/toast.service';\r\nimport { LinkCopySuccess } from '../../sharing/links/share-link.state';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingToastComponent } from '../../messages/loading-toast/loading-toast.component';\r\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ToastHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private toast: Toast,\r\n        private store: Store,\r\n        private router: Router,\r\n    ) {\r\n        this.entriesDeleted();\r\n        this.entriesStarred();\r\n        this.entriesUnstarred();\r\n        this.entriesMoveFailed();\r\n        this.folderCreated();\r\n        this.entriesMoved();\r\n        this.entriesDeletedForever();\r\n        this.entriesRestoredFromTrash();\r\n        this.entryRenamed();\r\n        this.linkCopiedToClipboard();\r\n        this.notEnoughSpace();\r\n        this.loadingToast();\r\n    }\r\n\r\n    private entriesDeleted() {\r\n        this.actions$\r\n            .pipe(ofAction(FileDeleteSuccess))\r\n            .subscribe((action: FileDeleteSuccess) => {\r\n                const msg = {message: `Deleted :count items.`, replacements: {count: action.deletedFiles.length}};\r\n                this.toast.open(msg, {action: 'UNDO'})\r\n                    .onAction().subscribe(() => {\r\n                        this.store.dispatch(new RestoreTrashedEntries(action.deletedFiles));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesStarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(AddStar))\r\n            .subscribe((action: AddStar) => {\r\n                this.toast.open(`Star added.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new RemoveStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesUnstarred() {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(RemoveStar))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.toast.open(`Star Removed.`, {action: 'UNDO'}).onAction()\r\n                    .subscribe(() => {\r\n                        this.store.dispatch(new AddStar(action.entries));\r\n                    });\r\n            });\r\n    }\r\n\r\n    private entriesMoved() {\r\n        this.actions$.pipe(ofAction(MoveEntriesSuccess))\r\n            .subscribe((action: MoveEntriesSuccess) => {\r\n                this.toast.open(\r\n                    {message: 'Moved :count items.', replacements: {count: action.entries.length}}\r\n                );\r\n            });\r\n    }\r\n\r\n    private entriesMoveFailed() {\r\n        this.actions$.pipe(ofAction(MoveEntriesFailed))\r\n            .subscribe(() => {\r\n                this.toast.open('There was an issue with moving selected items.');\r\n            });\r\n    }\r\n\r\n    private folderCreated() {\r\n        this.actions$.pipe(ofAction(NewFolderCreated))\r\n            .subscribe(() => {\r\n                this.toast.open('Folder created.');\r\n            });\r\n    }\r\n\r\n    private entriesDeletedForever() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesDeleteSuccess))\r\n            .subscribe((action: TrashedEntriesDeleteSuccess) => {\r\n                this.toast.open({\r\n                    message: `Permanently deleted :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entriesRestoredFromTrash() {\r\n        this.actions$.pipe(ofActionSuccessful(TrashedEntriesRestoreSuccess))\r\n            .subscribe((action: TrashedEntriesRestoreSuccess) => {\r\n                this.toast.open({\r\n                    message: `Restored :count items.`,\r\n                    replacements: {count: action.entries.length}\r\n                });\r\n            });\r\n    }\r\n\r\n    private entryRenamed() {\r\n        this.actions$.pipe(ofActionSuccessful(EntryRenamed))\r\n            .subscribe((action: EntryRenamed) => {\r\n                this.toast.open({\r\n                    message: `:oldName renamed to :newName`,\r\n                    replacements: {oldName: action.entry.name, newName: action.newName}\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    private linkCopiedToClipboard() {\r\n        this.actions$.pipe(ofActionSuccessful(LinkCopySuccess))\r\n            .subscribe(() => {\r\n                this.toast.open(`Link copied to clipboard.`);\r\n            });\r\n    }\r\n\r\n    private notEnoughSpace() {\r\n        this.actions$.pipe(ofActionSuccessful(NotEnoughSpaceError))\r\n            .subscribe(() => {\r\n                this.toast.open(`You are out of space. Try to delete some files.`, {action: 'Upgrade'})\r\n                    .onAction().subscribe(() => {\r\n                        this.router.navigate(['/billing/upgrade']);\r\n                    });\r\n            });\r\n    }\r\n\r\n    private loadingToast() {\r\n        let toastRef: MatSnackBarRef<any>;\r\n\r\n        this.actions$.pipe(ofActionSuccessful(ShowLoadingToast))\r\n            .subscribe((action: ShowLoadingToast) => {\r\n                toastRef = this.toast.openComponent(LoadingToastComponent, {duration: 0, data: {message: action.message}});\r\n            });\r\n\r\n        this.actions$.pipe(ofActionSuccessful(HideLoadingToast))\r\n            .subscribe(() => {\r\n                if (toastRef) {\r\n                    toastRef.dismiss();\r\n                    toastRef = null;\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'loading-toast',\n    templateUrl: './loading-toast.component.html',\n    styleUrls: ['./loading-toast.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingToastComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: {message: string}) {}\n}\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { CloseUploadsPanel, OpenUploadsPanel } from '../actions/commands';\r\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\r\nimport { UploadsPanelComponent } from '../../uploads/uploads-panel/uploads-panel.component';\r\nimport { OverlayPanelRef } from 'common/core/ui/overlay-panel/overlay-panel-ref';\r\nimport { CurrentUser } from 'common/auth/current-user';\r\nimport { OverlayPanelConfig } from 'common/core/ui/overlay-panel/overlay-panel-config';\nimport { Injectable } from \"@angular/core\";\r\n\r\nconst overlayConfig: OverlayPanelConfig = {\r\n    origin: 'global',\r\n    hasBackdrop: false,\r\n    position: {right: '10px', bottom: '10px'},\r\n    mobilePosition: {left: 0, bottom: 0}\r\n};\r\n\r\n@Injectable()\nexport class UploadPanelHandler {\r\n    private uploadPanelRef: OverlayPanelRef;\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n        private overlayPanel: OverlayPanel,\r\n    ) {\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(OpenUploadsPanel))\r\n            .subscribe(() => {\r\n                this.openUploadsPanel();\r\n            });\r\n\r\n        this.actions$\r\n            .pipe(ofActionSuccessful(CloseUploadsPanel))\r\n            .subscribe(() => {\r\n               this.closeUploadsPanel();\r\n            });\r\n\r\n        this.currentUser.model$.subscribe(() => {\r\n            this.closeUploadsPanel();\r\n        });\r\n    }\r\n\r\n    public openUploadsPanel() {\r\n        if (this.uploadPanelRef) return;\r\n        this.uploadPanelRef = this.overlayPanel\r\n            .open(UploadsPanelComponent, overlayConfig);\r\n    }\r\n\r\n    private closeUploadsPanel() {\r\n        if ( ! this.uploadPanelRef) return;\r\n        this.uploadPanelRef.close();\r\n        this.uploadPanelRef = null;\r\n    }\r\n}\r\n","import { Actions, ofActionDispatched, Store } from '@ngxs/store';\r\nimport { OpenConfirmDialog, OpenDialog } from '../actions/commands';\r\nimport { NgZone, Injectable } from '@angular/core';\r\nimport { Modal } from 'common/core/ui/dialogs/modal.service';\r\nimport { ConfirmModalComponent } from 'common/core/ui/confirm-modal/confirm-modal.component';\r\n\r\n@Injectable()\nexport class DialogHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dialog: Modal,\r\n        private zone: NgZone,\r\n        private store: Store,\r\n    ) {\r\n        this.actions$.pipe(ofActionDispatched(OpenDialog))\r\n            .subscribe((action: OpenDialog) => {\r\n                this.dialog.open(action.dialog, action.data, action.config);\r\n            });\r\n\r\n        this.actions$.pipe(ofActionDispatched(OpenConfirmDialog))\r\n            .subscribe((action: OpenConfirmDialog) => {\r\n                this.openConfirmDialog(action);\r\n            });\r\n    }\r\n\r\n    private openConfirmDialog(action: OpenConfirmDialog) {\r\n        this.dialog.open(ConfirmModalComponent, action.data)\r\n            .beforeClosed()\r\n            .subscribe(confirmed => {\r\n                if ( ! confirmed) return;\r\n                return this.store.dispatch(action.confirmAction);\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RemoveEntries, RemoveStar } from '../actions/commands';\r\nimport { filter } from 'rxjs/operators';\r\nimport { DriveState } from '../drive-state';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class RemoveStarHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(RemoveStar))\r\n            .pipe(filter(() => {\r\n                const name = this.store.selectSnapshot(DriveState.activePage).name;\r\n                return name === DRIVE_PAGE_NAMES.RECENT;\r\n            }))\r\n            .subscribe((action: RemoveStar) => {\r\n                this.store.dispatch(new RemoveEntries(action.entries));\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { RouterNavigation, RouterState } from '@ngxs/router-plugin';\r\nimport {\r\n    FolderPageOpened,\r\n    RecentEntriesPageOpened, SearchPageOpened,\r\n    SharesFolderOpened,\r\n    StarredPageOpened,\r\n    TrashPageOpened\r\n} from '../actions/events';\r\nimport { DrivePageType } from '../models/available-pages';\r\nimport { DRIVE_PAGE_NAMES } from '../models/drive-page';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CurrentUser } from 'common/auth/current-user';\nimport { Injectable } from \"@angular/core\";\r\n\r\nconst LINK_PREVIEW_PAGE = 's';\r\n\r\n@Injectable()\nexport class PageLoadHandler {\r\n    constructor(\r\n        private store: Store,\r\n        private actions$: Actions,\r\n        private currentUser: CurrentUser,\r\n    ) {\r\n        this.actions$\r\n            .pipe(\r\n                ofActionSuccessful(RouterNavigation),\r\n                filter((action: RouterNavigation) => action.event.urlAfterRedirects.indexOf('drive') > -1),\r\n                filter(() => this.currentUser.isLoggedIn()),\r\n            )\r\n            .subscribe(() => {\r\n                const action = this.getPageLoadAction();\r\n                if (action) this.store.dispatch(action);\r\n            });\r\n    }\r\n\r\n    private getPageLoadAction() {\r\n        const params = this.getPageUriParams();\r\n\r\n        switch (params.pageName) {\r\n            case DRIVE_PAGE_NAMES.RECENT:\r\n                return new RecentEntriesPageOpened();\r\n            case DRIVE_PAGE_NAMES.TRASH:\r\n                return new TrashPageOpened();\r\n            case DRIVE_PAGE_NAMES.SHARES:\r\n                return new SharesFolderOpened();\r\n            case DRIVE_PAGE_NAMES.STARRED:\r\n                return new StarredPageOpened();\r\n            case DRIVE_PAGE_NAMES.SEARCH:\r\n                const state = this.store.selectSnapshot(RouterState.state),\r\n                    search = state.root.firstChild.queryParams;\r\n                return new SearchPageOpened({type: search.type, query: search.query});\r\n            case LINK_PREVIEW_PAGE:\r\n                return null;\r\n            default:\r\n                return new FolderPageOpened(params.folderHash || 'root');\r\n        }\r\n    }\r\n\r\n    private getPageUriParams() {\r\n        // remove query params\r\n        const uri = this.store.selectSnapshot(RouterState.url).split('?')[0];\r\n\r\n        // current drive uri parts\r\n        let parts = uri.split('/');\r\n\r\n        // remove empty parts\r\n        parts = parts.filter(x => !!x);\r\n\r\n        return {pageName: parts[1] as DrivePageType|string, folderHash: parts[2]};\r\n    }\r\n}\r\n","import { Store } from '@ngxs/store';\r\nimport { DeselectAllEntries } from '../actions/commands';\r\nimport { DriveState } from '../drive-state';\r\nimport { filter } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class PageChangeHandler {\r\n    constructor(\r\n        private store: Store\r\n    ) {\r\n        this.store.select(DriveState.activePage)\r\n            .pipe(filter(page => !!page))\r\n            .subscribe(() => {\r\n                this.store.dispatch(new DeselectAllEntries());\r\n            });\r\n    }\r\n}\r\n","import { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { ReloadPageEntries } from '../actions/commands';\r\nimport { DriveDomCacheService } from '../../interactions/drive-dom-cache.service';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class ResetScrollHandler {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private domCache: DriveDomCacheService\r\n    ) {\r\n        this.actions$.pipe(ofActionSuccessful(ReloadPageEntries))\r\n            .subscribe(() => {\r\n                this.domCache.scrollCont.scrollTo({top: 0});\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharingPermissionsButtonComponent } from './sharing-permissions-button/sharing-permissions-button.component';\nimport { ShareDialogComponent } from './share-dialog/share-dialog.component';\nimport { EntriesAccessTableComponent } from './entries-access-table/entries-access-table.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ChipInputModule } from 'common/core/ui/chip-input/chip-input.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LinkOptionsComponent } from './links/link-options/link-options.component';\nimport { ShareLinkDialogComponent } from './share-link-dialog/share-link-dialog.component';\nimport { NoSharedEntriesComponent } from './no-shared-entries/no-shared-entries.component';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        TranslationsModule,\n        LoadingIndicatorModule,\n\n        // material\n        MatSlideToggleModule,\n        MatTabsModule,\n        MatDialogModule,\n        ChipInputModule,\n        MatIconModule,\n        MatMenuModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n    ],\n    declarations: [\n        ShareDialogComponent,\n        EntriesAccessTableComponent,\n        SharingPermissionsButtonComponent,\n        LinkOptionsComponent,\n        ShareLinkDialogComponent,\n        NoSharedEntriesComponent,\n    ],\n    exports: [\n        NoSharedEntriesComponent,\n    ],\n    providers: [\n        Modal,\n    ]\n})\nexport class SharingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ContextMenuDirective} from '@common/core/ui/context-menu/context-menu.directive';\n\n\n@NgModule({\n    declarations: [\n        ContextMenuDirective,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ContextMenuDirective,\n    ]\n})\nexport class ContextMenuModule {\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DriveRoutingModule } from './drive-routing.module';\nimport { DriveComponent } from './drive.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FoldersTreeComponent } from './sidebar/folders-tree/folders-tree.component';\nimport { FilesGridComponent } from './files/components/files-grid/files-grid.component';\nimport { FileThumbnailComponent } from './files/components/file-thumbnail/file-thumbnail.component';\nimport { FilesGridItemComponent } from './files/components/files-grid/files-grid-item/files-grid-item.component';\nimport { DriveHammerInteractionsDirective } from './interactions/drive-hammer-interactions.directive';\nimport { FileIconComponent } from './files/components/file-icon/file-icon.component';\nimport { AVAILABLE_CONTEXT_MENUS } from 'common/core/ui/context-menu/available-context-menus';\nimport { DRIVE_CONTEXT_MENUS } from './context-actions/drive-context-menus';\nimport { DriveContextMenuComponent } from './context-actions/components/drive-context-menu/drive-context-menu.component';\nimport { SidebarActionButtonsComponent } from './sidebar/sidebar-action-buttons/sidebar-action-buttons.component';\nimport { CrupdateFolderDialogComponent } from './folders/components/crupdate-folder-dialog/crupdate-folder-dialog.component';\nimport { RenameEntryDialogComponent } from './entries/rename-entry-dialog/rename-entry-dialog.component';\nimport { EntryDragPreviewComponent } from './interactions/entry-drag-preview/entry-drag-preview.component';\nimport { EntryBreadcrumbsComponent } from './drive-toolbar/entry-breadcrumbs/entry-breadcrumbs.component';\nimport { UploadsPanelComponent } from './uploads/uploads-panel/uploads-panel.component';\nimport { UploadsModule } from 'common/uploads/uploads.module';\nimport { MoveEntriesDialogComponent } from './entries/move-entries-dialog/move-entries-dialog.component';\nimport { FolderDropTargetDirective } from './interactions/drop-targets/folder-drop-target.directive';\nimport { DriveToolbarComponent } from './drive-toolbar/drive-toolbar.component';\nimport { ToolbarActionsComponent } from './drive-toolbar/toolbar-actions/toolbar-actions.component';\nimport { MainSearchbarComponent } from './search/main-searchbar/main-searchbar.component';\nimport { UploadDropzoneComponent } from './uploads/upload-dropzone/upload-dropzone.component';\nimport { EntriesContainerComponent } from './entries/entries-container/entries-container.component';\nimport { DetailsPanelComponent } from './details-sidebar/details-panel/details-panel.component';\nimport { FilePreviewOverlayComponent } from './preview/file-preview-overlay/file-preview-overlay.component';\nimport { FilePreviewModule } from 'common/file-preview/file-preview.module';\nimport { FilePreviewToolbarComponent } from './preview/file-preview-overlay/file-preview-toolbar/file-preview-toolbar.component';\nimport { OverlayHandler } from './state/handlers/overlay-handler';\nimport { DownloadHandler } from './state/handlers/donwlod-handler';\nimport { ToastHandler } from './state/handlers/toast-handler';\nimport { UploadPanelHandler } from './state/handlers/upload-panel-handler';\nimport { DialogHandler } from './state/handlers/dialog-handler';\nimport { SharingModule } from './sharing/sharing.module';\nimport { DetailsSidebarComponent } from './details-sidebar/details-sidebar.component';\nimport { FileListHeaderComponent } from './header/file-list-header/file-list-header.component';\nimport { DriveInfiniteScrollDirective } from './interactions/drive-infinite-scroll.directive';\nimport { ResetScrollHandler } from './state/handlers/reset-scroll-handler';\nimport { FilesListComponent } from './files/components/files-list/files-list.component';\nimport { ToggleSelectedClassDirective } from './interactions/toggle-selected-class.directive';\nimport { PageChangeHandler } from './state/handlers/page-change-handler';\nimport { PageLoadHandler } from './state/handlers/page-load-handler';\nimport { RemoveStarHandler } from './state/handlers/remove-star-handler';\nimport { NoFolderEntriesComponent } from './messages/no-folder-entries/no-folder-entries.component';\nimport { NoTrashedEntriesComponent } from './messages/no-trashed-entries/no-trashed-entries.component';\nimport { NoStarredEntriesComponent } from './messages/no-starred-entries/no-starred-entries.component';\nimport { NoRecentEntriesComponent } from './messages/no-recent-entries/no-recent-entries.component';\nimport { UploadsPanelItemComponent } from './uploads/uploads-panel/uploads-panel-item/uploads-panel-item.component';\nimport { NgxsModule } from '@ngxs/store';\nimport { ShareDialogState } from './sharing/state/share-dialog.state';\nimport { ShareLinkState } from './sharing/links/share-link.state';\nimport { DriveState } from './state/drive-state';\nimport { Settings } from 'common/core/config/settings.service';\nimport { ContextMenu } from 'common/core/ui/context-menu/context-menu.service';\nimport { UploadInputConfig } from 'common/uploads/upload-input-config';\nimport { OverlayPanel } from 'common/core/ui/overlay-panel/overlay-panel.service';\nimport { PreviewFilesService } from 'common/file-preview/preview-files.service';\nimport { AvailableSpaceIndicatorComponent } from './sidebar/available-space-indicator/available-space-indicator.component';\nimport { LoadingToastComponent } from './messages/loading-toast/loading-toast.component';\nimport { Toast } from 'common/core/ui/toast.service';\nimport { LinkPreviewContainerComponent } from './preview/link-preview-container/link-preview-container.component';\nimport { LinkPreviewPasswordPanelComponent } from './preview/link-preview-container/link-preview-password-panel/link-preview-password-panel.component';\nimport { ContextActionsContainerComponent } from './context-actions/components/context-actions-container/context-actions-container.component';\nimport { DRIVE_UPLOAD_INPUT_CONFIG } from './upload-input-config';\nimport { NoSearchEntriesComponent } from './messages/no-search-entries/no-search-entries.component';\nimport { EntryDescriptionPanelComponent } from './details-sidebar/details-panel/entry-description-panel/entry-description-panel.component';\nimport { FolderPreviewComponent } from './preview/folder-preview/folder-preview.component';\nimport { EntriesSortButtonComponent } from './header/entries-sort-button/entries-sort-button.component';\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { TranslationsModule } from '@common/core/translations/translations.module';\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\nimport { ContextMenuModule } from '@common/core/ui/context-menu/context-menu.module';\nimport { AdHostModule } from '@common/core/ui/ad-host/ad-host.module';\n\nexport const STATE_HANDLERS = [\n    OverlayHandler,\n    DownloadHandler,\n    ToastHandler,\n    UploadPanelHandler,\n    DialogHandler,\n    ResetScrollHandler,\n    PageChangeHandler,\n    PageLoadHandler,\n    RemoveStarHandler,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UploadsModule,\n        DriveRoutingModule,\n        FilePreviewModule,\n        FormsModule,\n        SharingModule,\n        MaterialNavbarModule,\n        TranslationsModule,\n        FormatPipesModule,\n        ReactiveFormsModule,\n        NoResultsMessageModule,\n        LoadingIndicatorModule,\n        ContextMenuModule,\n        AdHostModule,\n\n        // material\n        MatSidenavModule,\n        MatTreeModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatTableModule,\n        MatSortModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n\n        // state\n        NgxsModule.forFeature([\n            DriveState,\n            ShareDialogState,\n            ShareLinkState,\n        ]),\n    ],\n    declarations: [\n        DriveComponent,\n        SidebarComponent,\n        FoldersTreeComponent,\n        FilesGridComponent,\n        FileThumbnailComponent,\n        DriveHammerInteractionsDirective,\n        FilesGridItemComponent,\n        FileIconComponent,\n        DriveContextMenuComponent,\n        SidebarActionButtonsComponent,\n        CrupdateFolderDialogComponent,\n        RenameEntryDialogComponent,\n        EntryDragPreviewComponent,\n        DriveToolbarComponent,\n        EntryBreadcrumbsComponent,\n        UploadsPanelComponent,\n        MoveEntriesDialogComponent,\n        FolderDropTargetDirective,\n        ToolbarActionsComponent,\n        MainSearchbarComponent,\n        UploadDropzoneComponent,\n        NoFolderEntriesComponent,\n        NoTrashedEntriesComponent,\n        NoStarredEntriesComponent,\n        NoRecentEntriesComponent,\n        NoSearchEntriesComponent,\n        EntriesContainerComponent,\n        DetailsSidebarComponent,\n        DetailsPanelComponent,\n        FilePreviewOverlayComponent,\n        FilePreviewToolbarComponent,\n        FileListHeaderComponent,\n        DriveInfiniteScrollDirective,\n        FilesListComponent,\n        ToggleSelectedClassDirective,\n        UploadsPanelItemComponent,\n        AvailableSpaceIndicatorComponent,\n        LoadingToastComponent,\n        LinkPreviewContainerComponent,\n        LinkPreviewPasswordPanelComponent,\n        ContextActionsContainerComponent,\n        EntryDescriptionPanelComponent,\n        FolderPreviewComponent,\n        EntriesSortButtonComponent,\n    ],\n    providers: [\n        // fix angular lazy loaded entry components issue\n        ContextMenu,\n        OverlayPanel,\n        PreviewFilesService,\n        Toast,\n\n        // handlers\n        ...STATE_HANDLERS,\n        {\n            provide: AVAILABLE_CONTEXT_MENUS,\n            useValue: DRIVE_CONTEXT_MENUS,\n            multi: true,\n        },\n        {\n            provide: DRIVE_UPLOAD_INPUT_CONFIG,\n            deps: [Settings],\n            useFactory: (settings) => {\n                const uploadInputConfig: UploadInputConfig = {multiple: true};\n\n                const extensions = settings.getJson('drive.validation.allowed_extensions');\n                if (extensions) {\n                    uploadInputConfig.extensions = extensions.map(ext => '.' + ext);\n                }\n\n                return uploadInputConfig;\n            },\n        },\n    ]\n})\nexport class DriveModule {\n    constructor(private injector: Injector) {\n        STATE_HANDLERS.forEach(handler => this.injector.get(handler));\n    }\n}\n","/**\r\n * Download file from specified url.\r\n */\r\nexport function downloadFileFromUrl(url: string, name?: string) {\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    if (name) link.download = name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n}\r\n","<mat-spinner [diameter]=\"30\"></mat-spinner>\r\n<span trans>{{ data.message }}</span>","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r16.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r16.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const tab_r16 = ctx.$implicit; const i_r17 = ctx.index; const ctx_r23 = ɵngcc0.ɵɵnextContext(); const _r12 = ɵngcc0.ɵɵreference(1); return ctx_r23._handleClick(tab_r16, _r12, i_r17); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r16 = ctx.$implicit;\n    const i_r17 = ctx.index;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r13.selectedIndex == i_r17);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r13._getTabLabelId(i_r17))(\"disabled\", tab_r16.disabled)(\"matRippleDisabled\", tab_r16.disabled || ctx_r13.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r13._getTabIndex(tab_r16, i_r17))(\"aria-posinset\", i_r17 + 1)(\"aria-setsize\", ctx_r13._tabs.length)(\"aria-controls\", ctx_r13._getTabContentId(i_r17))(\"aria-selected\", ctx_r13.selectedIndex == i_r17)(\"aria-label\", tab_r16.ariaLabel || null)(\"aria-labelledby\", !tab_r16.ariaLabel && tab_r16.ariaLabelledby ? tab_r16.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r16.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r16.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r25 = ctx.$implicit;\n    const i_r26 = ctx.index;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r15.selectedIndex == i_r26);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r15._getTabContentId(i_r26))(\"content\", tab_r25.content)(\"position\", tab_r25.position)(\"origin\", tab_r25.origin)(\"animationDuration\", ctx_r15.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r15._getTabLabelId(i_r26));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n        ɵngcc0.ɵɵviewQuery(_c7, true);\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 6, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n//# sourceMappingURL=tabs.js.map","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"]}